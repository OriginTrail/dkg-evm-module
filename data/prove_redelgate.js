// scripts/prove-redelegate.js
const { Interface, id } = require('ethers');

// ------------------------------------------------------------------
// RAW calldata: ako се проследи као CLI аргумент, користи се та вредност;
// иначе баца грешку – нема више хард-кодираних вредности.
// ------------------------------------------------------------------

const raw =
  '0x1fad948c' +
  '0000000000000000000000000000000000000000000000000000000000000040' +
  '0000000000000000000000001984c070e64e561631a7e20ea3c4cbf4eb198da8' +
  '0000000000000000000000000000000000000000000000000000000000000002' +
  '0000000000000000000000000000000000000000000000000000000000000040' +
  '00000000000000000000000000000000000000000000000000000000000005c0' +
  '00000000000000000000000081c2cfa0a0f26bf4043b68c5779867cbb8f8970c' +
  '0000000000000000000000000000000000000000000000000000000000000012' +
  '0000000000000000000000000000000000000000000000000000000000000160' +
  '0000000000000000000000000000000000000000000000000000000000000180' +
  '00000000000000000000000000000000000000000000000000000000000045e0' +
  '000000000000000000000000000000000000000000000000000000000001687a' +
  '00000000000000000000000000000000000000000000000000000000015fae16' +
  '00000000000000000000000000000000000000000000000000000000007b4b1e' +
  '00000000000000000000000000000000000000000000000000000000000f4240' +
  '0000000000000000000000000000000000000000000000000000000000000400' +
  '0000000000000000000000000000000000000000000000000000000000000500' +
  '0000000000000000000000000000000000000000000000000000000000000000' +
  '0000000000000000000000000000000000000000000000000000000000000244' +
  'b61d27f6000000000000000000000000974474c8bcb36302be93858466728271' +
  'fb36544e00000000000000000000000000000000000000000000000000000000' +
  '0000000000000000000000000000000000000000000000000000000000000000' +
  '0000006000000000000000000000000000000000000000000000000000000000' +
  '000001a48c7a3e2c000000000000000000000000000000000000000000000000' +
  '0000000000000060000000000000000000000000000000000000000000000000' +
  '00000000000000c0000000000000000000000000000000000000000000000000' +
  '0000000000000100000000000000000000000000000000000000000000000000' +
  '000000000000002438653832376466392d656335392d343562392d393461642d' +
  '6531623439626162313936650000000000000000000000000000000000000000' +
  '0000000000000000000000000000000000000000000000000000000000000000' +
  '000000000000000867616d654c6f616400000000000000000000000000000000' +
  '0000000000000000000000000000000000000000000000000000000000000000' +
  '0000000000000080b71c755b47dda53ea53419bd88a214c19035b1e706bf2a28' +
  '8a1b98bfdfa208ad754baeea93553ba856632f743671c6eeedb614b9fda7d091' +
  'ead6f19d0f3891438fdc937212fddd82d328554f311475af5c71be291a9dca47' +
  'a8eb7352cdb081c354d5bcf212434c83bded0c8a8bb6e0ebdab804c0298118ef' +
  '0f9fae7ad1ff8d25000000000000000000000000000000000000000000000000' +
  '0000000000000000000000000000000000000000000000000000000000000000' +
  '00000000000000000000000000000000000000000000000000000000000000c2' +
  '2faeb0760d4230ef2ac21496bb4f0b47d634fd4c0000677162af000000000000' +
  '86decd55ee22438fbec1e0d2c047d08500010000000000000000000000000000' +
  '0000000000000000000000000000000000000000000000000000000000000000' +
  '0000000000000000000000000000000000000000000000000000000000000069' +
  '788480a3bcd59ab27198ca32d9c4306bbba168002586d709215a767353c4930b' +
  'a70fd9ed75b8188b311b695b5aee6341178e114278c929e17f6c40c9b9fd76fc' +
  'a41b000000000000000000000000000000000000000000000000000000000000' +
  '0000000000000000000000000000000000000000000000000000000000000041' +
  'dc0a550d37dc254d9c03f2574a1424079358cca633f6bb9a46f6a980e4b1ef0a' +
  '5f8876c2db44980eb4b1fc5a691f50e228489f592855ff817cc548cd7df6a760' +
  '1b00000000000000000000000000000000000000000000000000000000000000' +
  '000000000000000000000000047d912410759a0824cfad69a134df0172dbc067' +
  '0000000000000000000000000000000000000000000000000000000000000002' +
  '0000000000000000000000000000000000000000000000000000000000000160' +
  '0000000000000000000000000000000000000000000000000000000000000180' +
  '000000000000000000000000000000000000000000000000000000000007dbf9' +
  '000000000000000000000000000000000000000000000000000000000008a29c' +
  '0000000000000000000000000000000000000000000000000000000000d27356' +
  '00000000000000000000000000000000000000000000000000000000008433d9' +
  '00000000000000000000000000000000000000000000000000000000000f4240' +
  '0000000000000000000000000000000000000000000000000000000000000300' +
  '0000000000000000000000000000000000000000000000000000000000000320' +
  '0000000000000000000000000000000000000000000000000000000000000000' +
  '0000000000000000000000000000000000000000000000000000000000000154' +
  '34fcd5be00000000000000000000000000000000000000000000000000000000' +
  '0000002000000000000000000000000000000000000000000000000000000000' +
  '0000000100000000000000000000000000000000000000000000000000000000' +
  '00000020000000000000000000000000d5ed8eab35536f8c33c3812808744121' +
  '8df65b1c00000000000000000000000000000000000000000000000000000000' +
  '0000000000000000000000000000000000000000000000000000000000000000' +
  '0000006000000000000000000000000000000000000000000000000000000000' +
  '000000447cba7353000000000000000000000000000000000000000000000000' +
  '0000000000000026000000000000000000000000000000000000000000000070' +
  'f2f7fa25471b6468000000000000000000000000000000000000000000000000' +
  '00000000e15b0a8c44ecad456533d0110ead2ce0000000000000000000000000' +
  '0000000000000000000000000000000000000000000000000000000000000000' +
  '00000000000000000000000000000000000000000000000000000000000002e0' +
  '0000000000000000000000000000000000000000000000000000000000000020' +
  '0000000000000000000000000000000000000000000000000000000000000000' +
  '0000000000000000000000000000000000000000000000000000000000000040' +
  '0000000000000000000000000000000000000000000000000000000000000260' +
  '0000000000000000000000000000000000000000000000000000000000000020' +
  '00000000000000000000000000000000000000000000000000000000000000c0' +
  '0000000000000000000000000000000000000000000000000000000000000120' +
  '0000000000000000000000000000000000000000000000000000000000000017' +
  '0000000000000000000000000000000000000000000000000000000000000001' +
  'a8bf5a8e84a44d3306ae50f50a861ad4d1c4501512dd19b78e69f4d0e12aa23f' +
  '6ec776cc6130e167e0670bc4bd24a2b0fcae838976d60b4146a5aa660812b080' +
  '0000000000000000000000000000000000000000000000000000000000000025' +
  'f198086b2db17256731bc456673b96bcef23f51d1fbacdd7c4379ef65465572f' +
  '1d00000000000000000000000000000000000000000000000000000000000000' +
  '00000000000000000000000000000000000000000000000000000000000000f7' +
  '7b2274797065223a22776562617574686e2e676574222c226368616c6c656e67' +
  '65223a2271306358455a385f543232446f6f353372566d4c7a4e496947303542' +
  '73616d385762483670664a725f4363222c226f726967696e223a226874747073' +
  '3a2f2f6b6579732e636f696e626173652e636f6d222c2263726f73734f726967' +
  '696e223a66616c73652c226f746865725f6b6579735f63616e5f62655f616464' +
  '65645f68657265223a22646f206e6f7420636f6d7061726520636c69656e7444' +
  '6174614a534f4e20616761696e737420612074656d706c6174652e2053656520' +
  '68747470733a2f2f676f6f2e676c2f796162506578227d000000000000000000';

const entry = new Interface([
  'function handleOps((address sender, uint256 nonce, bytes initCode, bytes callData, uint256 callGasLimit, uint256 verificationGasLimit, uint256 preVerificationGas, uint256 maxFeePerGas, uint256 maxPriorityFeePerGas, bytes paymasterAndData, bytes signature)[] ops, address beneficiary)',
]);

// 1️⃣ извучемо UserOperation
const op = entry.decodeFunctionData('handleOps', raw).ops[0];

// 2️⃣ Одређујемо селектор позива
const callData = op.callData;
const sel = callData.slice(0, 10);
console.log('callData selector  :', sel);

// 3️⃣ Мапа познатих функција → ABI
const abiMap = {
  redelegate: 'function redelegate(uint72 fromId,uint72 toId,uint96 amount)',
  stake: 'function stake(uint72 identityId,uint96 amount)',
  unstake: 'function unstake(uint72 identityId,uint96 amount)',
  executeBatch:
    'function executeBatch((address target,uint256 value,bytes data)[] calls)',
};

let matched = false;
for (const [name, frag] of Object.entries(abiMap)) {
  if (id(frag).slice(0, 10) === sel) {
    matched = true;
    console.log('Matched function    :', name);

    const iface = new Interface([frag]);

    if (name === 'executeBatch') {
      const decoded = iface.decodeFunctionData('executeBatch', callData);
      console.log('calls.length        :', decoded.calls.length);
      decoded.calls.forEach((c, i) => {
        const innerSel = (c.data ?? c[2]).slice(0, 10);
        console.log(`  call[${i}] selector :`, innerSel);
      });
    } else {
      const decoded = iface.decodeFunctionData(name, callData);
      console.log('decoded args        :', decoded);
    }
    break;
  }
}

if (!matched) {
  console.log('⚠️  Selector није у мапи познатих функција.');
}
