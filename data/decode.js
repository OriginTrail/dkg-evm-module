// scripts/decode.js
const { Interface } = require('ethers'); // v6

async function main() {
  /**************************************************************
   * 1) raw calldata (пуна хекс-стринга - ништа мењати)
   *************************************************************/
  const data =
    '0x1fad948c' +
    '0000000000000000000000000000000000000000000000000000000000000040' +
    '0000000000000000000000001984c070e64e561631a7e20ea3c4cbf4eb198da8' +
    '0000000000000000000000000000000000000000000000000000000000000001' +
    '0000000000000000000000000000000000000000000000000000000000000020' +
    '000000000000000000000000047d912410759a0824cfad69a134df0172dbc067' +
    '0000000000000000000000000000000000000000000000000000000000000004' +
    '0000000000000000000000000000000000000000000000000000000000000160' +
    '0000000000000000000000000000000000000000000000000000000000000180' +
    '000000000000000000000000000000000000000000000000000000000009f9aa' +
    '000000000000000000000000000000000000000000000000000000000008a29c' +
    '000000000000000000000000000000000000000000000000000000000001fab6' +
    '000000000000000000000000000000000000000000000000000000000246a209' +
    '00000000000000000000000000000000000000000000000000000000000f4240' +
    '0000000000000000000000000000000000000000000000000000000000000320' +
    '0000000000000000000000000000000000000000000000000000000000000340' +
    '0000000000000000000000000000000000000000000000000000000000000000' +
    '0000000000000000000000000000000000000000000000000000000000000174' +
    '34fcd5be00000000000000000000000000000000000000000000000000000000' +
    '0000002000000000000000000000000000000000000000000000000000000000' +
    '0000000100000000000000000000000000000000000000000000000000000000' +
    '00000020000000000000000000000000d5ed8eab35536f8c33c3812808744121' +
    '8df65b1c00000000000000000000000000000000000000000000000000000000' +
    '0000000000000000000000000000000000000000000000000000000000000000' +
    '0000006000000000000000000000000000000000000000000000000000000000' +
    '00000064996642a5000000000000000000000000000000000000000000000000' +
    '0000000000000021000000000000000000000000000000000000000000000000' +
    '0000000000000016000000000000000000000000000000000000000000000070' +
    'f2f7fa25471b6468000000000000000000000000000000000000000000000000' +
    '00000000e15b0a8c44ecad456533d0110ead2ce0000000000000000000000000' +
    '0000000000000000000000000000000000000000000000000000000000000000' +
    '00000000000000000000000000000000000000000000000000000000000002e0' +
    '0000000000000000000000000000000000000000000000000000000000000020' +
    '0000000000000000000000000000000000000000000000000000000000000000' +
    '0000000000000000000000000000000000000000000000000000000000000040' +
    '0000000000000000000000000000000000000000000000000000000000000260' +
    '0000000000000000000000000000000000000000000000000000000000000020' +
    '00000000000000000000000000000000000000000000000000000000000000c0' +
    '0000000000000000000000000000000000000000000000000000000000000120' +
    '0000000000000000000000000000000000000000000000000000000000000017' +
    '0000000000000000000000000000000000000000000000000000000000000001' +
    '5540f43fe8b4fa6956781718934fad9be6703cd09e3b165db6304d37550a4a41' +
    '70a5c26aac572a54c24f417898449b602be113dbb1c6791dece5314b33696b62' +
    '0000000000000000000000000000000000000000000000000000000000000025' +
    'f198086b2db17256731bc456673b96bcef23f51d1fbacdd7c4379ef65465572f' +
    '1d00000000000000000000000000000000000000000000000000000000000000' +
    '00000000000000000000000000000000000000000000000000000000000000f7' +
    '7b2274797065223a22776562617574686e2e676574222c226368616c6c656e67' +
    '65223a22567867313266725f5570774669767353796f382d7a744a3335553554' +
    '3964484b4958666e79397350555a41222c226f726967696e223a226874747073' +
    '3a2f2f6b6579732e636f696e626173652e636f6d222c2263726f73734f726967' +
    '696e223a66616c73652c226f746865725f6b6579735f63616e5f62655f616464' +
    '65645f68657265223a22646f206e6f7420636f6d7061726520636c69656e7444' +
    '6174614a534f4e20616761696e737420612074656d706c6174652e2053656520' +
    '68747470733a2f2f676f6f2e676c2f796162506578227d000000000000000000';

  /**************************************************************
   * 2) EntryPoint ABI
   *************************************************************/
  const entryIface = new Interface([
    'function handleOps((address sender,uint256 nonce,bytes initCode,bytes callData,uint256 callGasLimit,uint256 verificationGasLimit,uint256 preVerificationGas,uint256 maxFeePerGas,uint256 maxPriorityFeePerGas,bytes paymasterAndData,bytes signature)[] ops,address beneficiary)',
  ]);

  /**************************************************************
   * 3) decode handleOps
   *************************************************************/
  const { beneficiary, ops } = entryIface.decodeFunctionData('handleOps', data);
  console.log('\n=== handleOps ===');
  console.log('beneficiary:', beneficiary);
  console.log('ops.length :', ops.length);

  /**************************************************************
   * 4) узми први UserOperation
   *************************************************************/
  const op = ops[0];
  console.log('\n--- UserOperation #0 ---');
  console.log('sender :', op.sender);
  console.log('nonce  :', op.nonce.toString());

  /**************************************************************
   * 5) decode op.callData  ➜  executeBatch
   *************************************************************/
  const walletIface = new Interface([
    // обавезно дефиниши шта је у tuple-у!
    'function executeBatch((address target,uint256 value,bytes data)[] calls)',
  ]);

  const { calls } = walletIface.decodeFunctionData('executeBatch', op.callData);
  console.log('\ninner function: executeBatch');
  console.log('calls.length :', calls.length);

  /**************************************************************
   * 6) прикажи први позив у batch-у
   *************************************************************/
  const call0 = calls[0];
  console.log('\n--- batch call[0] ---');
  console.log('target :', call0.target);
  console.log('value  :', call0.value.toString());
  console.log('data   :', call0.data.slice(0, 10)); // селектор

  /**************************************************************
   * 7) decode data као redelegate(uint72,uint72,uint96)
   *************************************************************/
  const stakingIface = new Interface([
    'function redelegate(uint72 fromId,uint72 toId,uint96 stakeBase)',
  ]);

  const [fromId, toId, stakeBase] = stakingIface.decodeFunctionData(
    'redelegate',
    call0.data,
  );

  console.log(
    '\nДОКАЗ ➜ Staking.redelegate(%d → %d, stakeBase = %s)',
    fromId,
    toId,
    stakeBase.toString(),
  );
}

main().catch(console.error);
