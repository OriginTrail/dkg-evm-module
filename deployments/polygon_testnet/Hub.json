{
  "address": "0x224aEC6891d26e994D4Dbf207aE099ca029b3E67",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "contractName",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newContractAddress",
          "type": "address"
        }
      ],
      "name": "AssetStorageChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "contractName",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newContractAddress",
          "type": "address"
        }
      ],
      "name": "ContractChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "contractName",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newContractAddress",
          "type": "address"
        }
      ],
      "name": "NewAssetStorage",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "contractName",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newContractAddress",
          "type": "address"
        }
      ],
      "name": "NewContract",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "getAllAssetStorages",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            }
          ],
          "internalType": "struct UnorderedNamedContractDynamicSetLib.Contract[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllContracts",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            }
          ],
          "internalType": "struct UnorderedNamedContractDynamicSetLib.Contract[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "assetStorageName",
          "type": "string"
        }
      ],
      "name": "getAssetStorageAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "contractName",
          "type": "string"
        }
      ],
      "name": "getContractAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "assetStorageAddress",
          "type": "address"
        }
      ],
      "name": "isAssetStorage",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "assetStorageName",
          "type": "string"
        }
      ],
      "name": "isAssetStorage",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "selectedContractAddress",
          "type": "address"
        }
      ],
      "name": "isContract",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "contractName",
          "type": "string"
        }
      ],
      "name": "isContract",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "assetStorageName",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "assetStorageAddress",
          "type": "address"
        }
      ],
      "name": "setAssetStorageAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "contractName",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "newContractAddress",
          "type": "address"
        }
      ],
      "name": "setContractAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "transactionHash": "0xefcee4ffa6a449e3e11bfa672daf318b958e56d9720b8c80dadb4b7676a88a11",
  "receipt": {
    "to": null,
    "from": "0xEfB65B890462206e3453dbd0bC8B2e6D6E0e7bD1",
    "contractAddress": "0x224aEC6891d26e994D4Dbf207aE099ca029b3E67",
    "transactionIndex": 46,
    "gasUsed": "1232560",
    "logsBloom": "0x
    "blockHash": "0x5efc0b3cd142491c721a65761cd277bf2a5a584cd39e29189ef62e79d75736a2",
    "transactionHash": "0xefcee4ffa6a449e3e11bfa672daf318b958e56d9720b8c80dadb4b7676a88a11",
    "logs": [
      {
        "transactionIndex": 46,
        "blockNumber": 37384359,
        "transactionHash": "0xefcee4ffa6a449e3e11bfa672daf318b958e56d9720b8c80dadb4b7676a88a11",
        "address": "0x224aEC6891d26e994D4Dbf207aE099ca029b3E67",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000efb65b890462206e3453dbd0bc8b2e6d6e0e7bd1"
        ],
        "data": "0x",
        "logIndex": 274,
        "blockHash": "0x5efc0b3cd142491c721a65761cd277bf2a5a584cd39e29189ef62e79d75736a2"
      },
      {
        "transactionIndex": 46,
        "blockNumber": 37384359,
        "transactionHash": "0xefcee4ffa6a449e3e11bfa672daf318b958e56d9720b8c80dadb4b7676a88a11",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x000000000000000000000000efb65b890462206e3453dbd0bc8b2e6d6e0e7bd1",
          "0x0000000000000000000000003a22c8bc68e98b0faf40f349dd2b2890fae01484"
        ],
        "data": "0x000000000000000000000000000000000000000000000000000740f30d73fa80000000000000000000000000000000000000000000000000890adad5c8297643000000000000000000000000000000000000000000000c058305f3d7f90569bb000000000000000000000000000000000000000000000000890399e2bab57bc3000000000000000000000000000000000000000000000c05830d34cb0679643b",
        "logIndex": 275,
        "blockHash": "0x5efc0b3cd142491c721a65761cd277bf2a5a584cd39e29189ef62e79d75736a2"
      }
    ],
    "blockNumber": 37384359,
    "cumulativeGasUsed": "10885332",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "6736b5a2b01ed07b57366e384b7e7c88",
  "metadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"contractName\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newContractAddress\",\"type\":\"address\"}],\"name\":\"AssetStorageChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"contractName\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newContractAddress\",\"type\":\"address\"}],\"name\":\"ContractChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"contractName\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newContractAddress\",\"type\":\"address\"}],\"name\":\"NewAssetStorage\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"contractName\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newContractAddress\",\"type\":\"address\"}],\"name\":\"NewContract\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getAllAssetStorages\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"internalType\":\"struct UnorderedNamedContractDynamicSetLib.Contract[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllContracts\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"internalType\":\"struct UnorderedNamedContractDynamicSetLib.Contract[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"assetStorageName\",\"type\":\"string\"}],\"name\":\"getAssetStorageAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"contractName\",\"type\":\"string\"}],\"name\":\"getContractAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"assetStorageAddress\",\"type\":\"address\"}],\"name\":\"isAssetStorage\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"assetStorageName\",\"type\":\"string\"}],\"name\":\"isAssetStorage\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"selectedContractAddress\",\"type\":\"address\"}],\"name\":\"isContract\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"contractName\",\"type\":\"string\"}],\"name\":\"isContract\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"assetStorageName\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"assetStorageAddress\",\"type\":\"address\"}],\"name\":\"setAssetStorageAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"contractName\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"newContractAddress\",\"type\":\"address\"}],\"name\":\"setContractAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Hub.sol\":\"Hub\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/Hub.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.16;\\n\\nimport {Named} from \\\"./interface/Named.sol\\\";\\nimport {Versioned} from \\\"./interface/Versioned.sol\\\";\\nimport {UnorderedNamedContractDynamicSetLib} from \\\"./utils/UnorderedNamedContractDynamicSet.sol\\\";\\nimport {Ownable} from \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract Hub is Named, Versioned, Ownable {\\n    using UnorderedNamedContractDynamicSetLib for UnorderedNamedContractDynamicSetLib.Set;\\n\\n    event NewContract(string contractName, address newContractAddress);\\n    event ContractChanged(string contractName, address newContractAddress);\\n    event NewAssetStorage(string contractName, address newContractAddress);\\n    event AssetStorageChanged(string contractName, address newContractAddress);\\n\\n    string private constant _NAME = \\\"Hub\\\";\\n    string private constant _VERSION = \\\"1.0.0\\\";\\n\\n    UnorderedNamedContractDynamicSetLib.Set internal contractSet;\\n    UnorderedNamedContractDynamicSetLib.Set internal assetStorageSet;\\n\\n    function name() external pure virtual override returns (string memory) {\\n        return _NAME;\\n    }\\n\\n    function version() external pure virtual override returns (string memory) {\\n        return _VERSION;\\n    }\\n\\n    function setContractAddress(string calldata contractName, address newContractAddress) external onlyOwner {\\n        if (contractSet.exists(contractName)) {\\n            emit ContractChanged(contractName, newContractAddress);\\n            contractSet.update(contractName, newContractAddress);\\n        } else {\\n            emit NewContract(contractName, newContractAddress);\\n            contractSet.append(contractName, newContractAddress);\\n        }\\n    }\\n\\n    function setAssetStorageAddress(string calldata assetStorageName, address assetStorageAddress) external onlyOwner {\\n        if (assetStorageSet.exists(assetStorageName)) {\\n            emit AssetStorageChanged(assetStorageName, assetStorageAddress);\\n            assetStorageSet.update(assetStorageName, assetStorageAddress);\\n        } else {\\n            emit NewAssetStorage(assetStorageName, assetStorageAddress);\\n            assetStorageSet.append(assetStorageName, assetStorageAddress);\\n        }\\n    }\\n\\n    function getContractAddress(string calldata contractName) external view returns (address) {\\n        return contractSet.get(contractName).addr;\\n    }\\n\\n    function getAssetStorageAddress(string calldata assetStorageName) external view returns (address) {\\n        return assetStorageSet.get(assetStorageName).addr;\\n    }\\n\\n    function getAllContracts() external view returns (UnorderedNamedContractDynamicSetLib.Contract[] memory) {\\n        return contractSet.getAll();\\n    }\\n\\n    function getAllAssetStorages() external view returns (UnorderedNamedContractDynamicSetLib.Contract[] memory) {\\n        return assetStorageSet.getAll();\\n    }\\n\\n    function isContract(string calldata contractName) external view returns (bool) {\\n        return contractSet.exists(contractName);\\n    }\\n\\n    function isContract(address selectedContractAddress) external view returns (bool) {\\n        return contractSet.exists(selectedContractAddress);\\n    }\\n\\n    function isAssetStorage(string calldata assetStorageName) external view returns (bool) {\\n        return assetStorageSet.exists(assetStorageName);\\n    }\\n\\n    function isAssetStorage(address assetStorageAddress) external view returns (bool) {\\n        return assetStorageSet.exists(assetStorageAddress);\\n    }\\n}\\n\",\"keccak256\":\"0xf93b8b90622b1a49cd00a3558f64766e6bbca7b2f192f8e036a773d01e5c3382\",\"license\":\"MIT\"},\"contracts/interface/Named.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.16;\\n\\ninterface Named {\\n    function name() external view returns (string memory);\\n}\\n\",\"keccak256\":\"0xb468c85b178d2377c1a6dd77f2e4f843fe280932663ffef8d9fba56dcdc7b796\",\"license\":\"MIT\"},\"contracts/interface/Versioned.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.16;\\n\\ninterface Versioned {\\n    function version() external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x6012f1a5c6b2fe5d8457ab1b913602c6f2d40dbea225bb4cec9fe3e325209f90\",\"license\":\"MIT\"},\"contracts/utils/UnorderedNamedContractDynamicSet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.16;\\n\\nlibrary UnorderedNamedContractDynamicSetLib {\\n    struct Contract {\\n        string name;\\n        address addr;\\n    }\\n\\n    struct Set {\\n        mapping(string => uint256) stringIndexPointers;\\n        mapping(address => uint256) addressIndexPointers;\\n        Contract[] contractList;\\n    }\\n\\n    function append(Set storage self, string calldata name, address addr) internal {\\n        require(\\n            keccak256(abi.encodePacked(name)) != keccak256(abi.encodePacked(\\\"\\\")),\\n            \\\"NamedContractSet: Name cannot be empty\\\"\\n        );\\n        require(addr != address(0), \\\"NamedContractSet: Address cannot be 0x0\\\");\\n        require(!exists(self, name), \\\"NamedContractSet: Contract with given name already exists\\\");\\n        self.stringIndexPointers[name] = size(self);\\n        self.addressIndexPointers[addr] = size(self);\\n        self.contractList.push(Contract(name, addr));\\n    }\\n\\n    function update(Set storage self, string calldata name, address addr) internal {\\n        require(addr != address(0), \\\"NamedContractSet: Address cannot be 0x0\\\");\\n        require(exists(self, name), \\\"NamedContractSet: Contract with given name doesn't exists\\\");\\n        delete self.addressIndexPointers[self.contractList[self.stringIndexPointers[name]].addr];\\n        self.addressIndexPointers[addr] = self.stringIndexPointers[name];\\n        self.contractList[self.stringIndexPointers[name]].addr = addr;\\n    }\\n\\n    function remove(Set storage self, string calldata name) internal {\\n        require(exists(self, name), \\\"NamedContractSet: Contract with given name doesn't exist\\\");\\n        uint256 contractToRemoveIndex = self.stringIndexPointers[name];\\n\\n        delete self.addressIndexPointers[self.contractList[contractToRemoveIndex].addr];\\n\\n        Contract memory contractToMove = self.contractList[size(self) - 1];\\n\\n        self.stringIndexPointers[contractToMove.name] = contractToRemoveIndex;\\n        self.addressIndexPointers[contractToMove.addr] = contractToRemoveIndex;\\n        self.contractList[contractToRemoveIndex] = contractToMove;\\n\\n        delete self.stringIndexPointers[name];\\n        self.contractList.pop();\\n    }\\n\\n    function remove(Set storage self, address addr) internal {\\n        require(exists(self, addr), \\\"NamedContractSet: Contract with given address doesn't exist\\\");\\n        uint256 contractToRemoveIndex = self.addressIndexPointers[addr];\\n\\n        delete self.stringIndexPointers[self.contractList[contractToRemoveIndex].name];\\n\\n        Contract memory contractToMove = self.contractList[size(self) - 1];\\n\\n        self.stringIndexPointers[contractToMove.name] = contractToRemoveIndex;\\n        self.addressIndexPointers[contractToMove.addr] = contractToRemoveIndex;\\n        self.contractList[contractToRemoveIndex] = contractToMove;\\n\\n        delete self.addressIndexPointers[addr];\\n        self.contractList.pop();\\n    }\\n\\n    function get(Set storage self, string calldata name) internal view returns (Contract memory) {\\n        require(exists(self, name), \\\"NamedContractSet: Contract with given name doesn't exist\\\");\\n        return self.contractList[self.stringIndexPointers[name]];\\n    }\\n\\n    function get(Set storage self, address addr) internal view returns (Contract memory) {\\n        require(exists(self, addr), \\\"NamedContractSet: Contract with given address doesn't exist\\\");\\n        return self.contractList[self.addressIndexPointers[addr]];\\n    }\\n\\n    function get(Set storage self, uint256 index) internal view returns (Contract memory) {\\n        return self.contractList[index];\\n    }\\n\\n    function getAll(Set storage self) internal view returns (Contract[] memory) {\\n        return self.contractList;\\n    }\\n\\n    function getIndex(Set storage self, string calldata name) internal view returns (uint256) {\\n        return self.stringIndexPointers[name];\\n    }\\n\\n    function getIndex(Set storage self, address addr) internal view returns (uint256) {\\n        return self.addressIndexPointers[addr];\\n    }\\n\\n    function exists(Set storage self, string calldata name) internal view returns (bool) {\\n        if (size(self) == 0) return false;\\n        return\\n            keccak256(abi.encodePacked(self.contractList[self.stringIndexPointers[name]].name)) ==\\n            keccak256(abi.encodePacked(name));\\n    }\\n\\n    function exists(Set storage self, address addr) internal view returns (bool) {\\n        if (size(self) == 0) return false;\\n        return addr == self.contractList[self.addressIndexPointers[addr]].addr;\\n    }\\n\\n    function size(Set storage self) internal view returns (uint256) {\\n        return self.contractList.length;\\n    }\\n}\\n\",\"keccak256\":\"0x2da60d9913c236156764f13a514bc7a9a294feadd4fad9c7a111072fd6bef25a\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6080806040523461005b5760008054336001600160a01b0319821681178355916001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09084a36114df90816100618239f35b600080fdfe6080604081815260048036101561001557600080fd5b600092833560e01c90816304433bbc14610dae5750806306fdde0314610d6b578063077512fa146109e857806316279055146109c257806318d3ce961461092b578063211e940e146108ee57806334f702db146108c8578063534e785c1461043b57806354fd4d50146103f6578063598f847f146103b05780636444a2fe146102c4578063715018a6146102675780638da5cb5b1461023f578063ef51fdf11461018d5763f2fde38b146100c857600080fd5b34610189576020366003190112610189576100e1610e9b565b6100e9610f72565b6001600160a01b03908116918215610137575083546001600160a01b0319811683178555925192167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08484a3f35b608490602085519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8280fd5b5082903461023b578160031936011261023b57600654906001600160401b038211610228575082519160206101c7818460051b0185611016565b828452600682527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f8185015b84841061020b578651806102078882610ef3565b0390f35b60028360019261021a856111ab565b8152019201930192906101f3565b634e487b7160e01b835260419052602482fd5b5080fd5b50503461023b578160031936011261023b57905490516001600160a01b039091168152602090f35b50503461023b578160031936011261023b57610281610f72565b81546001600160a01b03198116835590519082906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08284a3f35b503461018957602092836003193601126103ad5781356001600160401b03811161023b576102f59036908401610e29565b92909185855161030481610fca565b6060815201526103148383611266565b156103565782918591610337948651948593843782019081520301902054611137565b506001600160a01b0390839061034c906111ab565b0151169051908152f35b835162461bcd60e51b81529081018590526038602482015260008051602061148a83398151915260448201527f676976656e206e616d6520646f65736e277420657869737400000000000000006064820152608490fd5b80fd5b5091346103ad5760203660031901126103ad578235906001600160401b0382116103ad57506103e76020936103ed92369101610e29565b90611266565b90519015158152f35b50503461023b578160031936011261023b5780516102079161041782610fca565b60058252640312e302e360dc1b602083015251918291602083526020830190610e5b565b50346101895761044a36610eb1565b610455929192610f72565b61045f838361136f565b15610591577fcb274d507e7a9978f5a8c15929fd58c472b8addc1a9bba454b0c0a49a05c915285518061049484878784611052565b0390a16001600160a01b03908116936104ae85151561108b565b6104b8848461136f565b1561053e575091602061052892600194856104e4895186858237858188810185815203019020546110e7565b5001541688526002825287878120558651838282378281858101888152030190205486895260028352878920558287519384928337810185815203019020546110e7565b500180546001600160a01b031916909117905551f35b608490602087519162461bcd60e51b83528201526039602482015260008051602061148a833981519152604482015278676976656e206e616d6520646f65736e27742065786973747360381b6064820152fd5b91907f208f725e4760f521e142bbc1400aa805d7e669438e05e416eddc3df3db3d45368551806105c386868684611052565b0390a184519360209485810190848483376105ec87828781018c83820152038084520182611016565b51902086518881526105fd81610ffb565b86815191012014610876576001600160a01b039384169461061f86151561108b565b610629848461136f565b6108205760035487519480858737818187019684816001998a81520301902055878a526002835281898b20558989519561066287610fca565b61066b83611037565b926106788c519485611016565b80845236818301116101895780869283860137830101528452818401968752600160401b81101561080d5780856106b292016003556110e7565b9390936107fb57518051926001600160401b0384116107e857509082916106d98554611171565b601f8111610796575b5081601f841160011461073357508992610728575b5050600019600383901b1c191690831b1781555b019151166bffffffffffffffffffffffff60a01b82541617905551f35b0151905038806106f7565b9190869450601f198416868c52838c20938c905b82821061077d5750508411610764575b505050811b01815561070b565b015160001960f88460031b161c19169055388080610757565b8484015186558997909501949384019390810190610747565b90919250848a52828a20601f850160051c8101918486106107de575b8594939291601f89920160051c01915b8281106107d05750506106e2565b8c81558695508891016107c2565b90915081906107b2565b634e487b7160e01b8a5260419052602489fd5b634e487b7160e01b8952888352602489fd5b634e487b7160e01b895260418352602489fd5b865162461bcd60e51b8152918201526039602482015260008051602061148a83398151915260448201527f676976656e206e616d6520616c72656164792065786973747300000000000000606482015260849150fd5b855162461bcd60e51b8152908101859052602660248201527f4e616d6564436f6e74726163745365743a204e616d652063616e6e6f7420626560448201526520656d70747960d01b6064820152608490fd5b50503461023b57602036600319011261023b576020906103ed6108e9610e9b565b61145d565b5091346103ad5760203660031901126103ad578235906001600160401b0382116103ad57506109256020936103ed92369101610e29565b9061136f565b5082903461023b578160031936011261023b57600354906001600160401b03821161022857508251916020610965818460051b0185611016565b828452600382527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b8185015b8484106109a5578651806102078882610ef3565b6002836001926109b4856111ab565b815201920193019290610991565b50503461023b57602036600319011261023b576020906103ed6109e3610e9b565b611423565b5034610189576109f736610eb1565b92610a03929192610f72565b610a0d8383611266565b15610b29577f63815734218aeae79d59f32dd4a1c3e52f1b7ee925099608c48820fd6a9e8622855180610a4287878784611052565b0390a16001600160a01b0393841693610a5c85151561108b565b610a668484611266565b15610ad657610528926001949260209286610a928a518786823786818981018781520301902054611137565b50015416895260058352888881205587518483823783818681018481520301902054878a5260058452888a2055838851948593843782019081520301902054611137565b855162461bcd60e51b81526020818401526039602482015260008051602061148a833981519152604482015278676976656e206e616d6520646f65736e27742065786973747360381b6064820152608490fd5b9291907fcdc1fe6fc2802fb854569bcc8beec2e254e7c890e42fea11687b53f62bb14565855180610b5c86868684611052565b0390a18451936020948581019084848337610b8587828781018c83820152038084520182611016565b5190208651888152610b9681610ffb565b86815191012014610876576001600160a01b0393841694610bb886151561108b565b610bc28484611266565b610820576006549384885182868237838184810187815203019020558689526005825284888a205588885194610bf786610fca565b610c0083611037565b92610c0d8b519485611016565b80845236818301116101895780859283860137830101528352808301958652600160401b841015610d5857610c49600194858101600655611137565b9390936107fb57518051926001600160401b0384116107e85750908291610c708554611171565b601f8111610d06575b5081601f8411600114610cbd57508992610728575050600019600383901b1c191690831b178155019151166bffffffffffffffffffffffff60a01b82541617905551f35b9190869450601f198416868c52838c20938c905b828210610ced575050841161076457505050811b01815561070b565b8484015186558997909501949384019390810190610cd1565b90919250848a52828a20601f850160051c810191848610610d4e575b8594939291601f89920160051c01915b828110610d40575050610c79565b8c8155869550889101610d32565b9091508190610d22565b634e487b7160e01b885260418252602488fd5b50503461023b578160031936011261023b57805161020791610d8c82610fca565b6003825262243ab160e91b602083015251918291602083526020830190610e5b565b91905034610e2557602093846003193601126103ad5781356001600160401b03811161023b5790610de58694939236908401610e29565b949093610df181610fca565b606081520152610e01838361136f565b156103565750908361033792828551938492833781016001815203019020546110e7565b8380fd5b9181601f84011215610e56578235916001600160401b038311610e565760208381860195010111610e5657565b600080fd5b919082519283825260005b848110610e87575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201610e66565b600435906001600160a01b0382168203610e5657565b6040600319820112610e5657600435906001600160401b038211610e5657610edb91600401610e29565b90916024356001600160a01b0381168103610e565790565b602080820190808352835180925260409283810182858560051b8401019601946000925b858410610f28575050505050505090565b909192939495968580600192603f198582030187528a519082610f52835189845289840190610e5b565b9281878060a01b0391015116910152990194019401929594939190610f17565b6000546001600160a01b03163303610f8657565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b604081019081106001600160401b03821117610fe557604052565b634e487b7160e01b600052604160045260246000fd5b602081019081106001600160401b03821117610fe557604052565b90601f801991011681019081106001600160401b03821117610fe557604052565b6001600160401b038111610fe557601f01601f191660200190565b918060609160209396959660408652816040870152838601376000828286010152601f80199101168301019360018060a01b0316910152565b1561109257565b60405162461bcd60e51b815260206004820152602760248201527f4e616d6564436f6e74726163745365743a20416464726573732063616e6e6f746044820152660206265203078360cc1b6064820152608490fd5b60035481101561112157600360005260011b7fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0190600090565b634e487b7160e01b600052603260045260246000fd5b60065481101561112157600660005260011b7ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f0190600090565b90600182811c921680156111a1575b602083101461118b57565b634e487b7160e01b600052602260045260246000fd5b91607f1691611180565b90604051906111b982610fca565b81604051936000948154906111cd82611171565b808252600192808416908115611242575060011461120a575b506111f8816020959697980382611016565b845201546001600160a01b0316910152565b600084815260208082209950915b80821061122d575082010196506111f86111e6565b89548483018401529884019890820190611218565b60ff191660208481019190915291151560051b830190910197506111f890506111e6565b60065415611368576040519180828437611290838281016004815260209586910301902054611137565b506040518481019160009080546112a681611171565b91600191898382169182600014611343575050600114611306575b505050906112dc816112ff949303601f198101835282611016565b519020936040518381948383019687378101600083820152038084520182611016565b5190201490565b88935060005282600020906000915b83831061132e575050508201016112dc826112ff6112c1565b80548684018601528994909201918101611315565b60ff19168852841515909402860190930193506112dc92508491506112ff90506112c1565b5050600090565b6003541561136857604051918082843780830161139b84600192838152602096879103019020546110e7565b509060405190858201926000918154916113b483611171565b928983821691826000146113435750506001146113e657505050906112dc816112ff949303601f198101835282611016565b88935060005282600020906000915b83831061140e575050508201016112dc826112ff6112c1565b805486840186015289949092019181016113f5565b600354156114575760018060a01b0380911690816000526002602052600161144f6040600020546110e7565b500154161490565b50600090565b600654156114575760018060a01b0380911690816000526005602052600161144f60406000205461113756fe4e616d6564436f6e74726163745365743a20436f6e7472616374207769746820a2646970667358221220b892313c331c4cc2270608a3ac891679d0df3034d8ce0a49d3018829a1827da564736f6c63430008100033",
  "deployedBytecode": "0x6080604081815260048036101561001557600080fd5b600092833560e01c90816304433bbc14610dae5750806306fdde0314610d6b578063077512fa146109e857806316279055146109c257806318d3ce961461092b578063211e940e146108ee57806334f702db146108c8578063534e785c1461043b57806354fd4d50146103f6578063598f847f146103b05780636444a2fe146102c4578063715018a6146102675780638da5cb5b1461023f578063ef51fdf11461018d5763f2fde38b146100c857600080fd5b34610189576020366003190112610189576100e1610e9b565b6100e9610f72565b6001600160a01b03908116918215610137575083546001600160a01b0319811683178555925192167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08484a3f35b608490602085519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8280fd5b5082903461023b578160031936011261023b57600654906001600160401b038211610228575082519160206101c7818460051b0185611016565b828452600682527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f8185015b84841061020b578651806102078882610ef3565b0390f35b60028360019261021a856111ab565b8152019201930192906101f3565b634e487b7160e01b835260419052602482fd5b5080fd5b50503461023b578160031936011261023b57905490516001600160a01b039091168152602090f35b50503461023b578160031936011261023b57610281610f72565b81546001600160a01b03198116835590519082906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08284a3f35b503461018957602092836003193601126103ad5781356001600160401b03811161023b576102f59036908401610e29565b92909185855161030481610fca565b6060815201526103148383611266565b156103565782918591610337948651948593843782019081520301902054611137565b506001600160a01b0390839061034c906111ab565b0151169051908152f35b835162461bcd60e51b81529081018590526038602482015260008051602061148a83398151915260448201527f676976656e206e616d6520646f65736e277420657869737400000000000000006064820152608490fd5b80fd5b5091346103ad5760203660031901126103ad578235906001600160401b0382116103ad57506103e76020936103ed92369101610e29565b90611266565b90519015158152f35b50503461023b578160031936011261023b5780516102079161041782610fca565b60058252640312e302e360dc1b602083015251918291602083526020830190610e5b565b50346101895761044a36610eb1565b610455929192610f72565b61045f838361136f565b15610591577fcb274d507e7a9978f5a8c15929fd58c472b8addc1a9bba454b0c0a49a05c915285518061049484878784611052565b0390a16001600160a01b03908116936104ae85151561108b565b6104b8848461136f565b1561053e575091602061052892600194856104e4895186858237858188810185815203019020546110e7565b5001541688526002825287878120558651838282378281858101888152030190205486895260028352878920558287519384928337810185815203019020546110e7565b500180546001600160a01b031916909117905551f35b608490602087519162461bcd60e51b83528201526039602482015260008051602061148a833981519152604482015278676976656e206e616d6520646f65736e27742065786973747360381b6064820152fd5b91907f208f725e4760f521e142bbc1400aa805d7e669438e05e416eddc3df3db3d45368551806105c386868684611052565b0390a184519360209485810190848483376105ec87828781018c83820152038084520182611016565b51902086518881526105fd81610ffb565b86815191012014610876576001600160a01b039384169461061f86151561108b565b610629848461136f565b6108205760035487519480858737818187019684816001998a81520301902055878a526002835281898b20558989519561066287610fca565b61066b83611037565b926106788c519485611016565b80845236818301116101895780869283860137830101528452818401968752600160401b81101561080d5780856106b292016003556110e7565b9390936107fb57518051926001600160401b0384116107e857509082916106d98554611171565b601f8111610796575b5081601f841160011461073357508992610728575b5050600019600383901b1c191690831b1781555b019151166bffffffffffffffffffffffff60a01b82541617905551f35b0151905038806106f7565b9190869450601f198416868c52838c20938c905b82821061077d5750508411610764575b505050811b01815561070b565b015160001960f88460031b161c19169055388080610757565b8484015186558997909501949384019390810190610747565b90919250848a52828a20601f850160051c8101918486106107de575b8594939291601f89920160051c01915b8281106107d05750506106e2565b8c81558695508891016107c2565b90915081906107b2565b634e487b7160e01b8a5260419052602489fd5b634e487b7160e01b8952888352602489fd5b634e487b7160e01b895260418352602489fd5b865162461bcd60e51b8152918201526039602482015260008051602061148a83398151915260448201527f676976656e206e616d6520616c72656164792065786973747300000000000000606482015260849150fd5b855162461bcd60e51b8152908101859052602660248201527f4e616d6564436f6e74726163745365743a204e616d652063616e6e6f7420626560448201526520656d70747960d01b6064820152608490fd5b50503461023b57602036600319011261023b576020906103ed6108e9610e9b565b61145d565b5091346103ad5760203660031901126103ad578235906001600160401b0382116103ad57506109256020936103ed92369101610e29565b9061136f565b5082903461023b578160031936011261023b57600354906001600160401b03821161022857508251916020610965818460051b0185611016565b828452600382527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b8185015b8484106109a5578651806102078882610ef3565b6002836001926109b4856111ab565b815201920193019290610991565b50503461023b57602036600319011261023b576020906103ed6109e3610e9b565b611423565b5034610189576109f736610eb1565b92610a03929192610f72565b610a0d8383611266565b15610b29577f63815734218aeae79d59f32dd4a1c3e52f1b7ee925099608c48820fd6a9e8622855180610a4287878784611052565b0390a16001600160a01b0393841693610a5c85151561108b565b610a668484611266565b15610ad657610528926001949260209286610a928a518786823786818981018781520301902054611137565b50015416895260058352888881205587518483823783818681018481520301902054878a5260058452888a2055838851948593843782019081520301902054611137565b855162461bcd60e51b81526020818401526039602482015260008051602061148a833981519152604482015278676976656e206e616d6520646f65736e27742065786973747360381b6064820152608490fd5b9291907fcdc1fe6fc2802fb854569bcc8beec2e254e7c890e42fea11687b53f62bb14565855180610b5c86868684611052565b0390a18451936020948581019084848337610b8587828781018c83820152038084520182611016565b5190208651888152610b9681610ffb565b86815191012014610876576001600160a01b0393841694610bb886151561108b565b610bc28484611266565b610820576006549384885182868237838184810187815203019020558689526005825284888a205588885194610bf786610fca565b610c0083611037565b92610c0d8b519485611016565b80845236818301116101895780859283860137830101528352808301958652600160401b841015610d5857610c49600194858101600655611137565b9390936107fb57518051926001600160401b0384116107e85750908291610c708554611171565b601f8111610d06575b5081601f8411600114610cbd57508992610728575050600019600383901b1c191690831b178155019151166bffffffffffffffffffffffff60a01b82541617905551f35b9190869450601f198416868c52838c20938c905b828210610ced575050841161076457505050811b01815561070b565b8484015186558997909501949384019390810190610cd1565b90919250848a52828a20601f850160051c810191848610610d4e575b8594939291601f89920160051c01915b828110610d40575050610c79565b8c8155869550889101610d32565b9091508190610d22565b634e487b7160e01b885260418252602488fd5b50503461023b578160031936011261023b57805161020791610d8c82610fca565b6003825262243ab160e91b602083015251918291602083526020830190610e5b565b91905034610e2557602093846003193601126103ad5781356001600160401b03811161023b5790610de58694939236908401610e29565b949093610df181610fca565b606081520152610e01838361136f565b156103565750908361033792828551938492833781016001815203019020546110e7565b8380fd5b9181601f84011215610e56578235916001600160401b038311610e565760208381860195010111610e5657565b600080fd5b919082519283825260005b848110610e87575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201610e66565b600435906001600160a01b0382168203610e5657565b6040600319820112610e5657600435906001600160401b038211610e5657610edb91600401610e29565b90916024356001600160a01b0381168103610e565790565b602080820190808352835180925260409283810182858560051b8401019601946000925b858410610f28575050505050505090565b909192939495968580600192603f198582030187528a519082610f52835189845289840190610e5b565b9281878060a01b0391015116910152990194019401929594939190610f17565b6000546001600160a01b03163303610f8657565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b604081019081106001600160401b03821117610fe557604052565b634e487b7160e01b600052604160045260246000fd5b602081019081106001600160401b03821117610fe557604052565b90601f801991011681019081106001600160401b03821117610fe557604052565b6001600160401b038111610fe557601f01601f191660200190565b918060609160209396959660408652816040870152838601376000828286010152601f80199101168301019360018060a01b0316910152565b1561109257565b60405162461bcd60e51b815260206004820152602760248201527f4e616d6564436f6e74726163745365743a20416464726573732063616e6e6f746044820152660206265203078360cc1b6064820152608490fd5b60035481101561112157600360005260011b7fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0190600090565b634e487b7160e01b600052603260045260246000fd5b60065481101561112157600660005260011b7ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f0190600090565b90600182811c921680156111a1575b602083101461118b57565b634e487b7160e01b600052602260045260246000fd5b91607f1691611180565b90604051906111b982610fca565b81604051936000948154906111cd82611171565b808252600192808416908115611242575060011461120a575b506111f8816020959697980382611016565b845201546001600160a01b0316910152565b600084815260208082209950915b80821061122d575082010196506111f86111e6565b89548483018401529884019890820190611218565b60ff191660208481019190915291151560051b830190910197506111f890506111e6565b60065415611368576040519180828437611290838281016004815260209586910301902054611137565b506040518481019160009080546112a681611171565b91600191898382169182600014611343575050600114611306575b505050906112dc816112ff949303601f198101835282611016565b519020936040518381948383019687378101600083820152038084520182611016565b5190201490565b88935060005282600020906000915b83831061132e575050508201016112dc826112ff6112c1565b80548684018601528994909201918101611315565b60ff19168852841515909402860190930193506112dc92508491506112ff90506112c1565b5050600090565b6003541561136857604051918082843780830161139b84600192838152602096879103019020546110e7565b509060405190858201926000918154916113b483611171565b928983821691826000146113435750506001146113e657505050906112dc816112ff949303601f198101835282611016565b88935060005282600020906000915b83831061140e575050508201016112dc826112ff6112c1565b805486840186015289949092019181016113f5565b600354156114575760018060a01b0380911690816000526002602052600161144f6040600020546110e7565b500154161490565b50600090565b600654156114575760018060a01b0380911690816000526005602052600161144f60406000205461113756fe4e616d6564436f6e74726163745365743a20436f6e7472616374207769746820a2646970667358221220b892313c331c4cc2270608a3ac891679d0df3034d8ce0a49d3018829a1827da564736f6c63430008100033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 400,
        "contract": "contracts/Hub.sol:Hub",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 9003,
        "contract": "contracts/Hub.sol:Hub",
        "label": "contractSet",
        "offset": 0,
        "slot": "1",
        "type": "t_struct(Set)24402_storage"
      },
      {
        "astId": 9006,
        "contract": "contracts/Hub.sol:Hub",
        "label": "assetStorageSet",
        "offset": 0,
        "slot": "4",
        "type": "t_struct(Set)24402_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(Contract)24389_storage)dyn_storage": {
        "base": "t_struct(Contract)24389_storage",
        "encoding": "dynamic_array",
        "label": "struct UnorderedNamedContractDynamicSetLib.Contract[]",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_string_memory_ptr,t_uint256)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Contract)24389_storage": {
        "encoding": "inplace",
        "label": "struct UnorderedNamedContractDynamicSetLib.Contract",
        "members": [
          {
            "astId": 24386,
            "contract": "contracts/Hub.sol:Hub",
            "label": "name",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 24388,
            "contract": "contracts/Hub.sol:Hub",
            "label": "addr",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(Set)24402_storage": {
        "encoding": "inplace",
        "label": "struct UnorderedNamedContractDynamicSetLib.Set",
        "members": [
          {
            "astId": 24393,
            "contract": "contracts/Hub.sol:Hub",
            "label": "stringIndexPointers",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)"
          },
          {
            "astId": 24397,
            "contract": "contracts/Hub.sol:Hub",
            "label": "addressIndexPointers",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_uint256)"
          },
          {
            "astId": 24401,
            "contract": "contracts/Hub.sol:Hub",
            "label": "contractList",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_struct(Contract)24389_storage)dyn_storage"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}
