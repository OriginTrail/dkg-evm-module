{
  "contractName": "Assertion",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "hubAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "assertionId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "issuer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint128",
          "name": "size",
          "type": "uint128"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "triplesNumber",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "uint96",
          "name": "chunksNumber",
          "type": "uint96"
        }
      ],
      "name": "AssertionCreated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "assertionStorage",
      "outputs": [
        {
          "internalType": "contract AssertionStorage",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "hub",
      "outputs": [
        {
          "internalType": "contract Hub",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "assertionId",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "issuer",
          "type": "address"
        },
        {
          "internalType": "uint128",
          "name": "size",
          "type": "uint128"
        },
        {
          "internalType": "uint32",
          "name": "triplesNumber",
          "type": "uint32"
        },
        {
          "internalType": "uint96",
          "name": "chunksNumber",
          "type": "uint96"
        }
      ],
      "name": "createAssertion",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"hubAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"size\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"triplesNumber\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"chunksNumber\",\"type\":\"uint96\"}],\"name\":\"AssertionCreated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"assertionStorage\",\"outputs\":[{\"internalType\":\"contract AssertionStorage\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"size\",\"type\":\"uint128\"},{\"internalType\":\"uint32\",\"name\":\"triplesNumber\",\"type\":\"uint32\"},{\"internalType\":\"uint96\",\"name\":\"chunksNumber\",\"type\":\"uint96\"}],\"name\":\"createAssertion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hub\",\"outputs\":[{\"internalType\":\"contract Hub\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Assertion.sol\":\"Assertion\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"project:/contracts/Assertion.sol\":{\"keccak256\":\"0x5c0c02d5be44227d8e5e11e69e44f4c250576f9bd94b7f796f0a14f6e852bf46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8143af0d2df1d68449e4458c3ffac5df3df183ab8fffa8db470b7e867686659b\",\"dweb:/ipfs/QmaF6u8iJHNnwPdPbsdE8kmXc641iYguybMvpNvVyHmYNy\"]},\"project:/contracts/Hub.sol\":{\"keccak256\":\"0xddb2970d30f056a92c01944e8c984831361045bbecdd1b94f44cb879dc4489cb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://16b477801bf41bd7704c8b8064e04093ed9e6b61fcc2c080fc98da9fbab87448\",\"dweb:/ipfs/QmcvCeup6gKkxBR3QZ6X38dH4PjD1dixPa4tP7b9pue1xw\"]},\"project:/contracts/interface/Named.sol\":{\"keccak256\":\"0x1338740a42a69ca4e56153a749f20484f57331901b43a73473902fb45ffe52e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d37d0799ac66711f8bf3bbb897d43cfccb3439eff396f92b40cebe8398d128c\",\"dweb:/ipfs/QmY4NpnYC7dtjs2c1VMcCmuqRMsF3a8TrxLc3R4ZsxhKCM\"]},\"project:/contracts/storage/AssertionStorage.sol\":{\"keccak256\":\"0x96eba7327f0581a635029b4ca5eba79ec443674c4c37490ba1b0137fa9fff7c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a4e18c9cece06ee2f624e98039164d99f49919e46af22fd25cceb38e01f9f0b2\",\"dweb:/ipfs/QmSy7JR3uoXQ3zxv9SmKgXrbsQBthGoMthDZBzMSoQ5AR4\"]},\"project:/contracts/structs/AssertionStructs.sol\":{\"keccak256\":\"0xcb73887fd8b066be999060829b81cc8abe2dc50d7d286d527a96018b8f942d40\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20b04df5925b8f0ccfdf5db7075ec2ac6f7ecfa5017cb4337441a3d170688798\",\"dweb:/ipfs/QmUfcAvWvA66K6dZ6AQAcPPi7bWoP5mjkVGZ3VLJwKeNUB\"]},\"project:/contracts/utils/UnorderedNamedContractDynamicSet.sol\":{\"keccak256\":\"0x60044fabbf9ef8210f7798053565a8a6ec721cd7801a04d6da9740c4c107c297\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b78441b81c9d2461a130a5880e8a41432b815aea49d465e0c8dde45725e24b8\",\"dweb:/ipfs/QmXXMJGdgsrZvGRgx7VUX39KPHuKuAViuVtnGEp6qZaWXF\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516109ae3803806109ae83398101604081905261002f91610104565b6001600160a01b03811661004257600080fd5b600080546001600160a01b0319166001600160a01b038316908117909155604051630110ceef60e21b815260206004820152601060248201526f417373657274696f6e53746f7261676560801b60448201526304433bbc90606401602060405180830381865afa1580156100ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100de9190610104565b600180546001600160a01b0319166001600160a01b039290921691909117905550610134565b60006020828403121561011657600080fd5b81516001600160a01b038116811461012d57600080fd5b9392505050565b61086b806101436000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063365a86fc14610046578063448338bd1461008f578063d210b7cf146100a4575b600080fd5b6000546100669073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b6100a261009d366004610758565b6100c4565b005b6001546100669073ffffffffffffffffffffffffffffffffffffffff1681565b6100cc610639565b60015473ffffffffffffffffffffffffffffffffffffffff1685610151576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f417373657274696f6e2049442063616e6e6f7420626520656d7074790000000060448201526064015b60405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff85166101ce576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f49737375657220616464726573732063616e6e6f7420626520307830000000006044820152606401610148565b6040517f5a4038f50000000000000000000000000000000000000000000000000000000081526004810187905273ffffffffffffffffffffffffffffffffffffffff821690635a4038f590602401602060405180830381865afa158015610239573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061025d91906107ef565b15801561032457506040517f0828e9f30000000000000000000000000000000000000000000000000000000081526004810187905273ffffffffffffffffffffffffffffffffffffffff821690630828e9f390602401602060405180830381865afa1580156102d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f49190610818565b73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614155b61038a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f417373657274696f6e20616c72656164792065786973747300000000000000006044820152606401610148565b836fffffffffffffffffffffffffffffffff16600003610406576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f53697a652063616e6e6f742062652030000000000000000000000000000000006044820152606401610148565b8263ffffffff16600003610476576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f547269706c6573206e756d6265722063616e6e6f7420626520300000000000006044820152606401610148565b816bffffffffffffffffffffffff166000036104ee576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f4368756e6b73206e756d6265722063616e6e6f742062652030000000000000006044820152606401610148565b6040517f448338bd0000000000000000000000000000000000000000000000000000000081526004810187905273ffffffffffffffffffffffffffffffffffffffff86811660248301526fffffffffffffffffffffffffffffffff8616604483015263ffffffff851660648301526bffffffffffffffffffffffff8416608483015282169063448338bd9060a401600060405180830381600087803b15801561059657600080fd5b505af11580156105aa573d6000803e3d6000fd5b50506040805173ffffffffffffffffffffffffffffffffffffffff891681526fffffffffffffffffffffffffffffffff8816602082015263ffffffff8716818301526bffffffffffffffffffffffff8616606082015290518993507fe0abc42b99f2943708059678140f1c02c6ca3ad0c5f46e7030d30c17b4ad563892509081900360800190a2505050505050565b6000546040517f8d5d2d8500000000000000000000000000000000000000000000000000000000815233600482015273ffffffffffffffffffffffffffffffffffffffff90911690638d5d2d8590602401602060405180830381865afa1580156106a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106cb91906107ef565b610731576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f466e2063616e206f6e6c792062652063616c6c656420627920617373657473006044820152606401610148565b565b73ffffffffffffffffffffffffffffffffffffffff8116811461075557600080fd5b50565b600080600080600060a0868803121561077057600080fd5b85359450602086013561078281610733565b935060408601356fffffffffffffffffffffffffffffffff811681146107a757600080fd5b9250606086013563ffffffff811681146107c057600080fd5b915060808601356bffffffffffffffffffffffff811681146107e157600080fd5b809150509295509295909350565b60006020828403121561080157600080fd5b8151801515811461081157600080fd5b9392505050565b60006020828403121561082a57600080fd5b81516108118161073356fea2646970667358221220f4a668863fcdceb10489203c604c3b21f8a251a884e67117f8c1ff0b99af90b164736f6c634300080e0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c8063365a86fc14610046578063448338bd1461008f578063d210b7cf146100a4575b600080fd5b6000546100669073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b6100a261009d366004610758565b6100c4565b005b6001546100669073ffffffffffffffffffffffffffffffffffffffff1681565b6100cc610639565b60015473ffffffffffffffffffffffffffffffffffffffff1685610151576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f417373657274696f6e2049442063616e6e6f7420626520656d7074790000000060448201526064015b60405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff85166101ce576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f49737375657220616464726573732063616e6e6f7420626520307830000000006044820152606401610148565b6040517f5a4038f50000000000000000000000000000000000000000000000000000000081526004810187905273ffffffffffffffffffffffffffffffffffffffff821690635a4038f590602401602060405180830381865afa158015610239573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061025d91906107ef565b15801561032457506040517f0828e9f30000000000000000000000000000000000000000000000000000000081526004810187905273ffffffffffffffffffffffffffffffffffffffff821690630828e9f390602401602060405180830381865afa1580156102d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f49190610818565b73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614155b61038a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f417373657274696f6e20616c72656164792065786973747300000000000000006044820152606401610148565b836fffffffffffffffffffffffffffffffff16600003610406576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f53697a652063616e6e6f742062652030000000000000000000000000000000006044820152606401610148565b8263ffffffff16600003610476576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f547269706c6573206e756d6265722063616e6e6f7420626520300000000000006044820152606401610148565b816bffffffffffffffffffffffff166000036104ee576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f4368756e6b73206e756d6265722063616e6e6f742062652030000000000000006044820152606401610148565b6040517f448338bd0000000000000000000000000000000000000000000000000000000081526004810187905273ffffffffffffffffffffffffffffffffffffffff86811660248301526fffffffffffffffffffffffffffffffff8616604483015263ffffffff851660648301526bffffffffffffffffffffffff8416608483015282169063448338bd9060a401600060405180830381600087803b15801561059657600080fd5b505af11580156105aa573d6000803e3d6000fd5b50506040805173ffffffffffffffffffffffffffffffffffffffff891681526fffffffffffffffffffffffffffffffff8816602082015263ffffffff8716818301526bffffffffffffffffffffffff8616606082015290518993507fe0abc42b99f2943708059678140f1c02c6ca3ad0c5f46e7030d30c17b4ad563892509081900360800190a2505050505050565b6000546040517f8d5d2d8500000000000000000000000000000000000000000000000000000000815233600482015273ffffffffffffffffffffffffffffffffffffffff90911690638d5d2d8590602401602060405180830381865afa1580156106a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106cb91906107ef565b610731576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f466e2063616e206f6e6c792062652063616c6c656420627920617373657473006044820152606401610148565b565b73ffffffffffffffffffffffffffffffffffffffff8116811461075557600080fd5b50565b600080600080600060a0868803121561077057600080fd5b85359450602086013561078281610733565b935060408601356fffffffffffffffffffffffffffffffff811681146107a757600080fd5b9250606086013563ffffffff811681146107c057600080fd5b915060808601356bffffffffffffffffffffffff811681146107e157600080fd5b809150509295509295909350565b60006020828403121561080157600080fd5b8151801515811461081157600080fd5b9392505050565b60006020828403121561082a57600080fd5b81516108118161073356fea2646970667358221220f4a668863fcdceb10489203c604c3b21f8a251a884e67117f8c1ff0b99af90b164736f6c634300080e0033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:651:50",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:50",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "95:209:50",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "141:16:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "150:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "153:1:50",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "143:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "143:12:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "143:12:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "116:7:50"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "125:9:50"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "112:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "112:23:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "137:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "108:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "108:32:50"
                  },
                  "nodeType": "YulIf",
                  "src": "105:52:50"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "166:29:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "185:9:50"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "179:5:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "179:16:50"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "170:5:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "258:16:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "267:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "270:1:50",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "260:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "260:12:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "260:12:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "217:5:50"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "228:5:50"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "243:3:50",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "248:1:50",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "239:3:50"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "239:11:50"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "252:1:50",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "235:3:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "235:19:50"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "224:3:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "224:31:50"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "214:2:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "214:42:50"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "207:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "207:50:50"
                  },
                  "nodeType": "YulIf",
                  "src": "204:70:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "283:15:50",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "293:5:50"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "283:6:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "61:9:50",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "72:7:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "84:6:50",
                "type": ""
              }
            ],
            "src": "14:290:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "483:166:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "500:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "511:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "493:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "493:21:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "493:21:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "534:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "545:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "530:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "530:18:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "550:2:50",
                        "type": "",
                        "value": "16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "523:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "523:30:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "523:30:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "573:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "584:2:50",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "569:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "569:18:50"
                      },
                      {
                        "hexValue": "417373657274696f6e53746f72616765",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "589:18:50",
                        "type": "",
                        "value": "AssertionStorage"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "562:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "562:46:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "562:46:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "617:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "629:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "640:2:50",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "625:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "625:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "617:4:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_1b38fa5f5a2bbc5c8ed3240fdab3cdb3a1d1eec4bc453225250445a5220953b3__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "460:9:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "474:4:50",
                "type": ""
              }
            ],
            "src": "309:340:50"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_1b38fa5f5a2bbc5c8ed3240fdab3cdb3a1d1eec4bc453225250445a5220953b3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"AssertionStorage\")\n        tail := add(headStart, 96)\n    }\n}",
      "id": 50,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:6117:50",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:50",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "127:125:50",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "137:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "149:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "160:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "145:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "145:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "137:4:50"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "179:9:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "194:6:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "202:42:50",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "190:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "190:55:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "172:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "172:74:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "172:74:50"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_Hub_$6045__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "96:9:50",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "107:6:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "118:4:50",
                "type": ""
              }
            ],
            "src": "14:238:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "302:109:50",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "389:16:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "398:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "401:1:50",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "391:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "391:12:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "391:12:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "325:5:50"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "336:5:50"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "343:42:50",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "332:3:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "332:54:50"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "322:2:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "322:65:50"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "315:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "315:73:50"
                  },
                  "nodeType": "YulIf",
                  "src": "312:93:50"
                }
              ]
            },
            "name": "validator_revert_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "291:5:50",
                "type": ""
              }
            ],
            "src": "257:154:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "552:738:50",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "599:16:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "608:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "611:1:50",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "601:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "601:12:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "601:12:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "573:7:50"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "582:9:50"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "569:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "569:23:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "594:3:50",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "565:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "565:33:50"
                  },
                  "nodeType": "YulIf",
                  "src": "562:53:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "624:33:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "647:9:50"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "634:12:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "634:23:50"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "624:6:50"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "666:45:50",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "696:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "707:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "692:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "692:18:50"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "679:12:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "679:32:50"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "670:5:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "745:5:50"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "720:24:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "720:31:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "720:31:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "760:15:50",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "770:5:50"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "760:6:50"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "784:47:50",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "816:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "827:2:50",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "812:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "812:18:50"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "799:12:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "799:32:50"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "788:7:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "913:16:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "922:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "925:1:50",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "915:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "915:12:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "915:12:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value_1",
                            "nodeType": "YulIdentifier",
                            "src": "853:7:50"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value_1",
                                "nodeType": "YulIdentifier",
                                "src": "866:7:50"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "875:34:50",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "862:3:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "862:48:50"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "850:2:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "850:61:50"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "843:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "843:69:50"
                  },
                  "nodeType": "YulIf",
                  "src": "840:89:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "938:17:50",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "948:7:50"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "938:6:50"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "964:47:50",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "996:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1007:2:50",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "992:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "992:18:50"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "979:12:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "979:32:50"
                  },
                  "variables": [
                    {
                      "name": "value_2",
                      "nodeType": "YulTypedName",
                      "src": "968:7:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1069:16:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1078:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1081:1:50",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1071:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1071:12:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1071:12:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value_2",
                            "nodeType": "YulIdentifier",
                            "src": "1033:7:50"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value_2",
                                "nodeType": "YulIdentifier",
                                "src": "1046:7:50"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1055:10:50",
                                "type": "",
                                "value": "0xffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1042:3:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1042:24:50"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1030:2:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1030:37:50"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1023:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1023:45:50"
                  },
                  "nodeType": "YulIf",
                  "src": "1020:65:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1094:17:50",
                  "value": {
                    "name": "value_2",
                    "nodeType": "YulIdentifier",
                    "src": "1104:7:50"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "1094:6:50"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1120:48:50",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1152:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1163:3:50",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1148:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1148:19:50"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1135:12:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1135:33:50"
                  },
                  "variables": [
                    {
                      "name": "value_3",
                      "nodeType": "YulTypedName",
                      "src": "1124:7:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1242:16:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1251:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1254:1:50",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1244:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1244:12:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1244:12:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value_3",
                            "nodeType": "YulIdentifier",
                            "src": "1190:7:50"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value_3",
                                "nodeType": "YulIdentifier",
                                "src": "1203:7:50"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1212:26:50",
                                "type": "",
                                "value": "0xffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1199:3:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1199:40:50"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1187:2:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1187:53:50"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1180:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1180:61:50"
                  },
                  "nodeType": "YulIf",
                  "src": "1177:81:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1267:17:50",
                  "value": {
                    "name": "value_3",
                    "nodeType": "YulIdentifier",
                    "src": "1277:7:50"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "1267:6:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32t_addresst_uint128t_uint32t_uint96",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "486:9:50",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "497:7:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "509:6:50",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "517:6:50",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "525:6:50",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "533:6:50",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "541:6:50",
                "type": ""
              }
            ],
            "src": "416:874:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1422:125:50",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1432:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1444:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1455:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1440:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1440:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1432:4:50"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1474:9:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1489:6:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1497:42:50",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1485:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1485:55:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1467:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1467:74:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1467:74:50"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_AssertionStorage_$11258__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1391:9:50",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1402:6:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1413:4:50",
                "type": ""
              }
            ],
            "src": "1295:252:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1726:178:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1743:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1754:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1736:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1736:21:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1736:21:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1777:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1788:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1773:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1773:18:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1793:2:50",
                        "type": "",
                        "value": "28"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1766:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1766:30:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1766:30:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1816:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1827:2:50",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1812:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1812:18:50"
                      },
                      {
                        "hexValue": "417373657274696f6e2049442063616e6e6f7420626520656d707479",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1832:30:50",
                        "type": "",
                        "value": "Assertion ID cannot be empty"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1805:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1805:58:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1805:58:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1872:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1884:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1895:2:50",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1880:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1880:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1872:4:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_89df3aa9dc91c9e6b7335c5e2141e0bfb20f31d66286767058f28a65b2c60566__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1703:9:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1717:4:50",
                "type": ""
              }
            ],
            "src": "1552:352:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2083:178:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2100:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2111:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2093:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2093:21:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2093:21:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2134:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2145:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2130:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2130:18:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2150:2:50",
                        "type": "",
                        "value": "28"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2123:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2123:30:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2123:30:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2173:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2184:2:50",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2169:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2169:18:50"
                      },
                      {
                        "hexValue": "49737375657220616464726573732063616e6e6f7420626520307830",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2189:30:50",
                        "type": "",
                        "value": "Issuer address cannot be 0x0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2162:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2162:58:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2162:58:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2229:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2241:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2252:2:50",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2237:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2237:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2229:4:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ee728aa177f670eaf731cf29f05fa56955210a574160125e151fffe96ad2452a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2060:9:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2074:4:50",
                "type": ""
              }
            ],
            "src": "1909:352:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2367:76:50",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2377:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2389:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2400:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2385:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2385:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2377:4:50"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2419:9:50"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2430:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2412:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2412:25:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2412:25:50"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2336:9:50",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2347:6:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2358:4:50",
                "type": ""
              }
            ],
            "src": "2266:177:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2526:199:50",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2572:16:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2581:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2584:1:50",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2574:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2574:12:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2574:12:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2547:7:50"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2556:9:50"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2543:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2543:23:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2568:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2539:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2539:32:50"
                  },
                  "nodeType": "YulIf",
                  "src": "2536:52:50"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2597:29:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2616:9:50"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2610:5:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2610:16:50"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2601:5:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2679:16:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2688:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2691:1:50",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2681:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2681:12:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2681:12:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2648:5:50"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "2669:5:50"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "2662:6:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2662:13:50"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "2655:6:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2655:21:50"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2645:2:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2645:32:50"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2638:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2638:40:50"
                  },
                  "nodeType": "YulIf",
                  "src": "2635:60:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2704:15:50",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2714:5:50"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2704:6:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2492:9:50",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2503:7:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2515:6:50",
                "type": ""
              }
            ],
            "src": "2448:277:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2811:170:50",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2857:16:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2866:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2869:1:50",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2859:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2859:12:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2859:12:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2832:7:50"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2841:9:50"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2828:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2828:23:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2853:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2824:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2824:32:50"
                  },
                  "nodeType": "YulIf",
                  "src": "2821:52:50"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2882:29:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2901:9:50"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2895:5:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2895:16:50"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2886:5:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2945:5:50"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "2920:24:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2920:31:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2920:31:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2960:15:50",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2970:5:50"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2960:6:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2777:9:50",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2788:7:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2800:6:50",
                "type": ""
              }
            ],
            "src": "2730:251:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3160:174:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3177:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3188:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3170:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3170:21:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3170:21:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3211:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3222:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3207:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3207:18:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3227:2:50",
                        "type": "",
                        "value": "24"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3200:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3200:30:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3200:30:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3250:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3261:2:50",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3246:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3246:18:50"
                      },
                      {
                        "hexValue": "417373657274696f6e20616c726561647920657869737473",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3266:26:50",
                        "type": "",
                        "value": "Assertion already exists"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3239:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3239:54:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3239:54:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3302:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3314:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3325:2:50",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3310:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3310:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3302:4:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_284a64410f240e2d7a43cb03ed4a0bfa8cde125b8a3fe1c73a581caeabc5857b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3137:9:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3151:4:50",
                "type": ""
              }
            ],
            "src": "2986:348:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3513:166:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3530:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3541:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3523:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3523:21:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3523:21:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3564:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3575:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3560:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3560:18:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3580:2:50",
                        "type": "",
                        "value": "16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3553:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3553:30:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3553:30:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3603:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3614:2:50",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3599:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3599:18:50"
                      },
                      {
                        "hexValue": "53697a652063616e6e6f742062652030",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3619:18:50",
                        "type": "",
                        "value": "Size cannot be 0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3592:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3592:46:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3592:46:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3647:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3659:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3670:2:50",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3655:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3655:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3647:4:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_107600d144cabcb55363ca43a3b12daecb886417ca17ba42db593ade3cb01141__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3490:9:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3504:4:50",
                "type": ""
              }
            ],
            "src": "3339:340:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3858:176:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3875:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3886:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3868:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3868:21:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3868:21:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3909:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3920:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3905:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3905:18:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3925:2:50",
                        "type": "",
                        "value": "26"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3898:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3898:30:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3898:30:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3948:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3959:2:50",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3944:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3944:18:50"
                      },
                      {
                        "hexValue": "547269706c6573206e756d6265722063616e6e6f742062652030",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3964:28:50",
                        "type": "",
                        "value": "Triples number cannot be 0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3937:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3937:56:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3937:56:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4002:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4014:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4025:2:50",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4010:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4010:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4002:4:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_2523cdef5b64564e3701017cfed95f30bed03db94f30c140600b192db4daec80__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3835:9:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3849:4:50",
                "type": ""
              }
            ],
            "src": "3684:350:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4213:175:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4230:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4241:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4223:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4223:21:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4223:21:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4264:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4275:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4260:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4260:18:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4280:2:50",
                        "type": "",
                        "value": "25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4253:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4253:30:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4253:30:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4303:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4314:2:50",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4299:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4299:18:50"
                      },
                      {
                        "hexValue": "4368756e6b73206e756d6265722063616e6e6f742062652030",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4319:27:50",
                        "type": "",
                        "value": "Chunks number cannot be 0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4292:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4292:55:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4292:55:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4356:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4368:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4379:2:50",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4364:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4364:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4356:4:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_bb6442e9740298e44a5a8e78f5cd9f748085a34f577b064d5f3954e116ec9def__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4190:9:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4204:4:50",
                "type": ""
              }
            ],
            "src": "4039:349:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4602:390:50",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4612:27:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4624:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4635:3:50",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4620:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4620:19:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4612:4:50"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4655:9:50"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4666:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4648:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4648:25:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4648:25:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4693:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4704:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4689:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4689:18:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "4713:6:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4721:42:50",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4709:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4709:55:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4682:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4682:83:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4682:83:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4785:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4796:2:50",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4781:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4781:18:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "4805:6:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4813:34:50",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4801:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4801:47:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4774:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4774:75:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4774:75:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4869:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4880:2:50",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4865:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4865:18:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value3",
                            "nodeType": "YulIdentifier",
                            "src": "4889:6:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4897:10:50",
                            "type": "",
                            "value": "0xffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4885:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4885:23:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4858:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4858:51:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4858:51:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4929:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4940:3:50",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4925:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4925:19:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value4",
                            "nodeType": "YulIdentifier",
                            "src": "4950:6:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4958:26:50",
                            "type": "",
                            "value": "0xffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4946:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4946:39:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4918:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4918:68:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4918:68:50"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32_t_address_t_uint128_t_uint32_t_uint96__to_t_bytes32_t_address_t_uint128_t_uint32_t_uint96__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4539:9:50",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "4550:6:50",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "4558:6:50",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "4566:6:50",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4574:6:50",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4582:6:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4593:4:50",
                "type": ""
              }
            ],
            "src": "4393:599:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5178:346:50",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5188:27:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5200:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5211:3:50",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5196:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5196:19:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5188:4:50"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5231:9:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "5246:6:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5254:42:50",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5242:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5242:55:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5224:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5224:74:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5224:74:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5318:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5329:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5314:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5314:18:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "5338:6:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5346:34:50",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5334:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5334:47:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5307:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5307:75:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5307:75:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5402:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5413:2:50",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5398:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5398:18:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "5422:6:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5430:10:50",
                            "type": "",
                            "value": "0xffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5418:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5418:23:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5391:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5391:51:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5391:51:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5462:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5473:2:50",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5458:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5458:18:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value3",
                            "nodeType": "YulIdentifier",
                            "src": "5482:6:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5490:26:50",
                            "type": "",
                            "value": "0xffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5478:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5478:39:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5451:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5451:67:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5451:67:50"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint128_t_uint32_t_uint96__to_t_address_t_uint128_t_uint32_t_uint96__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5123:9:50",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "5134:6:50",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "5142:6:50",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5150:6:50",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5158:6:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5169:4:50",
                "type": ""
              }
            ],
            "src": "4997:527:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5630:125:50",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5640:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5652:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5663:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5648:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5648:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5640:4:50"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5682:9:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "5697:6:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5705:42:50",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5693:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5693:55:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5675:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5675:74:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5675:74:50"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5599:9:50",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5610:6:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5621:4:50",
                "type": ""
              }
            ],
            "src": "5529:226:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5934:181:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5951:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5962:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5944:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5944:21:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5944:21:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5985:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5996:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5981:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5981:18:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6001:2:50",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5974:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5974:30:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5974:30:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6024:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6035:2:50",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6020:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6020:18:50"
                      },
                      {
                        "hexValue": "466e2063616e206f6e6c792062652063616c6c656420627920617373657473",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6040:33:50",
                        "type": "",
                        "value": "Fn can only be called by assets"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6013:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6013:61:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6013:61:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6083:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6095:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6106:2:50",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6091:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6091:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6083:4:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_393bdd944caef85d9bceb90a3f35ffce9cfa2daa344fb77fe802d6537c229e07__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5911:9:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5925:4:50",
                "type": ""
              }
            ],
            "src": "5760:355:50"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_contract$_Hub_$6045__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes32t_addresst_uint128t_uint32t_uint96(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n        let value_1 := calldataload(add(headStart, 64))\n        if iszero(eq(value_1, and(value_1, 0xffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n        value2 := value_1\n        let value_2 := calldataload(add(headStart, 96))\n        if iszero(eq(value_2, and(value_2, 0xffffffff))) { revert(0, 0) }\n        value3 := value_2\n        let value_3 := calldataload(add(headStart, 128))\n        if iszero(eq(value_3, and(value_3, 0xffffffffffffffffffffffff))) { revert(0, 0) }\n        value4 := value_3\n    }\n    function abi_encode_tuple_t_contract$_AssertionStorage_$11258__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_stringliteral_89df3aa9dc91c9e6b7335c5e2141e0bfb20f31d66286767058f28a65b2c60566__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Assertion ID cannot be empty\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ee728aa177f670eaf731cf29f05fa56955210a574160125e151fffe96ad2452a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Issuer address cannot be 0x0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_284a64410f240e2d7a43cb03ed4a0bfa8cde125b8a3fe1c73a581caeabc5857b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Assertion already exists\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_107600d144cabcb55363ca43a3b12daecb886417ca17ba42db593ade3cb01141__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Size cannot be 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_2523cdef5b64564e3701017cfed95f30bed03db94f30c140600b192db4daec80__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Triples number cannot be 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_bb6442e9740298e44a5a8e78f5cd9f748085a34f577b064d5f3954e116ec9def__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Chunks number cannot be 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_bytes32_t_address_t_uint128_t_uint32_t_uint96__to_t_bytes32_t_address_t_uint128_t_uint32_t_uint96__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 64), and(value2, 0xffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 96), and(value3, 0xffffffff))\n        mstore(add(headStart, 128), and(value4, 0xffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_address_t_uint128_t_uint32_t_uint96__to_t_address_t_uint128_t_uint32_t_uint96__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 64), and(value2, 0xffffffff))\n        mstore(add(headStart, 96), and(value3, 0xffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_stringliteral_393bdd944caef85d9bceb90a3f35ffce9cfa2daa344fb77fe802d6537c229e07__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Fn can only be called by assets\")\n        tail := add(headStart, 96)\n    }\n}",
      "id": 50,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "226:1434:17:-:0;;;443:182;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;487:24:17;;479:33;;;;;;517:3;:21;;-1:-1:-1;;;;;;517:21:17;-1:-1:-1;;;;;517:21:17;;;;;;;;578:42;;-1:-1:-1;;;578:42:17;;511:2:50;578:42:17;;;493:21:50;550:2;530:18;;;523:30;-1:-1:-1;;;569:18:50;;;562:46;578:22:17;;625:18:50;;578:42:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;542:16;:79;;-1:-1:-1;;;;;;542:79:17;-1:-1:-1;;;;;542:79:17;;;;;;;;;;-1:-1:-1;226:1434:17;;14:290:50;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:50;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:50:o;309:340::-;226:1434:17;;;;;;",
  "deployedSourceMap": "226:1434:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;382:14;;;;;;;;;;;;202:42:50;190:55;;;172:74;;160:2;145:18;382:14:17;;;;;;;710:807;;;;;;:::i;:::-;;:::i;:::-;;399:40;;;;;;;;;710:807;668:21;:19;:21::i;:::-;902:16:::1;::::0;::::1;;931:11:::0;923:66:::1;;;::::0;::::1;::::0;;1754:2:50;923:66:17::1;::::0;::::1;1736:21:50::0;1793:2;1773:18;;;1766:30;1832;1812:18;;;1805:58;1880:18;;923:66:17::1;;;;;;;;;1001:20;::::0;::::1;993:61;;;::::0;::::1;::::0;;2111:2:50;993:61:17::1;::::0;::::1;2093:21:50::0;2150:2;2130:18;;;2123:30;2189;2169:18;;;2162:58;2237:18;;993:61:17::1;1909:352:50::0;993:61:17::1;1071:32;::::0;;;;::::1;::::0;::::1;2412:25:50::0;;;1071:19:17::1;::::0;::::1;::::0;::::1;::::0;2385:18:50;;1071:32:17::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1070:33;:84;;;;-1:-1:-1::0;1118:35:17::1;::::0;;;;::::1;::::0;::::1;2412:25:50::0;;;1118:22:17::1;::::0;::::1;::::0;::::1;::::0;2385:18:50;;1118:35:17::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1108:45;;:6;:45;;;;1070:84;1058:131;;;::::0;::::1;::::0;;3188:2:50;1058:131:17::1;::::0;::::1;3170:21:50::0;3227:2;3207:18;;;3200:30;3266:26;3246:18;;;3239:54;3310:18;;1058:131:17::1;2986:348:50::0;1058:131:17::1;1201:4;:9;;1209:1;1201:9:::0;1193:38:::1;;;::::0;::::1;::::0;;3541:2:50;1193:38:17::1;::::0;::::1;3523:21:50::0;3580:2;3560:18;;;3553:30;3619:18;3599;;;3592:46;3655:18;;1193:38:17::1;3339:340:50::0;1193:38:17::1;1243:13;:18;;1260:1;1243:18:::0;1235:57:::1;;;::::0;::::1;::::0;;3886:2:50;1235:57:17::1;::::0;::::1;3868:21:50::0;3925:2;3905:18;;;3898:30;3964:28;3944:18;;;3937:56;4010:18;;1235:57:17::1;3684:350:50::0;1235:57:17::1;1304:12;:17;;1320:1;1304:17:::0;1296:55:::1;;;::::0;::::1;::::0;;4241:2:50;1296:55:17::1;::::0;::::1;4223:21:50::0;4280:2;4260:18;;;4253:30;4319:27;4299:18;;;4292:55;4364:18;;1296:55:17::1;4039:349:50::0;1296:55:17::1;1356:75;::::0;;;;::::1;::::0;::::1;4648:25:50::0;;;1356:19:17::1;4709:55:50::0;;;4689:18;;;4682:83;4813:34;4801:47;;4781:18;;;4774:75;4897:10;4885:23;;4865:18;;;4858:51;4958:26;4946:39;;4925:19;;;4918:68;1356:19:17;::::1;::::0;::::1;::::0;4620::50;;1356:75:17::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;1441:72:17::1;::::0;;5254:42:50;5242:55;;5224:74;;5346:34;5334:47;;5329:2;5314:18;;5307:75;5430:10;5418:23;;5398:18;;;5391:51;5490:26;5478:39;;5473:2;5458:18;;5451:67;1441:72:17;;1458:11;;-1:-1:-1;1441:72:17::1;::::0;-1:-1:-1;1441:72:17;;;;5211:3:50;1441:72:17;;::::1;875:642;710:807:::0;;;;;:::o;1520:137::-;1586:3;;:31;;;;;1606:10;1586:31;;;172:74:50;1586:3:17;;;;;:19;;145:18:50;;1586:31:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1577:76;;;;;;;5962:2:50;1577:76:17;;;5944:21:50;6001:2;5981:18;;;5974:30;6040:33;6020:18;;;6013:61;6091:18;;1577:76:17;5760:355:50;1577:76:17;1520:137::o;257:154:50:-;343:42;336:5;332:54;325:5;322:65;312:93;;401:1;398;391:12;312:93;257:154;:::o;416:874::-;509:6;517;525;533;541;594:3;582:9;573:7;569:23;565:33;562:53;;;611:1;608;601:12;562:53;647:9;634:23;624:33;;707:2;696:9;692:18;679:32;720:31;745:5;720:31;:::i;:::-;770:5;-1:-1:-1;827:2:50;812:18;;799:32;875:34;862:48;;850:61;;840:89;;925:1;922;915:12;840:89;948:7;-1:-1:-1;1007:2:50;992:18;;979:32;1055:10;1042:24;;1030:37;;1020:65;;1081:1;1078;1071:12;1020:65;1104:7;-1:-1:-1;1163:3:50;1148:19;;1135:33;1212:26;1199:40;;1187:53;;1177:81;;1254:1;1251;1244:12;1177:81;1277:7;1267:17;;;416:874;;;;;;;;:::o;2448:277::-;2515:6;2568:2;2556:9;2547:7;2543:23;2539:32;2536:52;;;2584:1;2581;2574:12;2536:52;2616:9;2610:16;2669:5;2662:13;2655:21;2648:5;2645:32;2635:60;;2691:1;2688;2681:12;2635:60;2714:5;2448:277;-1:-1:-1;;;2448:277:50:o;2730:251::-;2800:6;2853:2;2841:9;2832:7;2828:23;2824:32;2821:52;;;2869:1;2866;2859:12;2821:52;2901:9;2895:16;2920:31;2945:5;2920:31;:::i",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport { Hub } from \"./Hub.sol\";\nimport { AssertionStorage } from \"./storage/AssertionStorage.sol\";\nimport { AssertionStructs } from \"./structs/AssertionStructs.sol\";\n\ncontract Assertion {\n\n\tevent AssertionCreated(\n\t\tbytes32 indexed assertionId, address issuer, uint128 size, uint32 triplesNumber, uint96 chunksNumber\n\t);\n\n\tHub public hub;\n\tAssertionStorage public assertionStorage;\n\n\tconstructor(address hubAddress) {\n\t\trequire(hubAddress != address(0));\n\n\t\thub = Hub(hubAddress);\n\t\tassertionStorage = AssertionStorage(hub.getContractAddress(\"AssertionStorage\"));\n\t}\n\n\tmodifier onlyAssetContracts() {\n        _checkAssetContract();\n        _;\n    }\n\n\tfunction createAssertion(\n\t\tbytes32 assertionId,\n\t\taddress issuer,\n\t\tuint128 size,\n\t\tuint32 triplesNumber,\n\t\tuint96 chunksNumber\n\t)\n\t\texternal\n\t\tonlyAssetContracts\n\t{\n\t\tAssertionStorage ans = assertionStorage;\n\n\t\trequire(assertionId != bytes32(0), \"Assertion ID cannot be empty\");\n\t\trequire(issuer != address(0), \"Issuer address cannot be 0x0\");\n\t\trequire(\n\t\t\t!ans.assertionExists(assertionId) && (issuer != ans.getAssertionIssuer(assertionId)),\n\t\t\t\"Assertion already exists\"\n\t\t);\n\t\trequire(size != 0, \"Size cannot be 0\");\n\t\trequire(triplesNumber != 0, \"Triples number cannot be 0\");\n\t\trequire(chunksNumber != 0, \"Chunks number cannot be 0\");\n\n\t\tans.createAssertion(assertionId, issuer, size, triplesNumber, chunksNumber);\n\n\t\temit AssertionCreated(assertionId, issuer, size, triplesNumber, chunksNumber);\n\t}\n\n\tfunction _checkAssetContract() internal view virtual {\n\t\trequire (hub.isAssetContract(msg.sender), \"Fn can only be called by assets\");\n\t}\n\n}",
  "sourcePath": "/Users/waving/Desktop/OriginTrail/dkg-evm-module/contracts/Assertion.sol",
  "ast": {
    "absolutePath": "project:/contracts/Assertion.sol",
    "exportedSymbols": {
      "Assertion": [
        5632
      ],
      "AssertionStorage": [
        11258
      ],
      "AssertionStructs": [
        13520
      ],
      "Hub": [
        6045
      ]
    },
    "id": 5633,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5460,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:17"
      },
      {
        "absolutePath": "project:/contracts/Hub.sol",
        "file": "./Hub.sol",
        "id": 5462,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5633,
        "sourceUnit": 6046,
        "src": "58:32:17",
        "symbolAliases": [
          {
            "foreign": {
              "id": 5461,
              "name": "Hub",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 6045,
              "src": "67:3:17",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/storage/AssertionStorage.sol",
        "file": "./storage/AssertionStorage.sol",
        "id": 5464,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5633,
        "sourceUnit": 11259,
        "src": "91:66:17",
        "symbolAliases": [
          {
            "foreign": {
              "id": 5463,
              "name": "AssertionStorage",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 11258,
              "src": "100:16:17",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/structs/AssertionStructs.sol",
        "file": "./structs/AssertionStructs.sol",
        "id": 5466,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5633,
        "sourceUnit": 13521,
        "src": "158:66:17",
        "symbolAliases": [
          {
            "foreign": {
              "id": 5465,
              "name": "AssertionStructs",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 13520,
              "src": "167:16:17",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Assertion",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 5632,
        "linearizedBaseContracts": [
          5632
        ],
        "name": "Assertion",
        "nameLocation": "235:9:17",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "eventSelector": "e0abc42b99f2943708059678140f1c02c6ca3ad0c5f46e7030d30c17b4ad5638",
            "id": 5478,
            "name": "AssertionCreated",
            "nameLocation": "255:16:17",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 5477,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5468,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "assertionId",
                  "nameLocation": "291:11:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 5478,
                  "src": "275:27:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 5467,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "275:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5470,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "issuer",
                  "nameLocation": "312:6:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 5478,
                  "src": "304:14:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5469,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "304:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5472,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "size",
                  "nameLocation": "328:4:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 5478,
                  "src": "320:12:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 5471,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "320:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5474,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "triplesNumber",
                  "nameLocation": "341:13:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 5478,
                  "src": "334:20:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 5473,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "334:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5476,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "chunksNumber",
                  "nameLocation": "363:12:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 5478,
                  "src": "356:19:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 5475,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "356:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "271:107:17"
            },
            "src": "249:130:17"
          },
          {
            "constant": false,
            "functionSelector": "365a86fc",
            "id": 5481,
            "mutability": "mutable",
            "name": "hub",
            "nameLocation": "393:3:17",
            "nodeType": "VariableDeclaration",
            "scope": 5632,
            "src": "382:14:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Hub_$6045",
              "typeString": "contract Hub"
            },
            "typeName": {
              "id": 5480,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 5479,
                "name": "Hub",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 6045,
                "src": "382:3:17"
              },
              "referencedDeclaration": 6045,
              "src": "382:3:17",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Hub_$6045",
                "typeString": "contract Hub"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d210b7cf",
            "id": 5484,
            "mutability": "mutable",
            "name": "assertionStorage",
            "nameLocation": "423:16:17",
            "nodeType": "VariableDeclaration",
            "scope": 5632,
            "src": "399:40:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_AssertionStorage_$11258",
              "typeString": "contract AssertionStorage"
            },
            "typeName": {
              "id": 5483,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 5482,
                "name": "AssertionStorage",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 11258,
                "src": "399:16:17"
              },
              "referencedDeclaration": 11258,
              "src": "399:16:17",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AssertionStorage_$11258",
                "typeString": "contract AssertionStorage"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 5513,
              "nodeType": "Block",
              "src": "475:150:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 5495,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5490,
                          "name": "hubAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5486,
                          "src": "487:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 5493,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "509:1:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 5492,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "501:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 5491,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "501:7:17",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 5494,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "501:10:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "487:24:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 5489,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "479:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 5496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "479:33:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5497,
                  "nodeType": "ExpressionStatement",
                  "src": "479:33:17"
                },
                {
                  "expression": {
                    "id": 5502,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5498,
                      "name": "hub",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5481,
                      "src": "517:3:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Hub_$6045",
                        "typeString": "contract Hub"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 5500,
                          "name": "hubAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5486,
                          "src": "527:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 5499,
                        "name": "Hub",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6045,
                        "src": "523:3:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Hub_$6045_$",
                          "typeString": "type(contract Hub)"
                        }
                      },
                      "id": 5501,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "523:15:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Hub_$6045",
                        "typeString": "contract Hub"
                      }
                    },
                    "src": "517:21:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Hub_$6045",
                      "typeString": "contract Hub"
                    }
                  },
                  "id": 5503,
                  "nodeType": "ExpressionStatement",
                  "src": "517:21:17"
                },
                {
                  "expression": {
                    "id": 5511,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5504,
                      "name": "assertionStorage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5484,
                      "src": "542:16:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AssertionStorage_$11258",
                        "typeString": "contract AssertionStorage"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "417373657274696f6e53746f72616765",
                              "id": 5508,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "601:18:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_1b38fa5f5a2bbc5c8ed3240fdab3cdb3a1d1eec4bc453225250445a5220953b3",
                                "typeString": "literal_string \"AssertionStorage\""
                              },
                              "value": "AssertionStorage"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_1b38fa5f5a2bbc5c8ed3240fdab3cdb3a1d1eec4bc453225250445a5220953b3",
                                "typeString": "literal_string \"AssertionStorage\""
                              }
                            ],
                            "expression": {
                              "id": 5506,
                              "name": "hub",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5481,
                              "src": "578:3:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Hub_$6045",
                                "typeString": "contract Hub"
                              }
                            },
                            "id": 5507,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getContractAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5980,
                            "src": "578:22:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_address_$",
                              "typeString": "function (string memory) view external returns (address)"
                            }
                          },
                          "id": 5509,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "578:42:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 5505,
                        "name": "AssertionStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11258,
                        "src": "561:16:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_AssertionStorage_$11258_$",
                          "typeString": "type(contract AssertionStorage)"
                        }
                      },
                      "id": 5510,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "561:60:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AssertionStorage_$11258",
                        "typeString": "contract AssertionStorage"
                      }
                    },
                    "src": "542:79:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AssertionStorage_$11258",
                      "typeString": "contract AssertionStorage"
                    }
                  },
                  "id": 5512,
                  "nodeType": "ExpressionStatement",
                  "src": "542:79:17"
                }
              ]
            },
            "id": 5514,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5487,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5486,
                  "mutability": "mutable",
                  "name": "hubAddress",
                  "nameLocation": "463:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 5514,
                  "src": "455:18:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5485,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "455:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "454:20:17"
            },
            "returnParameters": {
              "id": 5488,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "475:0:17"
            },
            "scope": 5632,
            "src": "443:182:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5520,
              "nodeType": "Block",
              "src": "658:49:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 5516,
                      "name": "_checkAssetContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5631,
                      "src": "668:19:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$__$",
                        "typeString": "function () view"
                      }
                    },
                    "id": 5517,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "668:21:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5518,
                  "nodeType": "ExpressionStatement",
                  "src": "668:21:17"
                },
                {
                  "id": 5519,
                  "nodeType": "PlaceholderStatement",
                  "src": "699:1:17"
                }
              ]
            },
            "id": 5521,
            "name": "onlyAssetContracts",
            "nameLocation": "637:18:17",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 5515,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "655:2:17"
            },
            "src": "628:79:17",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 5617,
              "nodeType": "Block",
              "src": "875:642:17",
              "statements": [
                {
                  "assignments": [
                    5538
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5538,
                      "mutability": "mutable",
                      "name": "ans",
                      "nameLocation": "896:3:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 5617,
                      "src": "879:20:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AssertionStorage_$11258",
                        "typeString": "contract AssertionStorage"
                      },
                      "typeName": {
                        "id": 5537,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 5536,
                          "name": "AssertionStorage",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 11258,
                          "src": "879:16:17"
                        },
                        "referencedDeclaration": 11258,
                        "src": "879:16:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AssertionStorage_$11258",
                          "typeString": "contract AssertionStorage"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5540,
                  "initialValue": {
                    "id": 5539,
                    "name": "assertionStorage",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5484,
                    "src": "902:16:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AssertionStorage_$11258",
                      "typeString": "contract AssertionStorage"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "879:39:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 5547,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5542,
                          "name": "assertionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5523,
                          "src": "931:11:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 5545,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "954:1:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 5544,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "946:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": {
                              "id": 5543,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "946:7:17",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 5546,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "946:10:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "931:25:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "417373657274696f6e2049442063616e6e6f7420626520656d707479",
                        "id": 5548,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "958:30:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_89df3aa9dc91c9e6b7335c5e2141e0bfb20f31d66286767058f28a65b2c60566",
                          "typeString": "literal_string \"Assertion ID cannot be empty\""
                        },
                        "value": "Assertion ID cannot be empty"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_89df3aa9dc91c9e6b7335c5e2141e0bfb20f31d66286767058f28a65b2c60566",
                          "typeString": "literal_string \"Assertion ID cannot be empty\""
                        }
                      ],
                      "id": 5541,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "923:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5549,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "923:66:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5550,
                  "nodeType": "ExpressionStatement",
                  "src": "923:66:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 5557,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5552,
                          "name": "issuer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5525,
                          "src": "1001:6:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 5555,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1019:1:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 5554,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1011:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 5553,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1011:7:17",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 5556,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1011:10:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1001:20:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "49737375657220616464726573732063616e6e6f7420626520307830",
                        "id": 5558,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1023:30:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ee728aa177f670eaf731cf29f05fa56955210a574160125e151fffe96ad2452a",
                          "typeString": "literal_string \"Issuer address cannot be 0x0\""
                        },
                        "value": "Issuer address cannot be 0x0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ee728aa177f670eaf731cf29f05fa56955210a574160125e151fffe96ad2452a",
                          "typeString": "literal_string \"Issuer address cannot be 0x0\""
                        }
                      ],
                      "id": 5551,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "993:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5559,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "993:61:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5560,
                  "nodeType": "ExpressionStatement",
                  "src": "993:61:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 5574,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5566,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "1070:33:17",
                          "subExpression": {
                            "arguments": [
                              {
                                "id": 5564,
                                "name": "assertionId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5523,
                                "src": "1091:11:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "expression": {
                                "id": 5562,
                                "name": "ans",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5538,
                                "src": "1071:3:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AssertionStorage_$11258",
                                  "typeString": "contract AssertionStorage"
                                }
                              },
                              "id": 5563,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "assertionExists",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11244,
                              "src": "1071:19:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_bool_$",
                                "typeString": "function (bytes32) view external returns (bool)"
                              }
                            },
                            "id": 5565,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1071:32:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 5572,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 5567,
                                "name": "issuer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5525,
                                "src": "1108:6:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "id": 5570,
                                    "name": "assertionId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5523,
                                    "src": "1141:11:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "expression": {
                                    "id": 5568,
                                    "name": "ans",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5538,
                                    "src": "1118:3:17",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_AssertionStorage_$11258",
                                      "typeString": "contract AssertionStorage"
                                    }
                                  },
                                  "id": 5569,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "getAssertionIssuer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 11190,
                                  "src": "1118:22:17",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                                    "typeString": "function (bytes32) view external returns (address)"
                                  }
                                },
                                "id": 5571,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1118:35:17",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "1108:45:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 5573,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "1107:47:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1070:84:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "417373657274696f6e20616c726561647920657869737473",
                        "id": 5575,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1159:26:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_284a64410f240e2d7a43cb03ed4a0bfa8cde125b8a3fe1c73a581caeabc5857b",
                          "typeString": "literal_string \"Assertion already exists\""
                        },
                        "value": "Assertion already exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_284a64410f240e2d7a43cb03ed4a0bfa8cde125b8a3fe1c73a581caeabc5857b",
                          "typeString": "literal_string \"Assertion already exists\""
                        }
                      ],
                      "id": 5561,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1058:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5576,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1058:131:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5577,
                  "nodeType": "ExpressionStatement",
                  "src": "1058:131:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "id": 5581,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5579,
                          "name": "size",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5527,
                          "src": "1201:4:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 5580,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1209:1:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1201:9:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53697a652063616e6e6f742062652030",
                        "id": 5582,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1212:18:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_107600d144cabcb55363ca43a3b12daecb886417ca17ba42db593ade3cb01141",
                          "typeString": "literal_string \"Size cannot be 0\""
                        },
                        "value": "Size cannot be 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_107600d144cabcb55363ca43a3b12daecb886417ca17ba42db593ade3cb01141",
                          "typeString": "literal_string \"Size cannot be 0\""
                        }
                      ],
                      "id": 5578,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1193:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5583,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1193:38:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5584,
                  "nodeType": "ExpressionStatement",
                  "src": "1193:38:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 5588,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5586,
                          "name": "triplesNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5529,
                          "src": "1243:13:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 5587,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1260:1:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1243:18:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "547269706c6573206e756d6265722063616e6e6f742062652030",
                        "id": 5589,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1263:28:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2523cdef5b64564e3701017cfed95f30bed03db94f30c140600b192db4daec80",
                          "typeString": "literal_string \"Triples number cannot be 0\""
                        },
                        "value": "Triples number cannot be 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2523cdef5b64564e3701017cfed95f30bed03db94f30c140600b192db4daec80",
                          "typeString": "literal_string \"Triples number cannot be 0\""
                        }
                      ],
                      "id": 5585,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1235:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5590,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1235:57:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5591,
                  "nodeType": "ExpressionStatement",
                  "src": "1235:57:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        },
                        "id": 5595,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5593,
                          "name": "chunksNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5531,
                          "src": "1304:12:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 5594,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1320:1:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1304:17:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4368756e6b73206e756d6265722063616e6e6f742062652030",
                        "id": 5596,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1323:27:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bb6442e9740298e44a5a8e78f5cd9f748085a34f577b064d5f3954e116ec9def",
                          "typeString": "literal_string \"Chunks number cannot be 0\""
                        },
                        "value": "Chunks number cannot be 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bb6442e9740298e44a5a8e78f5cd9f748085a34f577b064d5f3954e116ec9def",
                          "typeString": "literal_string \"Chunks number cannot be 0\""
                        }
                      ],
                      "id": 5592,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1296:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5597,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1296:55:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5598,
                  "nodeType": "ExpressionStatement",
                  "src": "1296:55:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5602,
                        "name": "assertionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5523,
                        "src": "1376:11:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 5603,
                        "name": "issuer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5525,
                        "src": "1389:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5604,
                        "name": "size",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5527,
                        "src": "1397:4:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 5605,
                        "name": "triplesNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5529,
                        "src": "1403:13:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 5606,
                        "name": "chunksNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5531,
                        "src": "1418:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      ],
                      "expression": {
                        "id": 5599,
                        "name": "ans",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5538,
                        "src": "1356:3:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AssertionStorage_$11258",
                          "typeString": "contract AssertionStorage"
                        }
                      },
                      "id": 5601,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "createAssertion",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11151,
                      "src": "1356:19:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$_t_uint128_$_t_uint32_$_t_uint96_$returns$__$",
                        "typeString": "function (bytes32,address,uint128,uint32,uint96) external"
                      }
                    },
                    "id": 5607,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1356:75:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5608,
                  "nodeType": "ExpressionStatement",
                  "src": "1356:75:17"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 5610,
                        "name": "assertionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5523,
                        "src": "1458:11:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 5611,
                        "name": "issuer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5525,
                        "src": "1471:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5612,
                        "name": "size",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5527,
                        "src": "1479:4:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 5613,
                        "name": "triplesNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5529,
                        "src": "1485:13:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 5614,
                        "name": "chunksNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5531,
                        "src": "1500:12:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      ],
                      "id": 5609,
                      "name": "AssertionCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5478,
                      "src": "1441:16:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_uint128_$_t_uint32_$_t_uint96_$returns$__$",
                        "typeString": "function (bytes32,address,uint128,uint32,uint96)"
                      }
                    },
                    "id": 5615,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1441:72:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5616,
                  "nodeType": "EmitStatement",
                  "src": "1436:77:17"
                }
              ]
            },
            "functionSelector": "448338bd",
            "id": 5618,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 5534,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5533,
                  "name": "onlyAssetContracts",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5521,
                  "src": "855:18:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "855:18:17"
              }
            ],
            "name": "createAssertion",
            "nameLocation": "719:15:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5532,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5523,
                  "mutability": "mutable",
                  "name": "assertionId",
                  "nameLocation": "746:11:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 5618,
                  "src": "738:19:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 5522,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "738:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5525,
                  "mutability": "mutable",
                  "name": "issuer",
                  "nameLocation": "769:6:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 5618,
                  "src": "761:14:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5524,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "761:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5527,
                  "mutability": "mutable",
                  "name": "size",
                  "nameLocation": "787:4:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 5618,
                  "src": "779:12:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 5526,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "779:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5529,
                  "mutability": "mutable",
                  "name": "triplesNumber",
                  "nameLocation": "802:13:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 5618,
                  "src": "795:20:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 5528,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "795:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5531,
                  "mutability": "mutable",
                  "name": "chunksNumber",
                  "nameLocation": "826:12:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 5618,
                  "src": "819:19:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 5530,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "819:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "734:107:17"
            },
            "returnParameters": {
              "id": 5535,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "875:0:17"
            },
            "scope": 5632,
            "src": "710:807:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5630,
              "nodeType": "Block",
              "src": "1573:84:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 5624,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1606:3:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 5625,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1606:10:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 5622,
                            "name": "hub",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5481,
                            "src": "1586:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Hub_$6045",
                              "typeString": "contract Hub"
                            }
                          },
                          "id": 5623,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isAssetContract",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6044,
                          "src": "1586:19:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 5626,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1586:31:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "466e2063616e206f6e6c792062652063616c6c656420627920617373657473",
                        "id": 5627,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1619:33:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_393bdd944caef85d9bceb90a3f35ffce9cfa2daa344fb77fe802d6537c229e07",
                          "typeString": "literal_string \"Fn can only be called by assets\""
                        },
                        "value": "Fn can only be called by assets"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_393bdd944caef85d9bceb90a3f35ffce9cfa2daa344fb77fe802d6537c229e07",
                          "typeString": "literal_string \"Fn can only be called by assets\""
                        }
                      ],
                      "id": 5621,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1577:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5628,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1577:76:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5629,
                  "nodeType": "ExpressionStatement",
                  "src": "1577:76:17"
                }
              ]
            },
            "id": 5631,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_checkAssetContract",
            "nameLocation": "1529:19:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5619,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1548:2:17"
            },
            "returnParameters": {
              "id": 5620,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1573:0:17"
            },
            "scope": 5632,
            "src": "1520:137:17",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 5633,
        "src": "226:1434:17",
        "usedErrors": []
      }
    ],
    "src": "33:1627:17"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.14+commit.80d49f37.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.10",
  "updatedAt": "2022-12-02T20:40:59.551Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}