{
  "contractName": "Assertion",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "hubAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "assertionStorage",
      "outputs": [
        {
          "internalType": "contract AssertionStorage",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "hub",
      "outputs": [
        {
          "internalType": "contract Hub",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "assertionId",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "issuer",
          "type": "address"
        },
        {
          "internalType": "uint128",
          "name": "size",
          "type": "uint128"
        },
        {
          "internalType": "uint32",
          "name": "triplesNumber",
          "type": "uint32"
        },
        {
          "internalType": "uint96",
          "name": "chunksNumber",
          "type": "uint96"
        }
      ],
      "name": "createAssertion",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"hubAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"assertionStorage\",\"outputs\":[{\"internalType\":\"contract AssertionStorage\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"size\",\"type\":\"uint128\"},{\"internalType\":\"uint32\",\"name\":\"triplesNumber\",\"type\":\"uint32\"},{\"internalType\":\"uint96\",\"name\":\"chunksNumber\",\"type\":\"uint96\"}],\"name\":\"createAssertion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hub\",\"outputs\":[{\"internalType\":\"contract Hub\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Assertion.sol\":\"Assertion\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"project:/contracts/Assertion.sol\":{\"keccak256\":\"0x292547015a675141ea33f870510adce01fbb88a20bee9994773672afb40af582\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5d170387ce83262607f6f1d22f980c360cfcdd7a0e7acf2039b69850427eb6ce\",\"dweb:/ipfs/QmUjtbLnsTecvN7z7WxCWFPAbtTFBr5UcFtUQkdBxG9xRM\"]},\"project:/contracts/Hub.sol\":{\"keccak256\":\"0xddb2970d30f056a92c01944e8c984831361045bbecdd1b94f44cb879dc4489cb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://16b477801bf41bd7704c8b8064e04093ed9e6b61fcc2c080fc98da9fbab87448\",\"dweb:/ipfs/QmcvCeup6gKkxBR3QZ6X38dH4PjD1dixPa4tP7b9pue1xw\"]},\"project:/contracts/interface/Named.sol\":{\"keccak256\":\"0x1338740a42a69ca4e56153a749f20484f57331901b43a73473902fb45ffe52e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d37d0799ac66711f8bf3bbb897d43cfccb3439eff396f92b40cebe8398d128c\",\"dweb:/ipfs/QmY4NpnYC7dtjs2c1VMcCmuqRMsF3a8TrxLc3R4ZsxhKCM\"]},\"project:/contracts/storage/AssertionStorage.sol\":{\"keccak256\":\"0x16d106b89e4ffa950c6339392ca0d60b5000ca49ea41dc8f829a396f9713082d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae7e967ad20c5ac48925c5856fd694fcfd88d3ab0a0f182fa2044ee3b67d96c7\",\"dweb:/ipfs/QmXAmUj3hWLQXr6dEP6jEYKR5ubtWgy89rayYsRRDT234w\"]},\"project:/contracts/structs/AssertionStructs.sol\":{\"keccak256\":\"0xcb73887fd8b066be999060829b81cc8abe2dc50d7d286d527a96018b8f942d40\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20b04df5925b8f0ccfdf5db7075ec2ac6f7ecfa5017cb4337441a3d170688798\",\"dweb:/ipfs/QmUfcAvWvA66K6dZ6AQAcPPi7bWoP5mjkVGZ3VLJwKeNUB\"]},\"project:/contracts/utils/UnorderedNamedContractDynamicSet.sol\":{\"keccak256\":\"0x60044fabbf9ef8210f7798053565a8a6ec721cd7801a04d6da9740c4c107c297\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b78441b81c9d2461a130a5880e8a41432b815aea49d465e0c8dde45725e24b8\",\"dweb:/ipfs/QmXXMJGdgsrZvGRgx7VUX39KPHuKuAViuVtnGEp6qZaWXF\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405161092b38038061092b83398101604081905261002f91610104565b6001600160a01b03811661004257600080fd5b600080546001600160a01b0319166001600160a01b038316908117909155604051630110ceef60e21b815260206004820152601060248201526f417373657274696f6e53746f7261676560801b60448201526304433bbc90606401602060405180830381865afa1580156100ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100de9190610104565b600180546001600160a01b0319166001600160a01b039290921691909117905550610134565b60006020828403121561011657600080fd5b81516001600160a01b038116811461012d57600080fd5b9392505050565b6107e8806101436000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063365a86fc14610046578063448338bd1461008f578063d210b7cf146100a4575b600080fd5b6000546100669073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b6100a261009d3660046106d5565b6100c4565b005b6001546100669073ffffffffffffffffffffffffffffffffffffffff1681565b6100cc6105b6565b60015473ffffffffffffffffffffffffffffffffffffffff1685610151576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f417373657274696f6e2049442063616e6e6f7420626520656d7074790000000060448201526064015b60405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff85166101ce576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f49737375657220616464726573732063616e6e6f7420626520307830000000006044820152606401610148565b6040517f5a4038f50000000000000000000000000000000000000000000000000000000081526004810187905273ffffffffffffffffffffffffffffffffffffffff821690635a4038f590602401602060405180830381865afa158015610239573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061025d919061076c565b15801561032457506040517f0828e9f30000000000000000000000000000000000000000000000000000000081526004810187905273ffffffffffffffffffffffffffffffffffffffff821690630828e9f390602401602060405180830381865afa1580156102d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f49190610795565b73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614155b61038a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f417373657274696f6e20616c72656164792065786973747300000000000000006044820152606401610148565b836fffffffffffffffffffffffffffffffff16600003610406576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f53697a652063616e6e6f742062652030000000000000000000000000000000006044820152606401610148565b8263ffffffff16600003610476576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f547269706c6573206e756d6265722063616e6e6f7420626520300000000000006044820152606401610148565b816bffffffffffffffffffffffff166000036104ee576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f4368756e6b73206e756d6265722063616e6e6f742062652030000000000000006044820152606401610148565b6040517f448338bd0000000000000000000000000000000000000000000000000000000081526004810187905273ffffffffffffffffffffffffffffffffffffffff86811660248301526fffffffffffffffffffffffffffffffff8616604483015263ffffffff851660648301526bffffffffffffffffffffffff8416608483015282169063448338bd9060a401600060405180830381600087803b15801561059657600080fd5b505af11580156105aa573d6000803e3d6000fd5b50505050505050505050565b6000546040517f8d5d2d8500000000000000000000000000000000000000000000000000000000815233600482015273ffffffffffffffffffffffffffffffffffffffff90911690638d5d2d8590602401602060405180830381865afa158015610624573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610648919061076c565b6106ae576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f466e2063616e206f6e6c792062652063616c6c656420627920617373657473006044820152606401610148565b565b73ffffffffffffffffffffffffffffffffffffffff811681146106d257600080fd5b50565b600080600080600060a086880312156106ed57600080fd5b8535945060208601356106ff816106b0565b935060408601356fffffffffffffffffffffffffffffffff8116811461072457600080fd5b9250606086013563ffffffff8116811461073d57600080fd5b915060808601356bffffffffffffffffffffffff8116811461075e57600080fd5b809150509295509295909350565b60006020828403121561077e57600080fd5b8151801515811461078e57600080fd5b9392505050565b6000602082840312156107a757600080fd5b815161078e816106b056fea26469706673582212206d8a108999b76fab68bb81aca019ea135270f35f4bf88b7b960982f3c081f57f64736f6c634300080e0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c8063365a86fc14610046578063448338bd1461008f578063d210b7cf146100a4575b600080fd5b6000546100669073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b6100a261009d3660046106d5565b6100c4565b005b6001546100669073ffffffffffffffffffffffffffffffffffffffff1681565b6100cc6105b6565b60015473ffffffffffffffffffffffffffffffffffffffff1685610151576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f417373657274696f6e2049442063616e6e6f7420626520656d7074790000000060448201526064015b60405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff85166101ce576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f49737375657220616464726573732063616e6e6f7420626520307830000000006044820152606401610148565b6040517f5a4038f50000000000000000000000000000000000000000000000000000000081526004810187905273ffffffffffffffffffffffffffffffffffffffff821690635a4038f590602401602060405180830381865afa158015610239573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061025d919061076c565b15801561032457506040517f0828e9f30000000000000000000000000000000000000000000000000000000081526004810187905273ffffffffffffffffffffffffffffffffffffffff821690630828e9f390602401602060405180830381865afa1580156102d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f49190610795565b73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614155b61038a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f417373657274696f6e20616c72656164792065786973747300000000000000006044820152606401610148565b836fffffffffffffffffffffffffffffffff16600003610406576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f53697a652063616e6e6f742062652030000000000000000000000000000000006044820152606401610148565b8263ffffffff16600003610476576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f547269706c6573206e756d6265722063616e6e6f7420626520300000000000006044820152606401610148565b816bffffffffffffffffffffffff166000036104ee576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f4368756e6b73206e756d6265722063616e6e6f742062652030000000000000006044820152606401610148565b6040517f448338bd0000000000000000000000000000000000000000000000000000000081526004810187905273ffffffffffffffffffffffffffffffffffffffff86811660248301526fffffffffffffffffffffffffffffffff8616604483015263ffffffff851660648301526bffffffffffffffffffffffff8416608483015282169063448338bd9060a401600060405180830381600087803b15801561059657600080fd5b505af11580156105aa573d6000803e3d6000fd5b50505050505050505050565b6000546040517f8d5d2d8500000000000000000000000000000000000000000000000000000000815233600482015273ffffffffffffffffffffffffffffffffffffffff90911690638d5d2d8590602401602060405180830381865afa158015610624573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610648919061076c565b6106ae576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f466e2063616e206f6e6c792062652063616c6c656420627920617373657473006044820152606401610148565b565b73ffffffffffffffffffffffffffffffffffffffff811681146106d257600080fd5b50565b600080600080600060a086880312156106ed57600080fd5b8535945060208601356106ff816106b0565b935060408601356fffffffffffffffffffffffffffffffff8116811461072457600080fd5b9250606086013563ffffffff8116811461073d57600080fd5b915060808601356bffffffffffffffffffffffff8116811461075e57600080fd5b809150509295509295909350565b60006020828403121561077e57600080fd5b8151801515811461078e57600080fd5b9392505050565b6000602082840312156107a757600080fd5b815161078e816106b056fea26469706673582212206d8a108999b76fab68bb81aca019ea135270f35f4bf88b7b960982f3c081f57f64736f6c634300080e0033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:651:54",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:54",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "95:209:54",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "141:16:54",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "150:1:54",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "153:1:54",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "143:6:54"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "143:12:54"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "143:12:54"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "116:7:54"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "125:9:54"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "112:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "112:23:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "137:2:54",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "108:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "108:32:54"
                  },
                  "nodeType": "YulIf",
                  "src": "105:52:54"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "166:29:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "185:9:54"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "179:5:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "179:16:54"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "170:5:54",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "258:16:54",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "267:1:54",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "270:1:54",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "260:6:54"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "260:12:54"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "260:12:54"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "217:5:54"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "228:5:54"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "243:3:54",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "248:1:54",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "239:3:54"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "239:11:54"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "252:1:54",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "235:3:54"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "235:19:54"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "224:3:54"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "224:31:54"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "214:2:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "214:42:54"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "207:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "207:50:54"
                  },
                  "nodeType": "YulIf",
                  "src": "204:70:54"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "283:15:54",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "293:5:54"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "283:6:54"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "61:9:54",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "72:7:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "84:6:54",
                "type": ""
              }
            ],
            "src": "14:290:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "483:166:54",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "500:9:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "511:2:54",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "493:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "493:21:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "493:21:54"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "534:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "545:2:54",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "530:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "530:18:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "550:2:54",
                        "type": "",
                        "value": "16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "523:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "523:30:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "523:30:54"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "573:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "584:2:54",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "569:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "569:18:54"
                      },
                      {
                        "hexValue": "417373657274696f6e53746f72616765",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "589:18:54",
                        "type": "",
                        "value": "AssertionStorage"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "562:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "562:46:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "562:46:54"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "617:26:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "629:9:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "640:2:54",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "625:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "625:18:54"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "617:4:54"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_1b38fa5f5a2bbc5c8ed3240fdab3cdb3a1d1eec4bc453225250445a5220953b3__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "460:9:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "474:4:54",
                "type": ""
              }
            ],
            "src": "309:340:54"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_1b38fa5f5a2bbc5c8ed3240fdab3cdb3a1d1eec4bc453225250445a5220953b3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"AssertionStorage\")\n        tail := add(headStart, 96)\n    }\n}",
      "id": 54,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:5585:54",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:54",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "127:125:54",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "137:26:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "149:9:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "160:2:54",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "145:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "145:18:54"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "137:4:54"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "179:9:54"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "194:6:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "202:42:54",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "190:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "190:55:54"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "172:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "172:74:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "172:74:54"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_Hub_$6503__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "96:9:54",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "107:6:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "118:4:54",
                "type": ""
              }
            ],
            "src": "14:238:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "302:109:54",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "389:16:54",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "398:1:54",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "401:1:54",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "391:6:54"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "391:12:54"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "391:12:54"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "325:5:54"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "336:5:54"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "343:42:54",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "332:3:54"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "332:54:54"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "322:2:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "322:65:54"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "315:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "315:73:54"
                  },
                  "nodeType": "YulIf",
                  "src": "312:93:54"
                }
              ]
            },
            "name": "validator_revert_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "291:5:54",
                "type": ""
              }
            ],
            "src": "257:154:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "552:738:54",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "599:16:54",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "608:1:54",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "611:1:54",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "601:6:54"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "601:12:54"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "601:12:54"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "573:7:54"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "582:9:54"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "569:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "569:23:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "594:3:54",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "565:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "565:33:54"
                  },
                  "nodeType": "YulIf",
                  "src": "562:53:54"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "624:33:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "647:9:54"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "634:12:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "634:23:54"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "624:6:54"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "666:45:54",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "696:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "707:2:54",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "692:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "692:18:54"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "679:12:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "679:32:54"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "670:5:54",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "745:5:54"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "720:24:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "720:31:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "720:31:54"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "760:15:54",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "770:5:54"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "760:6:54"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "784:47:54",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "816:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "827:2:54",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "812:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "812:18:54"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "799:12:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "799:32:54"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "788:7:54",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "913:16:54",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "922:1:54",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "925:1:54",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "915:6:54"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "915:12:54"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "915:12:54"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value_1",
                            "nodeType": "YulIdentifier",
                            "src": "853:7:54"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value_1",
                                "nodeType": "YulIdentifier",
                                "src": "866:7:54"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "875:34:54",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "862:3:54"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "862:48:54"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "850:2:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "850:61:54"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "843:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "843:69:54"
                  },
                  "nodeType": "YulIf",
                  "src": "840:89:54"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "938:17:54",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "948:7:54"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "938:6:54"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "964:47:54",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "996:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1007:2:54",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "992:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "992:18:54"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "979:12:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "979:32:54"
                  },
                  "variables": [
                    {
                      "name": "value_2",
                      "nodeType": "YulTypedName",
                      "src": "968:7:54",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1069:16:54",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1078:1:54",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1081:1:54",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1071:6:54"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1071:12:54"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1071:12:54"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value_2",
                            "nodeType": "YulIdentifier",
                            "src": "1033:7:54"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value_2",
                                "nodeType": "YulIdentifier",
                                "src": "1046:7:54"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1055:10:54",
                                "type": "",
                                "value": "0xffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1042:3:54"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1042:24:54"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1030:2:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1030:37:54"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1023:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1023:45:54"
                  },
                  "nodeType": "YulIf",
                  "src": "1020:65:54"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1094:17:54",
                  "value": {
                    "name": "value_2",
                    "nodeType": "YulIdentifier",
                    "src": "1104:7:54"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "1094:6:54"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1120:48:54",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1152:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1163:3:54",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1148:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1148:19:54"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1135:12:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1135:33:54"
                  },
                  "variables": [
                    {
                      "name": "value_3",
                      "nodeType": "YulTypedName",
                      "src": "1124:7:54",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1242:16:54",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1251:1:54",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1254:1:54",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1244:6:54"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1244:12:54"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1244:12:54"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value_3",
                            "nodeType": "YulIdentifier",
                            "src": "1190:7:54"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value_3",
                                "nodeType": "YulIdentifier",
                                "src": "1203:7:54"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1212:26:54",
                                "type": "",
                                "value": "0xffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1199:3:54"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1199:40:54"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1187:2:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1187:53:54"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1180:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1180:61:54"
                  },
                  "nodeType": "YulIf",
                  "src": "1177:81:54"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1267:17:54",
                  "value": {
                    "name": "value_3",
                    "nodeType": "YulIdentifier",
                    "src": "1277:7:54"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "1267:6:54"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32t_addresst_uint128t_uint32t_uint96",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "486:9:54",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "497:7:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "509:6:54",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "517:6:54",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "525:6:54",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "533:6:54",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "541:6:54",
                "type": ""
              }
            ],
            "src": "416:874:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1422:125:54",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1432:26:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1444:9:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1455:2:54",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1440:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1440:18:54"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1432:4:54"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1474:9:54"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1489:6:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1497:42:54",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1485:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1485:55:54"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1467:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1467:74:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1467:74:54"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_AssertionStorage_$11800__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1391:9:54",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1402:6:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1413:4:54",
                "type": ""
              }
            ],
            "src": "1295:252:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1726:178:54",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1743:9:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1754:2:54",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1736:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1736:21:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1736:21:54"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1777:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1788:2:54",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1773:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1773:18:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1793:2:54",
                        "type": "",
                        "value": "28"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1766:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1766:30:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1766:30:54"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1816:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1827:2:54",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1812:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1812:18:54"
                      },
                      {
                        "hexValue": "417373657274696f6e2049442063616e6e6f7420626520656d707479",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1832:30:54",
                        "type": "",
                        "value": "Assertion ID cannot be empty"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1805:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1805:58:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1805:58:54"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1872:26:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1884:9:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1895:2:54",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1880:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1880:18:54"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1872:4:54"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_89df3aa9dc91c9e6b7335c5e2141e0bfb20f31d66286767058f28a65b2c60566__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1703:9:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1717:4:54",
                "type": ""
              }
            ],
            "src": "1552:352:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2083:178:54",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2100:9:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2111:2:54",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2093:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2093:21:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2093:21:54"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2134:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2145:2:54",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2130:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2130:18:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2150:2:54",
                        "type": "",
                        "value": "28"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2123:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2123:30:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2123:30:54"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2173:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2184:2:54",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2169:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2169:18:54"
                      },
                      {
                        "hexValue": "49737375657220616464726573732063616e6e6f7420626520307830",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2189:30:54",
                        "type": "",
                        "value": "Issuer address cannot be 0x0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2162:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2162:58:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2162:58:54"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2229:26:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2241:9:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2252:2:54",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2237:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2237:18:54"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2229:4:54"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ee728aa177f670eaf731cf29f05fa56955210a574160125e151fffe96ad2452a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2060:9:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2074:4:54",
                "type": ""
              }
            ],
            "src": "1909:352:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2367:76:54",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2377:26:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2389:9:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2400:2:54",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2385:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2385:18:54"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2377:4:54"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2419:9:54"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2430:6:54"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2412:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2412:25:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2412:25:54"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2336:9:54",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2347:6:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2358:4:54",
                "type": ""
              }
            ],
            "src": "2266:177:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2526:199:54",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2572:16:54",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2581:1:54",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2584:1:54",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2574:6:54"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2574:12:54"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2574:12:54"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2547:7:54"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2556:9:54"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2543:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2543:23:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2568:2:54",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2539:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2539:32:54"
                  },
                  "nodeType": "YulIf",
                  "src": "2536:52:54"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2597:29:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2616:9:54"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2610:5:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2610:16:54"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2601:5:54",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2679:16:54",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2688:1:54",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2691:1:54",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2681:6:54"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2681:12:54"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2681:12:54"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2648:5:54"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "2669:5:54"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "2662:6:54"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2662:13:54"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "2655:6:54"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2655:21:54"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2645:2:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2645:32:54"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2638:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2638:40:54"
                  },
                  "nodeType": "YulIf",
                  "src": "2635:60:54"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2704:15:54",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2714:5:54"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2704:6:54"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2492:9:54",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2503:7:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2515:6:54",
                "type": ""
              }
            ],
            "src": "2448:277:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2811:170:54",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2857:16:54",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2866:1:54",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2869:1:54",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2859:6:54"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2859:12:54"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2859:12:54"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2832:7:54"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2841:9:54"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2828:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2828:23:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2853:2:54",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2824:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2824:32:54"
                  },
                  "nodeType": "YulIf",
                  "src": "2821:52:54"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2882:29:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2901:9:54"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2895:5:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2895:16:54"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2886:5:54",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2945:5:54"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "2920:24:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2920:31:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2920:31:54"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2960:15:54",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2970:5:54"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2960:6:54"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2777:9:54",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2788:7:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2800:6:54",
                "type": ""
              }
            ],
            "src": "2730:251:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3160:174:54",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3177:9:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3188:2:54",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3170:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3170:21:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3170:21:54"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3211:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3222:2:54",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3207:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3207:18:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3227:2:54",
                        "type": "",
                        "value": "24"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3200:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3200:30:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3200:30:54"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3250:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3261:2:54",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3246:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3246:18:54"
                      },
                      {
                        "hexValue": "417373657274696f6e20616c726561647920657869737473",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3266:26:54",
                        "type": "",
                        "value": "Assertion already exists"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3239:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3239:54:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3239:54:54"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3302:26:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3314:9:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3325:2:54",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3310:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3310:18:54"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3302:4:54"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_284a64410f240e2d7a43cb03ed4a0bfa8cde125b8a3fe1c73a581caeabc5857b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3137:9:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3151:4:54",
                "type": ""
              }
            ],
            "src": "2986:348:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3513:166:54",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3530:9:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3541:2:54",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3523:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3523:21:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3523:21:54"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3564:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3575:2:54",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3560:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3560:18:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3580:2:54",
                        "type": "",
                        "value": "16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3553:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3553:30:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3553:30:54"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3603:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3614:2:54",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3599:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3599:18:54"
                      },
                      {
                        "hexValue": "53697a652063616e6e6f742062652030",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3619:18:54",
                        "type": "",
                        "value": "Size cannot be 0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3592:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3592:46:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3592:46:54"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3647:26:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3659:9:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3670:2:54",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3655:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3655:18:54"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3647:4:54"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_107600d144cabcb55363ca43a3b12daecb886417ca17ba42db593ade3cb01141__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3490:9:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3504:4:54",
                "type": ""
              }
            ],
            "src": "3339:340:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3858:176:54",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3875:9:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3886:2:54",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3868:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3868:21:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3868:21:54"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3909:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3920:2:54",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3905:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3905:18:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3925:2:54",
                        "type": "",
                        "value": "26"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3898:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3898:30:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3898:30:54"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3948:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3959:2:54",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3944:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3944:18:54"
                      },
                      {
                        "hexValue": "547269706c6573206e756d6265722063616e6e6f742062652030",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3964:28:54",
                        "type": "",
                        "value": "Triples number cannot be 0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3937:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3937:56:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3937:56:54"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4002:26:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4014:9:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4025:2:54",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4010:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4010:18:54"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4002:4:54"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_2523cdef5b64564e3701017cfed95f30bed03db94f30c140600b192db4daec80__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3835:9:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3849:4:54",
                "type": ""
              }
            ],
            "src": "3684:350:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4213:175:54",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4230:9:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4241:2:54",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4223:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4223:21:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4223:21:54"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4264:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4275:2:54",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4260:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4260:18:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4280:2:54",
                        "type": "",
                        "value": "25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4253:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4253:30:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4253:30:54"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4303:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4314:2:54",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4299:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4299:18:54"
                      },
                      {
                        "hexValue": "4368756e6b73206e756d6265722063616e6e6f742062652030",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4319:27:54",
                        "type": "",
                        "value": "Chunks number cannot be 0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4292:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4292:55:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4292:55:54"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4356:26:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4368:9:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4379:2:54",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4364:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4364:18:54"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4356:4:54"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_bb6442e9740298e44a5a8e78f5cd9f748085a34f577b064d5f3954e116ec9def__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4190:9:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4204:4:54",
                "type": ""
              }
            ],
            "src": "4039:349:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4602:390:54",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4612:27:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4624:9:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4635:3:54",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4620:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4620:19:54"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4612:4:54"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4655:9:54"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4666:6:54"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4648:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4648:25:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4648:25:54"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4693:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4704:2:54",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4689:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4689:18:54"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "4713:6:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4721:42:54",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4709:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4709:55:54"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4682:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4682:83:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4682:83:54"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4785:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4796:2:54",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4781:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4781:18:54"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "4805:6:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4813:34:54",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4801:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4801:47:54"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4774:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4774:75:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4774:75:54"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4869:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4880:2:54",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4865:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4865:18:54"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value3",
                            "nodeType": "YulIdentifier",
                            "src": "4889:6:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4897:10:54",
                            "type": "",
                            "value": "0xffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4885:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4885:23:54"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4858:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4858:51:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4858:51:54"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4929:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4940:3:54",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4925:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4925:19:54"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value4",
                            "nodeType": "YulIdentifier",
                            "src": "4950:6:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4958:26:54",
                            "type": "",
                            "value": "0xffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4946:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4946:39:54"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4918:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4918:68:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4918:68:54"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32_t_address_t_uint128_t_uint32_t_uint96__to_t_bytes32_t_address_t_uint128_t_uint32_t_uint96__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4539:9:54",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "4550:6:54",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "4558:6:54",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "4566:6:54",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4574:6:54",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4582:6:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4593:4:54",
                "type": ""
              }
            ],
            "src": "4393:599:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5098:125:54",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5108:26:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5120:9:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5131:2:54",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5116:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5116:18:54"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5108:4:54"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5150:9:54"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "5165:6:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5173:42:54",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5161:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5161:55:54"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5143:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5143:74:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5143:74:54"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5067:9:54",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5078:6:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5089:4:54",
                "type": ""
              }
            ],
            "src": "4997:226:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5402:181:54",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5419:9:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5430:2:54",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5412:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5412:21:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5412:21:54"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5453:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5464:2:54",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5449:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5449:18:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5469:2:54",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5442:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5442:30:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5442:30:54"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5492:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5503:2:54",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5488:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5488:18:54"
                      },
                      {
                        "hexValue": "466e2063616e206f6e6c792062652063616c6c656420627920617373657473",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5508:33:54",
                        "type": "",
                        "value": "Fn can only be called by assets"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5481:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5481:61:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5481:61:54"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5551:26:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5563:9:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5574:2:54",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5559:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5559:18:54"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5551:4:54"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_393bdd944caef85d9bceb90a3f35ffce9cfa2daa344fb77fe802d6537c229e07__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5379:9:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5393:4:54",
                "type": ""
              }
            ],
            "src": "5228:355:54"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_contract$_Hub_$6503__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes32t_addresst_uint128t_uint32t_uint96(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n        let value_1 := calldataload(add(headStart, 64))\n        if iszero(eq(value_1, and(value_1, 0xffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n        value2 := value_1\n        let value_2 := calldataload(add(headStart, 96))\n        if iszero(eq(value_2, and(value_2, 0xffffffff))) { revert(0, 0) }\n        value3 := value_2\n        let value_3 := calldataload(add(headStart, 128))\n        if iszero(eq(value_3, and(value_3, 0xffffffffffffffffffffffff))) { revert(0, 0) }\n        value4 := value_3\n    }\n    function abi_encode_tuple_t_contract$_AssertionStorage_$11800__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_stringliteral_89df3aa9dc91c9e6b7335c5e2141e0bfb20f31d66286767058f28a65b2c60566__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Assertion ID cannot be empty\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ee728aa177f670eaf731cf29f05fa56955210a574160125e151fffe96ad2452a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Issuer address cannot be 0x0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_284a64410f240e2d7a43cb03ed4a0bfa8cde125b8a3fe1c73a581caeabc5857b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Assertion already exists\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_107600d144cabcb55363ca43a3b12daecb886417ca17ba42db593ade3cb01141__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Size cannot be 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_2523cdef5b64564e3701017cfed95f30bed03db94f30c140600b192db4daec80__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Triples number cannot be 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_bb6442e9740298e44a5a8e78f5cd9f748085a34f577b064d5f3954e116ec9def__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Chunks number cannot be 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_bytes32_t_address_t_uint128_t_uint32_t_uint96__to_t_bytes32_t_address_t_uint128_t_uint32_t_uint96__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 64), and(value2, 0xffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 96), and(value3, 0xffffffff))\n        mstore(add(headStart, 128), and(value4, 0xffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_stringliteral_393bdd944caef85d9bceb90a3f35ffce9cfa2daa344fb77fe802d6537c229e07__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Fn can only be called by assets\")\n        tail := add(headStart, 96)\n    }\n}",
      "id": 54,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "226:1219:19:-:0;;;310:182;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;354:24:19;;346:33;;;;;;384:3;:21;;-1:-1:-1;;;;;;384:21:19;-1:-1:-1;;;;;384:21:19;;;;;;;;445:42;;-1:-1:-1;;;445:42:19;;511:2:54;445:42:19;;;493:21:54;550:2;530:18;;;523:30;-1:-1:-1;;;569:18:54;;;562:46;445:22:19;;625:18:54;;445:42:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;409:16;:79;;-1:-1:-1;;;;;;409:79:19;-1:-1:-1;;;;;409:79:19;;;;;;;;;;-1:-1:-1;226:1219:19;;14:290:54;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:54;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:54:o;309:340::-;226:1219:19;;;;;;",
  "deployedSourceMap": "226:1219:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;249:14;;;;;;;;;;;;202:42:54;190:55;;;172:74;;160:2;145:18;249:14:19;;;;;;;577:725;;;;;;:::i;:::-;;:::i;:::-;;266:40;;;;;;;;;577:725;535:21;:19;:21::i;:::-;769:16:::1;::::0;::::1;;798:11:::0;790:66:::1;;;::::0;::::1;::::0;;1754:2:54;790:66:19::1;::::0;::::1;1736:21:54::0;1793:2;1773:18;;;1766:30;1832;1812:18;;;1805:58;1880:18;;790:66:19::1;;;;;;;;;868:20;::::0;::::1;860:61;;;::::0;::::1;::::0;;2111:2:54;860:61:19::1;::::0;::::1;2093:21:54::0;2150:2;2130:18;;;2123:30;2189;2169:18;;;2162:58;2237:18;;860:61:19::1;1909:352:54::0;860:61:19::1;938:32;::::0;;;;::::1;::::0;::::1;2412:25:54::0;;;938:19:19::1;::::0;::::1;::::0;::::1;::::0;2385:18:54;;938:32:19::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;937:33;:84;;;;-1:-1:-1::0;985:35:19::1;::::0;;;;::::1;::::0;::::1;2412:25:54::0;;;985:22:19::1;::::0;::::1;::::0;::::1;::::0;2385:18:54;;985:35:19::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;975:45;;:6;:45;;;;937:84;925:131;;;::::0;::::1;::::0;;3188:2:54;925:131:19::1;::::0;::::1;3170:21:54::0;3227:2;3207:18;;;3200:30;3266:26;3246:18;;;3239:54;3310:18;;925:131:19::1;2986:348:54::0;925:131:19::1;1068:4;:9;;1076:1;1068:9:::0;1060:38:::1;;;::::0;::::1;::::0;;3541:2:54;1060:38:19::1;::::0;::::1;3523:21:54::0;3580:2;3560:18;;;3553:30;3619:18;3599;;;3592:46;3655:18;;1060:38:19::1;3339:340:54::0;1060:38:19::1;1110:13;:18;;1127:1;1110:18:::0;1102:57:::1;;;::::0;::::1;::::0;;3886:2:54;1102:57:19::1;::::0;::::1;3868:21:54::0;3925:2;3905:18;;;3898:30;3964:28;3944:18;;;3937:56;4010:18;;1102:57:19::1;3684:350:54::0;1102:57:19::1;1171:12;:17;;1187:1;1171:17:::0;1163:55:::1;;;::::0;::::1;::::0;;4241:2:54;1163:55:19::1;::::0;::::1;4223:21:54::0;4280:2;4260:18;;;4253:30;4319:27;4299:18;;;4292:55;4364:18;;1163:55:19::1;4039:349:54::0;1163:55:19::1;1223:75;::::0;;;;::::1;::::0;::::1;4648:25:54::0;;;1223:19:19::1;4709:55:54::0;;;4689:18;;;4682:83;4813:34;4801:47;;4781:18;;;4774:75;4897:10;4885:23;;4865:18;;;4858:51;4958:26;4946:39;;4925:19;;;4918:68;1223:19:19;::::1;::::0;::::1;::::0;4620::54;;1223:75:19::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;742:560;577:725:::0;;;;;:::o;1305:137::-;1371:3;;:31;;;;;1391:10;1371:31;;;172:74:54;1371:3:19;;;;;:19;;145:18:54;;1371:31:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1362:76;;;;;;;5430:2:54;1362:76:19;;;5412:21:54;5469:2;5449:18;;;5442:30;5508:33;5488:18;;;5481:61;5559:18;;1362:76:19;5228:355:54;1362:76:19;1305:137::o;257:154:54:-;343:42;336:5;332:54;325:5;322:65;312:93;;401:1;398;391:12;312:93;257:154;:::o;416:874::-;509:6;517;525;533;541;594:3;582:9;573:7;569:23;565:33;562:53;;;611:1;608;601:12;562:53;647:9;634:23;624:33;;707:2;696:9;692:18;679:32;720:31;745:5;720:31;:::i;:::-;770:5;-1:-1:-1;827:2:54;812:18;;799:32;875:34;862:48;;850:61;;840:89;;925:1;922;915:12;840:89;948:7;-1:-1:-1;1007:2:54;992:18;;979:32;1055:10;1042:24;;1030:37;;1020:65;;1081:1;1078;1071:12;1020:65;1104:7;-1:-1:-1;1163:3:54;1148:19;;1135:33;1212:26;1199:40;;1187:53;;1177:81;;1254:1;1251;1244:12;1177:81;1277:7;1267:17;;;416:874;;;;;;;;:::o;2448:277::-;2515:6;2568:2;2556:9;2547:7;2543:23;2539:32;2536:52;;;2584:1;2581;2574:12;2536:52;2616:9;2610:16;2669:5;2662:13;2655:21;2648:5;2645:32;2635:60;;2691:1;2688;2681:12;2635:60;2714:5;2448:277;-1:-1:-1;;;2448:277:54:o;2730:251::-;2800:6;2853:2;2841:9;2832:7;2828:23;2824:32;2821:52;;;2869:1;2866;2859:12;2821:52;2901:9;2895:16;2920:31;2945:5;2920:31;:::i",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport { Hub } from \"./Hub.sol\";\nimport { AssertionStorage } from \"./storage/AssertionStorage.sol\";\nimport { AssertionStructs } from \"./structs/AssertionStructs.sol\";\n\ncontract Assertion {\n\n\tHub public hub;\n\tAssertionStorage public assertionStorage;\n\n\tconstructor(address hubAddress) {\n\t\trequire(hubAddress != address(0));\n\n\t\thub = Hub(hubAddress);\n\t\tassertionStorage = AssertionStorage(hub.getContractAddress(\"AssertionStorage\"));\n\t}\n\n\tmodifier onlyAssetContracts() {\n        _checkAssetContract();\n        _;\n    }\n\n\tfunction createAssertion(\n\t\tbytes32 assertionId,\n\t\taddress issuer,\n\t\tuint128 size,\n\t\tuint32 triplesNumber,\n\t\tuint96 chunksNumber\n\t)\n\t\texternal\n\t\tonlyAssetContracts\n\t{\n\t\tAssertionStorage ans = assertionStorage;\n\n\t\trequire(assertionId != bytes32(0), \"Assertion ID cannot be empty\");\n\t\trequire(issuer != address(0), \"Issuer address cannot be 0x0\");\n\t\trequire(\n\t\t\t!ans.assertionExists(assertionId) && (issuer != ans.getAssertionIssuer(assertionId)),\n\t\t\t\"Assertion already exists\"\n\t\t);\n\t\trequire(size != 0, \"Size cannot be 0\");\n\t\trequire(triplesNumber != 0, \"Triples number cannot be 0\");\n\t\trequire(chunksNumber != 0, \"Chunks number cannot be 0\");\n\n\t\tans.createAssertion(assertionId, issuer, size, triplesNumber, chunksNumber);\n\t}\n\n\tfunction _checkAssetContract() internal view virtual {\n\t\trequire (hub.isAssetContract(msg.sender), \"Fn can only be called by assets\");\n\t}\n\n}",
  "sourcePath": "/Users/max/IdeaProjects/dkg-evm-module/contracts/Assertion.sol",
  "ast": {
    "absolutePath": "project:/contracts/Assertion.sol",
    "exportedSymbols": {
      "Assertion": [
        6005
      ],
      "AssertionStorage": [
        11800
      ],
      "AssertionStructs": [
        14062
      ],
      "Hub": [
        6503
      ]
    },
    "id": 6006,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5853,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:19"
      },
      {
        "absolutePath": "project:/contracts/Hub.sol",
        "file": "./Hub.sol",
        "id": 5855,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 6006,
        "sourceUnit": 6504,
        "src": "58:32:19",
        "symbolAliases": [
          {
            "foreign": {
              "id": 5854,
              "name": "Hub",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 6503,
              "src": "67:3:19",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/storage/AssertionStorage.sol",
        "file": "./storage/AssertionStorage.sol",
        "id": 5857,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 6006,
        "sourceUnit": 11801,
        "src": "91:66:19",
        "symbolAliases": [
          {
            "foreign": {
              "id": 5856,
              "name": "AssertionStorage",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 11800,
              "src": "100:16:19",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/structs/AssertionStructs.sol",
        "file": "./structs/AssertionStructs.sol",
        "id": 5859,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 6006,
        "sourceUnit": 14063,
        "src": "158:66:19",
        "symbolAliases": [
          {
            "foreign": {
              "id": 5858,
              "name": "AssertionStructs",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 14062,
              "src": "167:16:19",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Assertion",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 6005,
        "linearizedBaseContracts": [
          6005
        ],
        "name": "Assertion",
        "nameLocation": "235:9:19",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "365a86fc",
            "id": 5862,
            "mutability": "mutable",
            "name": "hub",
            "nameLocation": "260:3:19",
            "nodeType": "VariableDeclaration",
            "scope": 6005,
            "src": "249:14:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Hub_$6503",
              "typeString": "contract Hub"
            },
            "typeName": {
              "id": 5861,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 5860,
                "name": "Hub",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 6503,
                "src": "249:3:19"
              },
              "referencedDeclaration": 6503,
              "src": "249:3:19",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Hub_$6503",
                "typeString": "contract Hub"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d210b7cf",
            "id": 5865,
            "mutability": "mutable",
            "name": "assertionStorage",
            "nameLocation": "290:16:19",
            "nodeType": "VariableDeclaration",
            "scope": 6005,
            "src": "266:40:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_AssertionStorage_$11800",
              "typeString": "contract AssertionStorage"
            },
            "typeName": {
              "id": 5864,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 5863,
                "name": "AssertionStorage",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 11800,
                "src": "266:16:19"
              },
              "referencedDeclaration": 11800,
              "src": "266:16:19",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AssertionStorage_$11800",
                "typeString": "contract AssertionStorage"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 5894,
              "nodeType": "Block",
              "src": "342:150:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 5876,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5871,
                          "name": "hubAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5867,
                          "src": "354:10:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 5874,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "376:1:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 5873,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "368:7:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 5872,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "368:7:19",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 5875,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "368:10:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "354:24:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 5870,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "346:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 5877,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "346:33:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5878,
                  "nodeType": "ExpressionStatement",
                  "src": "346:33:19"
                },
                {
                  "expression": {
                    "id": 5883,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5879,
                      "name": "hub",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5862,
                      "src": "384:3:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Hub_$6503",
                        "typeString": "contract Hub"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 5881,
                          "name": "hubAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5867,
                          "src": "394:10:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 5880,
                        "name": "Hub",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6503,
                        "src": "390:3:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Hub_$6503_$",
                          "typeString": "type(contract Hub)"
                        }
                      },
                      "id": 5882,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "390:15:19",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Hub_$6503",
                        "typeString": "contract Hub"
                      }
                    },
                    "src": "384:21:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Hub_$6503",
                      "typeString": "contract Hub"
                    }
                  },
                  "id": 5884,
                  "nodeType": "ExpressionStatement",
                  "src": "384:21:19"
                },
                {
                  "expression": {
                    "id": 5892,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5885,
                      "name": "assertionStorage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5865,
                      "src": "409:16:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AssertionStorage_$11800",
                        "typeString": "contract AssertionStorage"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "417373657274696f6e53746f72616765",
                              "id": 5889,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "468:18:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_1b38fa5f5a2bbc5c8ed3240fdab3cdb3a1d1eec4bc453225250445a5220953b3",
                                "typeString": "literal_string \"AssertionStorage\""
                              },
                              "value": "AssertionStorage"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_1b38fa5f5a2bbc5c8ed3240fdab3cdb3a1d1eec4bc453225250445a5220953b3",
                                "typeString": "literal_string \"AssertionStorage\""
                              }
                            ],
                            "expression": {
                              "id": 5887,
                              "name": "hub",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5862,
                              "src": "445:3:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Hub_$6503",
                                "typeString": "contract Hub"
                              }
                            },
                            "id": 5888,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getContractAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6438,
                            "src": "445:22:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_address_$",
                              "typeString": "function (string memory) view external returns (address)"
                            }
                          },
                          "id": 5890,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "445:42:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 5886,
                        "name": "AssertionStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11800,
                        "src": "428:16:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_AssertionStorage_$11800_$",
                          "typeString": "type(contract AssertionStorage)"
                        }
                      },
                      "id": 5891,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "428:60:19",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AssertionStorage_$11800",
                        "typeString": "contract AssertionStorage"
                      }
                    },
                    "src": "409:79:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AssertionStorage_$11800",
                      "typeString": "contract AssertionStorage"
                    }
                  },
                  "id": 5893,
                  "nodeType": "ExpressionStatement",
                  "src": "409:79:19"
                }
              ]
            },
            "id": 5895,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5868,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5867,
                  "mutability": "mutable",
                  "name": "hubAddress",
                  "nameLocation": "330:10:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 5895,
                  "src": "322:18:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5866,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "322:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "321:20:19"
            },
            "returnParameters": {
              "id": 5869,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "342:0:19"
            },
            "scope": 6005,
            "src": "310:182:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5901,
              "nodeType": "Block",
              "src": "525:49:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 5897,
                      "name": "_checkAssetContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6004,
                      "src": "535:19:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$__$",
                        "typeString": "function () view"
                      }
                    },
                    "id": 5898,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "535:21:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5899,
                  "nodeType": "ExpressionStatement",
                  "src": "535:21:19"
                },
                {
                  "id": 5900,
                  "nodeType": "PlaceholderStatement",
                  "src": "566:1:19"
                }
              ]
            },
            "id": 5902,
            "name": "onlyAssetContracts",
            "nameLocation": "504:18:19",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 5896,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "522:2:19"
            },
            "src": "495:79:19",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 5990,
              "nodeType": "Block",
              "src": "742:560:19",
              "statements": [
                {
                  "assignments": [
                    5919
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5919,
                      "mutability": "mutable",
                      "name": "ans",
                      "nameLocation": "763:3:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 5990,
                      "src": "746:20:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AssertionStorage_$11800",
                        "typeString": "contract AssertionStorage"
                      },
                      "typeName": {
                        "id": 5918,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 5917,
                          "name": "AssertionStorage",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 11800,
                          "src": "746:16:19"
                        },
                        "referencedDeclaration": 11800,
                        "src": "746:16:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AssertionStorage_$11800",
                          "typeString": "contract AssertionStorage"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5921,
                  "initialValue": {
                    "id": 5920,
                    "name": "assertionStorage",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5865,
                    "src": "769:16:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AssertionStorage_$11800",
                      "typeString": "contract AssertionStorage"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "746:39:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 5928,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5923,
                          "name": "assertionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5904,
                          "src": "798:11:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 5926,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "821:1:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 5925,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "813:7:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": {
                              "id": 5924,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "813:7:19",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 5927,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "813:10:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "798:25:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "417373657274696f6e2049442063616e6e6f7420626520656d707479",
                        "id": 5929,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "825:30:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_89df3aa9dc91c9e6b7335c5e2141e0bfb20f31d66286767058f28a65b2c60566",
                          "typeString": "literal_string \"Assertion ID cannot be empty\""
                        },
                        "value": "Assertion ID cannot be empty"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_89df3aa9dc91c9e6b7335c5e2141e0bfb20f31d66286767058f28a65b2c60566",
                          "typeString": "literal_string \"Assertion ID cannot be empty\""
                        }
                      ],
                      "id": 5922,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "790:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5930,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "790:66:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5931,
                  "nodeType": "ExpressionStatement",
                  "src": "790:66:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 5938,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5933,
                          "name": "issuer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5906,
                          "src": "868:6:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 5936,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "886:1:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 5935,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "878:7:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 5934,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "878:7:19",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 5937,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "878:10:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "868:20:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "49737375657220616464726573732063616e6e6f7420626520307830",
                        "id": 5939,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "890:30:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ee728aa177f670eaf731cf29f05fa56955210a574160125e151fffe96ad2452a",
                          "typeString": "literal_string \"Issuer address cannot be 0x0\""
                        },
                        "value": "Issuer address cannot be 0x0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ee728aa177f670eaf731cf29f05fa56955210a574160125e151fffe96ad2452a",
                          "typeString": "literal_string \"Issuer address cannot be 0x0\""
                        }
                      ],
                      "id": 5932,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "860:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5940,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "860:61:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5941,
                  "nodeType": "ExpressionStatement",
                  "src": "860:61:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 5955,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5947,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "937:33:19",
                          "subExpression": {
                            "arguments": [
                              {
                                "id": 5945,
                                "name": "assertionId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5904,
                                "src": "958:11:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "expression": {
                                "id": 5943,
                                "name": "ans",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5919,
                                "src": "938:3:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AssertionStorage_$11800",
                                  "typeString": "contract AssertionStorage"
                                }
                              },
                              "id": 5944,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "assertionExists",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11786,
                              "src": "938:19:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_bool_$",
                                "typeString": "function (bytes32) view external returns (bool)"
                              }
                            },
                            "id": 5946,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "938:32:19",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 5953,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 5948,
                                "name": "issuer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5906,
                                "src": "975:6:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "id": 5951,
                                    "name": "assertionId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5904,
                                    "src": "1008:11:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "expression": {
                                    "id": 5949,
                                    "name": "ans",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5919,
                                    "src": "985:3:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_AssertionStorage_$11800",
                                      "typeString": "contract AssertionStorage"
                                    }
                                  },
                                  "id": 5950,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "getAssertionIssuer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 11732,
                                  "src": "985:22:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                                    "typeString": "function (bytes32) view external returns (address)"
                                  }
                                },
                                "id": 5952,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "985:35:19",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "975:45:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 5954,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "974:47:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "937:84:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "417373657274696f6e20616c726561647920657869737473",
                        "id": 5956,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1026:26:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_284a64410f240e2d7a43cb03ed4a0bfa8cde125b8a3fe1c73a581caeabc5857b",
                          "typeString": "literal_string \"Assertion already exists\""
                        },
                        "value": "Assertion already exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_284a64410f240e2d7a43cb03ed4a0bfa8cde125b8a3fe1c73a581caeabc5857b",
                          "typeString": "literal_string \"Assertion already exists\""
                        }
                      ],
                      "id": 5942,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "925:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5957,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "925:131:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5958,
                  "nodeType": "ExpressionStatement",
                  "src": "925:131:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "id": 5962,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5960,
                          "name": "size",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5908,
                          "src": "1068:4:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 5961,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1076:1:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1068:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53697a652063616e6e6f742062652030",
                        "id": 5963,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1079:18:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_107600d144cabcb55363ca43a3b12daecb886417ca17ba42db593ade3cb01141",
                          "typeString": "literal_string \"Size cannot be 0\""
                        },
                        "value": "Size cannot be 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_107600d144cabcb55363ca43a3b12daecb886417ca17ba42db593ade3cb01141",
                          "typeString": "literal_string \"Size cannot be 0\""
                        }
                      ],
                      "id": 5959,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1060:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5964,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1060:38:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5965,
                  "nodeType": "ExpressionStatement",
                  "src": "1060:38:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 5969,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5967,
                          "name": "triplesNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5910,
                          "src": "1110:13:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 5968,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1127:1:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1110:18:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "547269706c6573206e756d6265722063616e6e6f742062652030",
                        "id": 5970,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1130:28:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2523cdef5b64564e3701017cfed95f30bed03db94f30c140600b192db4daec80",
                          "typeString": "literal_string \"Triples number cannot be 0\""
                        },
                        "value": "Triples number cannot be 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2523cdef5b64564e3701017cfed95f30bed03db94f30c140600b192db4daec80",
                          "typeString": "literal_string \"Triples number cannot be 0\""
                        }
                      ],
                      "id": 5966,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1102:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5971,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1102:57:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5972,
                  "nodeType": "ExpressionStatement",
                  "src": "1102:57:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        },
                        "id": 5976,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5974,
                          "name": "chunksNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5912,
                          "src": "1171:12:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 5975,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1187:1:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1171:17:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4368756e6b73206e756d6265722063616e6e6f742062652030",
                        "id": 5977,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1190:27:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bb6442e9740298e44a5a8e78f5cd9f748085a34f577b064d5f3954e116ec9def",
                          "typeString": "literal_string \"Chunks number cannot be 0\""
                        },
                        "value": "Chunks number cannot be 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bb6442e9740298e44a5a8e78f5cd9f748085a34f577b064d5f3954e116ec9def",
                          "typeString": "literal_string \"Chunks number cannot be 0\""
                        }
                      ],
                      "id": 5973,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1163:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5978,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1163:55:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5979,
                  "nodeType": "ExpressionStatement",
                  "src": "1163:55:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5983,
                        "name": "assertionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5904,
                        "src": "1243:11:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 5984,
                        "name": "issuer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5906,
                        "src": "1256:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5985,
                        "name": "size",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5908,
                        "src": "1264:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 5986,
                        "name": "triplesNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5910,
                        "src": "1270:13:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 5987,
                        "name": "chunksNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5912,
                        "src": "1285:12:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      ],
                      "expression": {
                        "id": 5980,
                        "name": "ans",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5919,
                        "src": "1223:3:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AssertionStorage_$11800",
                          "typeString": "contract AssertionStorage"
                        }
                      },
                      "id": 5982,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "createAssertion",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11693,
                      "src": "1223:19:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$_t_uint128_$_t_uint32_$_t_uint96_$returns$__$",
                        "typeString": "function (bytes32,address,uint128,uint32,uint96) external"
                      }
                    },
                    "id": 5988,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1223:75:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5989,
                  "nodeType": "ExpressionStatement",
                  "src": "1223:75:19"
                }
              ]
            },
            "functionSelector": "448338bd",
            "id": 5991,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 5915,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5914,
                  "name": "onlyAssetContracts",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5902,
                  "src": "722:18:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "722:18:19"
              }
            ],
            "name": "createAssertion",
            "nameLocation": "586:15:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5913,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5904,
                  "mutability": "mutable",
                  "name": "assertionId",
                  "nameLocation": "613:11:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 5991,
                  "src": "605:19:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 5903,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "605:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5906,
                  "mutability": "mutable",
                  "name": "issuer",
                  "nameLocation": "636:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 5991,
                  "src": "628:14:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5905,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "628:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5908,
                  "mutability": "mutable",
                  "name": "size",
                  "nameLocation": "654:4:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 5991,
                  "src": "646:12:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 5907,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "646:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5910,
                  "mutability": "mutable",
                  "name": "triplesNumber",
                  "nameLocation": "669:13:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 5991,
                  "src": "662:20:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 5909,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "662:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5912,
                  "mutability": "mutable",
                  "name": "chunksNumber",
                  "nameLocation": "693:12:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 5991,
                  "src": "686:19:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 5911,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "686:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "601:107:19"
            },
            "returnParameters": {
              "id": 5916,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "742:0:19"
            },
            "scope": 6005,
            "src": "577:725:19",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 6003,
              "nodeType": "Block",
              "src": "1358:84:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 5997,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1391:3:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 5998,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1391:10:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 5995,
                            "name": "hub",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5862,
                            "src": "1371:3:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Hub_$6503",
                              "typeString": "contract Hub"
                            }
                          },
                          "id": 5996,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isAssetContract",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6502,
                          "src": "1371:19:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 5999,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1371:31:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "466e2063616e206f6e6c792062652063616c6c656420627920617373657473",
                        "id": 6000,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1404:33:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_393bdd944caef85d9bceb90a3f35ffce9cfa2daa344fb77fe802d6537c229e07",
                          "typeString": "literal_string \"Fn can only be called by assets\""
                        },
                        "value": "Fn can only be called by assets"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_393bdd944caef85d9bceb90a3f35ffce9cfa2daa344fb77fe802d6537c229e07",
                          "typeString": "literal_string \"Fn can only be called by assets\""
                        }
                      ],
                      "id": 5994,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1362:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6001,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1362:76:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6002,
                  "nodeType": "ExpressionStatement",
                  "src": "1362:76:19"
                }
              ]
            },
            "id": 6004,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_checkAssetContract",
            "nameLocation": "1314:19:19",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5992,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1333:2:19"
            },
            "returnParameters": {
              "id": 5993,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1358:0:19"
            },
            "scope": 6005,
            "src": "1305:137:19",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 6006,
        "src": "226:1219:19",
        "usedErrors": []
      }
    ],
    "src": "33:1412:19"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.14+commit.80d49f37.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.10",
  "updatedAt": "2022-12-02T15:01:56.489Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}