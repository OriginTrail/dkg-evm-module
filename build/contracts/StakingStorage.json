{
  "contractName": "StakingStorage",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "hubAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "hub",
      "outputs": [
        {
          "internalType": "contract Hub",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint72",
          "name": "",
          "type": "uint72"
        }
      ],
      "name": "operatorFees",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "",
          "type": "uint96"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenContract",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint72",
          "name": "",
          "type": "uint72"
        }
      ],
      "name": "totalStakes",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "",
          "type": "uint96"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint72",
          "name": "identityId",
          "type": "uint72"
        },
        {
          "internalType": "uint96",
          "name": "totalStake",
          "type": "uint96"
        },
        {
          "internalType": "uint96",
          "name": "operatorFee",
          "type": "uint96"
        }
      ],
      "name": "initializeStaking",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint72",
          "name": "identityId",
          "type": "uint72"
        },
        {
          "internalType": "uint96",
          "name": "newTotalStake",
          "type": "uint96"
        }
      ],
      "name": "setTotalStake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint72",
          "name": "identityId",
          "type": "uint72"
        },
        {
          "internalType": "uint96",
          "name": "operatorFee",
          "type": "uint96"
        }
      ],
      "name": "setOperatorFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint96",
          "name": "stakeAmount",
          "type": "uint96"
        }
      ],
      "name": "transferStake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"hubAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"hub\",\"outputs\":[{\"internalType\":\"contract Hub\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint72\",\"name\":\"identityId\",\"type\":\"uint72\"},{\"internalType\":\"uint96\",\"name\":\"totalStake\",\"type\":\"uint96\"},{\"internalType\":\"uint96\",\"name\":\"operatorFee\",\"type\":\"uint96\"}],\"name\":\"initializeStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint72\",\"name\":\"\",\"type\":\"uint72\"}],\"name\":\"operatorFees\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint72\",\"name\":\"identityId\",\"type\":\"uint72\"},{\"internalType\":\"uint96\",\"name\":\"operatorFee\",\"type\":\"uint96\"}],\"name\":\"setOperatorFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint72\",\"name\":\"identityId\",\"type\":\"uint72\"},{\"internalType\":\"uint96\",\"name\":\"newTotalStake\",\"type\":\"uint96\"}],\"name\":\"setTotalStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenContract\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint72\",\"name\":\"\",\"type\":\"uint72\"}],\"name\":\"totalStakes\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"stakeAmount\",\"type\":\"uint96\"}],\"name\":\"transferStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/storage/StakingStorage.sol\":\"StakingStorage\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"project:/contracts/Hub.sol\":{\"keccak256\":\"0xddb2970d30f056a92c01944e8c984831361045bbecdd1b94f44cb879dc4489cb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://16b477801bf41bd7704c8b8064e04093ed9e6b61fcc2c080fc98da9fbab87448\",\"dweb:/ipfs/QmcvCeup6gKkxBR3QZ6X38dH4PjD1dixPa4tP7b9pue1xw\"]},\"project:/contracts/interface/Named.sol\":{\"keccak256\":\"0x1338740a42a69ca4e56153a749f20484f57331901b43a73473902fb45ffe52e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d37d0799ac66711f8bf3bbb897d43cfccb3439eff396f92b40cebe8398d128c\",\"dweb:/ipfs/QmY4NpnYC7dtjs2c1VMcCmuqRMsF3a8TrxLc3R4ZsxhKCM\"]},\"project:/contracts/storage/StakingStorage.sol\":{\"keccak256\":\"0xcb36da042c0dbb86c05c73a64439af84ddcdd723bb0436278c9585c31d187b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f636724820a6f338ab6714e74462b11cbbe008804a7b0e58640f5ca9a60d4de0\",\"dweb:/ipfs/QmevKF4FPwBBNrNkx1ade4YtdvERb554uxgPXtBZHGyYwc\"]},\"project:/contracts/utils/UnorderedNamedContractDynamicSet.sol\":{\"keccak256\":\"0x60044fabbf9ef8210f7798053565a8a6ec721cd7801a04d6da9740c4c107c297\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b78441b81c9d2461a130a5880e8a41432b815aea49d465e0c8dde45725e24b8\",\"dweb:/ipfs/QmXXMJGdgsrZvGRgx7VUX39KPHuKuAViuVtnGEp6qZaWXF\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516108c03803806108c083398101604081905261002f916100f9565b6001600160a01b03811661004257600080fd5b600080546001600160a01b0319166001600160a01b038316908117909155604051630110ceef60e21b81526020600482015260056024820152642a37b5b2b760d91b60448201526304433bbc90606401602060405180830381865afa1580156100af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100d391906100f9565b600180546001600160a01b0319166001600160a01b039290921691909117905550610129565b60006020828403121561010b57600080fd5b81516001600160a01b038116811461012257600080fd5b9392505050565b610788806101386000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80639d2b48ad1161005b5780639d2b48ad14610157578063b63365ca14610185578063dedac1ae14610198578063e7f3263a146101ab57600080fd5b8063330eece21461008d578063365a86fc146100dd57806355a373d6146101225780635611f9a314610142575b600080fd5b6100bb61009b36600461061c565b6003602052600090815260409020546bffffffffffffffffffffffff1681565b6040516bffffffffffffffffffffffff90911681526020015b60405180910390f35b6000546100fd9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100d4565b6001546100fd9073ffffffffffffffffffffffffffffffffffffffff1681565b61015561015036600461065a565b6101be565b005b6100bb61016536600461061c565b6002602052600090815260409020546bffffffffffffffffffffffff1681565b61015561019336600461065a565b61021e565b6101556101a63660046106b2565b61027e565b6101556101b93660046106d0565b610335565b6101c66103ab565b68ffffffffffffffffff91909116600090815260026020526040902080547fffffffffffffffffffffffffffffffffffffffff000000000000000000000000166bffffffffffffffffffffffff909216919091179055565b6102266103ab565b68ffffffffffffffffff91909116600090815260036020526040902080547fffffffffffffffffffffffffffffffffffffffff000000000000000000000000166bffffffffffffffffffffffff909216919091179055565b6102866104aa565b6001546040517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84811660048301526bffffffffffffffffffffffff841660248301529091169063a9059cbb906044016020604051808303816000875af115801561030c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103309190610713565b505050565b61033d6103ab565b68ffffffffffffffffff92909216600090815260026020908152604080832080546bffffffffffffffffffffffff9586167fffffffffffffffffffffffffffffffffffffffff0000000000000000000000009182161790915560039092529091208054929093169116179055565b6000546040517f1627905500000000000000000000000000000000000000000000000000000000815233600482015273ffffffffffffffffffffffffffffffffffffffff90911690631627905590602401602060405180830381865afa158015610419573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061043d9190610713565b6104a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f466e2063616e206f6e6c792062652063616c6c6564206279207468652068756260448201526064015b60405180910390fd5b565b6000546040517f04433bbc00000000000000000000000000000000000000000000000000000000815260206004820152600760248201527f5374616b696e6700000000000000000000000000000000000000000000000000604482015273ffffffffffffffffffffffffffffffffffffffff909116906304433bbc90606401602060405180830381865afa158015610546573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061056a9190610735565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f466e2063616e206f6e6c792062652063616c6c6564206279205374616b696e67604482015260640161049f565b803568ffffffffffffffffff8116811461061757600080fd5b919050565b60006020828403121561062e57600080fd5b610637826105fe565b9392505050565b80356bffffffffffffffffffffffff8116811461061757600080fd5b6000806040838503121561066d57600080fd5b610676836105fe565b91506106846020840161063e565b90509250929050565b73ffffffffffffffffffffffffffffffffffffffff811681146106af57600080fd5b50565b600080604083850312156106c557600080fd5b82356106768161068d565b6000806000606084860312156106e557600080fd5b6106ee846105fe565b92506106fc6020850161063e565b915061070a6040850161063e565b90509250925092565b60006020828403121561072557600080fd5b8151801515811461063757600080fd5b60006020828403121561074757600080fd5b81516106378161068d56fea26469706673582212208a870c681c6a46a716e974329be93f500b6fe42fe68628a439875b810baf6eba64736f6c634300080e0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100885760003560e01c80639d2b48ad1161005b5780639d2b48ad14610157578063b63365ca14610185578063dedac1ae14610198578063e7f3263a146101ab57600080fd5b8063330eece21461008d578063365a86fc146100dd57806355a373d6146101225780635611f9a314610142575b600080fd5b6100bb61009b36600461061c565b6003602052600090815260409020546bffffffffffffffffffffffff1681565b6040516bffffffffffffffffffffffff90911681526020015b60405180910390f35b6000546100fd9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100d4565b6001546100fd9073ffffffffffffffffffffffffffffffffffffffff1681565b61015561015036600461065a565b6101be565b005b6100bb61016536600461061c565b6002602052600090815260409020546bffffffffffffffffffffffff1681565b61015561019336600461065a565b61021e565b6101556101a63660046106b2565b61027e565b6101556101b93660046106d0565b610335565b6101c66103ab565b68ffffffffffffffffff91909116600090815260026020526040902080547fffffffffffffffffffffffffffffffffffffffff000000000000000000000000166bffffffffffffffffffffffff909216919091179055565b6102266103ab565b68ffffffffffffffffff91909116600090815260036020526040902080547fffffffffffffffffffffffffffffffffffffffff000000000000000000000000166bffffffffffffffffffffffff909216919091179055565b6102866104aa565b6001546040517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84811660048301526bffffffffffffffffffffffff841660248301529091169063a9059cbb906044016020604051808303816000875af115801561030c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103309190610713565b505050565b61033d6103ab565b68ffffffffffffffffff92909216600090815260026020908152604080832080546bffffffffffffffffffffffff9586167fffffffffffffffffffffffffffffffffffffffff0000000000000000000000009182161790915560039092529091208054929093169116179055565b6000546040517f1627905500000000000000000000000000000000000000000000000000000000815233600482015273ffffffffffffffffffffffffffffffffffffffff90911690631627905590602401602060405180830381865afa158015610419573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061043d9190610713565b6104a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f466e2063616e206f6e6c792062652063616c6c6564206279207468652068756260448201526064015b60405180910390fd5b565b6000546040517f04433bbc00000000000000000000000000000000000000000000000000000000815260206004820152600760248201527f5374616b696e6700000000000000000000000000000000000000000000000000604482015273ffffffffffffffffffffffffffffffffffffffff909116906304433bbc90606401602060405180830381865afa158015610546573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061056a9190610735565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f466e2063616e206f6e6c792062652063616c6c6564206279205374616b696e67604482015260640161049f565b803568ffffffffffffffffff8116811461061757600080fd5b919050565b60006020828403121561062e57600080fd5b610637826105fe565b9392505050565b80356bffffffffffffffffffffffff8116811461061757600080fd5b6000806040838503121561066d57600080fd5b610676836105fe565b91506106846020840161063e565b90509250929050565b73ffffffffffffffffffffffffffffffffffffffff811681146106af57600080fd5b50565b600080604083850312156106c557600080fd5b82356106768161068d565b6000806000606084860312156106e557600080fd5b6106ee846105fe565b92506106fc6020850161063e565b915061070a6040850161063e565b90509250925092565b60006020828403121561072557600080fd5b8151801515811461063757600080fd5b60006020828403121561074757600080fd5b81516106378161068d56fea26469706673582212208a870c681c6a46a716e974329be93f500b6fe42fe68628a439875b810baf6eba64736f6c634300080e0033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:639:54",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:54",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "95:209:54",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "141:16:54",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "150:1:54",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "153:1:54",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "143:6:54"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "143:12:54"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "143:12:54"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "116:7:54"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "125:9:54"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "112:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "112:23:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "137:2:54",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "108:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "108:32:54"
                  },
                  "nodeType": "YulIf",
                  "src": "105:52:54"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "166:29:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "185:9:54"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "179:5:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "179:16:54"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "170:5:54",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "258:16:54",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "267:1:54",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "270:1:54",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "260:6:54"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "260:12:54"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "260:12:54"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "217:5:54"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "228:5:54"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "243:3:54",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "248:1:54",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "239:3:54"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "239:11:54"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "252:1:54",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "235:3:54"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "235:19:54"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "224:3:54"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "224:31:54"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "214:2:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "214:42:54"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "207:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "207:50:54"
                  },
                  "nodeType": "YulIf",
                  "src": "204:70:54"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "283:15:54",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "293:5:54"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "283:6:54"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "61:9:54",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "72:7:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "84:6:54",
                "type": ""
              }
            ],
            "src": "14:290:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "483:154:54",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "500:9:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "511:2:54",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "493:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "493:21:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "493:21:54"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "534:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "545:2:54",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "530:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "530:18:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "550:1:54",
                        "type": "",
                        "value": "5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "523:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "523:29:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "523:29:54"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "572:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "583:2:54",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "568:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "568:18:54"
                      },
                      {
                        "hexValue": "546f6b656e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "588:7:54",
                        "type": "",
                        "value": "Token"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "561:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "561:35:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "561:35:54"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "605:26:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "617:9:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "628:2:54",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "613:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "613:18:54"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "605:4:54"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_1317f51c845ce3bfb7c268e5337a825f12f3d0af9584c2bbfbf4e64e314eaf73__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "460:9:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "474:4:54",
                "type": ""
              }
            ],
            "src": "309:328:54"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_1317f51c845ce3bfb7c268e5337a825f12f3d0af9584c2bbfbf4e64e314eaf73__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 5)\n        mstore(add(headStart, 64), \"Token\")\n        tail := add(headStart, 96)\n    }\n}",
      "id": 54,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:4501:54",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:54",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "62:125:54",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "72:29:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "94:6:54"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "81:12:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "81:20:54"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "72:5:54"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "165:16:54",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "174:1:54",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "177:1:54",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "167:6:54"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "167:12:54"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "167:12:54"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "123:5:54"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "134:5:54"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "141:20:54",
                                "type": "",
                                "value": "0xffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "130:3:54"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "130:32:54"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "120:2:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "120:43:54"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "113:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "113:51:54"
                  },
                  "nodeType": "YulIf",
                  "src": "110:71:54"
                }
              ]
            },
            "name": "abi_decode_uint72",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "41:6:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "52:5:54",
                "type": ""
              }
            ],
            "src": "14:173:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "261:115:54",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "307:16:54",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "316:1:54",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "319:1:54",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "309:6:54"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "309:12:54"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "309:12:54"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "282:7:54"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "291:9:54"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "278:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "278:23:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "303:2:54",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "274:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "274:32:54"
                  },
                  "nodeType": "YulIf",
                  "src": "271:52:54"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "332:38:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "360:9:54"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_uint72",
                      "nodeType": "YulIdentifier",
                      "src": "342:17:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "342:28:54"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "332:6:54"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint72",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "227:9:54",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "238:7:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "250:6:54",
                "type": ""
              }
            ],
            "src": "192:184:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "480:109:54",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "490:26:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "502:9:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "513:2:54",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "498:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "498:18:54"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "490:4:54"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "532:9:54"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "547:6:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "555:26:54",
                            "type": "",
                            "value": "0xffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "543:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "543:39:54"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "525:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "525:58:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "525:58:54"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint96__to_t_uint96__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "449:9:54",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "460:6:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "471:4:54",
                "type": ""
              }
            ],
            "src": "381:208:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "707:125:54",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "717:26:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "729:9:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "740:2:54",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "725:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "725:18:54"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "717:4:54"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "759:9:54"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "774:6:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "782:42:54",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "770:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "770:55:54"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "752:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "752:74:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "752:74:54"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_Hub_$6523__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "676:9:54",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "687:6:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "698:4:54",
                "type": ""
              }
            ],
            "src": "594:238:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "953:125:54",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "963:26:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "975:9:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "986:2:54",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "971:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "971:18:54"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "963:4:54"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1005:9:54"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1020:6:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1028:42:54",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1016:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1016:55:54"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "998:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "998:74:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "998:74:54"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IERC20_$1169__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "922:9:54",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "933:6:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "944:4:54",
                "type": ""
              }
            ],
            "src": "837:241:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1131:131:54",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1141:29:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1163:6:54"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1150:12:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1150:20:54"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1141:5:54"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1240:16:54",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1249:1:54",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1252:1:54",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1242:6:54"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1242:12:54"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1242:12:54"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1192:5:54"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1203:5:54"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1210:26:54",
                                "type": "",
                                "value": "0xffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1199:3:54"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1199:38:54"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1189:2:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1189:49:54"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1182:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1182:57:54"
                  },
                  "nodeType": "YulIf",
                  "src": "1179:77:54"
                }
              ]
            },
            "name": "abi_decode_uint96",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1110:6:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1121:5:54",
                "type": ""
              }
            ],
            "src": "1083:179:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1352:171:54",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1398:16:54",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1407:1:54",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1410:1:54",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1400:6:54"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1400:12:54"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1400:12:54"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1373:7:54"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1382:9:54"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1369:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1369:23:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1394:2:54",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1365:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1365:32:54"
                  },
                  "nodeType": "YulIf",
                  "src": "1362:52:54"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1423:38:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1451:9:54"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_uint72",
                      "nodeType": "YulIdentifier",
                      "src": "1433:17:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1433:28:54"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1423:6:54"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1470:47:54",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1502:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1513:2:54",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1498:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1498:18:54"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_uint96",
                      "nodeType": "YulIdentifier",
                      "src": "1480:17:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1480:37:54"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1470:6:54"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint72t_uint96",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1310:9:54",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1321:7:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1333:6:54",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1341:6:54",
                "type": ""
              }
            ],
            "src": "1267:256:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1573:109:54",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1660:16:54",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1669:1:54",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1672:1:54",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1662:6:54"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1662:12:54"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1662:12:54"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1596:5:54"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1607:5:54"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1614:42:54",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1603:3:54"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1603:54:54"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1593:2:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1593:65:54"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1586:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1586:73:54"
                  },
                  "nodeType": "YulIf",
                  "src": "1583:93:54"
                }
              ]
            },
            "name": "validator_revert_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1562:5:54",
                "type": ""
              }
            ],
            "src": "1528:154:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1773:233:54",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1819:16:54",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1828:1:54",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1831:1:54",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1821:6:54"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1821:12:54"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1821:12:54"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1794:7:54"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1803:9:54"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1790:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1790:23:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1815:2:54",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1786:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1786:32:54"
                  },
                  "nodeType": "YulIf",
                  "src": "1783:52:54"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1844:36:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1870:9:54"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1857:12:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1857:23:54"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1848:5:54",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1914:5:54"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "1889:24:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1889:31:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1889:31:54"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1929:15:54",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1939:5:54"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1929:6:54"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1953:47:54",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1985:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1996:2:54",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1981:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1981:18:54"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_uint96",
                      "nodeType": "YulIdentifier",
                      "src": "1963:17:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1963:37:54"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1953:6:54"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint96",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1731:9:54",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1742:7:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1754:6:54",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1762:6:54",
                "type": ""
              }
            ],
            "src": "1687:319:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2112:227:54",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2158:16:54",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2167:1:54",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2170:1:54",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2160:6:54"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2160:12:54"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2160:12:54"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2133:7:54"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2142:9:54"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2129:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2129:23:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2154:2:54",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2125:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2125:32:54"
                  },
                  "nodeType": "YulIf",
                  "src": "2122:52:54"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2183:38:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2211:9:54"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_uint72",
                      "nodeType": "YulIdentifier",
                      "src": "2193:17:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2193:28:54"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2183:6:54"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2230:47:54",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2262:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2273:2:54",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2258:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2258:18:54"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_uint96",
                      "nodeType": "YulIdentifier",
                      "src": "2240:17:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2240:37:54"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2230:6:54"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2286:47:54",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2318:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2329:2:54",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2314:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2314:18:54"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_uint96",
                      "nodeType": "YulIdentifier",
                      "src": "2296:17:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2296:37:54"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "2286:6:54"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint72t_uint96t_uint96",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2062:9:54",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2073:7:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2085:6:54",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2093:6:54",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2101:6:54",
                "type": ""
              }
            ],
            "src": "2011:328:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2472:201:54",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2482:26:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2494:9:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2505:2:54",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2490:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2490:18:54"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2482:4:54"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2524:9:54"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2539:6:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2547:42:54",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2535:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2535:55:54"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2517:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2517:74:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2517:74:54"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2611:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2622:2:54",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2607:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2607:18:54"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "2631:6:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2639:26:54",
                            "type": "",
                            "value": "0xffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2627:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2627:39:54"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2600:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2600:67:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2600:67:54"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint96__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2433:9:54",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2444:6:54",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2452:6:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2463:4:54",
                "type": ""
              }
            ],
            "src": "2344:329:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2756:199:54",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2802:16:54",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2811:1:54",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2814:1:54",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2804:6:54"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2804:12:54"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2804:12:54"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2777:7:54"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2786:9:54"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2773:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2773:23:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2798:2:54",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2769:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2769:32:54"
                  },
                  "nodeType": "YulIf",
                  "src": "2766:52:54"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2827:29:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2846:9:54"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2840:5:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2840:16:54"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2831:5:54",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2909:16:54",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2918:1:54",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2921:1:54",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2911:6:54"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2911:12:54"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2911:12:54"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2878:5:54"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "2899:5:54"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "2892:6:54"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2892:13:54"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "2885:6:54"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2885:21:54"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2875:2:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2875:32:54"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2868:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2868:40:54"
                  },
                  "nodeType": "YulIf",
                  "src": "2865:60:54"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2934:15:54",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2944:5:54"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2934:6:54"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2722:9:54",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2733:7:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2745:6:54",
                "type": ""
              }
            ],
            "src": "2678:277:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3061:125:54",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3071:26:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3083:9:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3094:2:54",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3079:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3079:18:54"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3071:4:54"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3113:9:54"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3128:6:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3136:42:54",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3124:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3124:55:54"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3106:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3106:74:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3106:74:54"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3030:9:54",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3041:6:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3052:4:54",
                "type": ""
              }
            ],
            "src": "2960:226:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3365:182:54",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3382:9:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3393:2:54",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3375:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3375:21:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3375:21:54"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3416:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3427:2:54",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3412:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3412:18:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3432:2:54",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3405:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3405:30:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3405:30:54"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3455:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3466:2:54",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3451:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3451:18:54"
                      },
                      {
                        "hexValue": "466e2063616e206f6e6c792062652063616c6c65642062792074686520687562",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3471:34:54",
                        "type": "",
                        "value": "Fn can only be called by the hub"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3444:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3444:62:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3444:62:54"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3515:26:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3527:9:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3538:2:54",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3523:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3523:18:54"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3515:4:54"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_594f7f5fe86fab061b9e22bc77ca1b3025e507b69aaafbe7baccf4293ace5c45__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3342:9:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3356:4:54",
                "type": ""
              }
            ],
            "src": "3191:356:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3726:156:54",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3743:9:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3754:2:54",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3736:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3736:21:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3736:21:54"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3777:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3788:2:54",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3773:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3773:18:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3793:1:54",
                        "type": "",
                        "value": "7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3766:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3766:29:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3766:29:54"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3815:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3826:2:54",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3811:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3811:18:54"
                      },
                      {
                        "hexValue": "5374616b696e67",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3831:9:54",
                        "type": "",
                        "value": "Staking"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3804:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3804:37:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3804:37:54"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3850:26:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3862:9:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3873:2:54",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3858:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3858:18:54"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3850:4:54"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_1df41cd916959d1163dc8f0671a666ea8a3e434c13e40faef527133b5d167034__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3703:9:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3717:4:54",
                "type": ""
              }
            ],
            "src": "3552:330:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3968:170:54",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4014:16:54",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4023:1:54",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4026:1:54",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4016:6:54"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4016:12:54"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4016:12:54"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3989:7:54"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3998:9:54"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3985:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3985:23:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4010:2:54",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3981:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3981:32:54"
                  },
                  "nodeType": "YulIf",
                  "src": "3978:52:54"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4039:29:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4058:9:54"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4052:5:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4052:16:54"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "4043:5:54",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4102:5:54"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "4077:24:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4077:31:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4077:31:54"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4117:15:54",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "4127:5:54"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4117:6:54"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3934:9:54",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3945:7:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3957:6:54",
                "type": ""
              }
            ],
            "src": "3887:251:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4317:182:54",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4334:9:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4345:2:54",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4327:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4327:21:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4327:21:54"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4368:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4379:2:54",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4364:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4364:18:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4384:2:54",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4357:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4357:30:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4357:30:54"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4407:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4418:2:54",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4403:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4403:18:54"
                      },
                      {
                        "hexValue": "466e2063616e206f6e6c792062652063616c6c6564206279205374616b696e67",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4423:34:54",
                        "type": "",
                        "value": "Fn can only be called by Staking"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4396:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4396:62:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4396:62:54"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4467:26:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4479:9:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4490:2:54",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4475:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4475:18:54"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4467:4:54"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_d7e50b92ccdaf27f7d3cc3c68ec69c88112864a9267357cd08d7f1b3ae80bd47__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4294:9:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4308:4:54",
                "type": ""
              }
            ],
            "src": "4143:356:54"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_uint72(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint72(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_uint72(headStart)\n    }\n    function abi_encode_tuple_t_uint96__to_t_uint96__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_contract$_Hub_$6523__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$1169__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_uint96(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint72t_uint96(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_uint72(headStart)\n        value1 := abi_decode_uint96(add(headStart, 32))\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint96(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := abi_decode_uint96(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint72t_uint96t_uint96(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_uint72(headStart)\n        value1 := abi_decode_uint96(add(headStart, 32))\n        value2 := abi_decode_uint96(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_address_t_uint96__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_stringliteral_594f7f5fe86fab061b9e22bc77ca1b3025e507b69aaafbe7baccf4293ace5c45__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Fn can only be called by the hub\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1df41cd916959d1163dc8f0671a666ea8a3e434c13e40faef527133b5d167034__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 7)\n        mstore(add(headStart, 64), \"Staking\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_d7e50b92ccdaf27f7d3cc3c68ec69c88112864a9267357cd08d7f1b3ae80bd47__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Fn can only be called by Staking\")\n        tail := add(headStart, 96)\n    }\n}",
      "id": 54,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "166:1553:47:-:0;;;419:179;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;469:24:47;;461:33;;;;;;505:3;:21;;-1:-1:-1;;;;;;505:21:47;-1:-1:-1;;;;;505:21:47;;;;;;;;559:31;;-1:-1:-1;;;559:31:47;;511:2:54;559:31:47;;;493:21:54;550:1;530:18;;;523:29;-1:-1:-1;;;568:18:54;;;561:35;559:22:47;;613:18:54;;559:31:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;536:13;:55;;-1:-1:-1;;;;;;536:55:47;-1:-1:-1;;;;;536:55:47;;;;;;;;;;-1:-1:-1;166:1553:47;;14:290:54;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:54;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:54:o;309:328::-;166:1553:47;;;;;;",
  "deployedSourceMap": "166:1553:47:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;367:45;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;555:26:54;543:39;;;525:58;;513:2;498:18;367:45:47;;;;;;;;197:14;;;;;;;;;;;;782:42:54;770:55;;;752:74;;740:2;725:18;197:14:47;594:238:54;217:27:47;;;;;;;;;969:143;;;;;;:::i;:::-;;:::i;:::-;;283:44;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1118:141;;;;;;:::i;:::-;;:::i;1265:152::-;;;;;;:::i;:::-;;:::i;754:209::-;;;;;;:::i;:::-;;:::i;969:143::-;639:11;:9;:11::i;:::-;1066:23:::1;::::0;;;::::1;;::::0;;;:11:::1;:23;::::0;;;;:39;;;::::1;;::::0;;::::1;::::0;;;::::1;::::0;;969:143::o;1118:141::-;639:11;:9;:11::i;:::-;1214:24:::1;::::0;;;::::1;;::::0;;;:12:::1;:24;::::0;;;;:38;;;::::1;;::::0;;::::1;::::0;;;::::1;::::0;;1118:141::o;1265:152::-;715:15;:13;:15::i;:::-;1365:13:::1;::::0;:45:::1;::::0;;;;:13:::1;2535:55:54::0;;;1365:45:47::1;::::0;::::1;2517:74:54::0;2639:26;2627:39;;2607:18;;;2600:67;1365:13:47;;::::1;::::0;:22:::1;::::0;2490:18:54;;1365:45:47::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1265:152:::0;;:::o;754:209::-;639:11;:9;:11::i;:::-;872:23:::1;::::0;;;::::1;;::::0;;;:11:::1;:23;::::0;;;;;;;:36;;::::1;::::0;;::::1;::::0;;;::::1;;::::0;;;918:12:::1;:24:::0;;;;;;:38;;;;;::::1;::::0;::::1;;::::0;;754:209::o;1423:131::-;1484:3;;:26;;;;;1499:10;1484:26;;;752:74:54;1484:3:47;;;;;:14;;725:18:54;;1484:26:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1476:71;;;;;;;3393:2:54;1476:71:47;;;3375:21:54;;;3412:18;;;3405:30;3471:34;3451:18;;;3444:62;3523:18;;1476:71:47;;;;;;;;;1423:131::o;1560:156::-;1639:3;;:33;;;;;3754:2:54;1639:33:47;;;3736:21:54;3793:1;3773:18;;;3766:29;3831:9;3811:18;;;3804:37;1639:3:47;;;;;:22;;3858:18:54;;1639:33:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1625:47;;:10;:47;;;1617:92;;;;;;;4345:2:54;1617:92:47;;;4327:21:54;;;4364:18;;;4357:30;4423:34;4403:18;;;4396:62;4475:18;;1617:92:47;4143:356:54;14:173;81:20;;141;130:32;;120:43;;110:71;;177:1;174;167:12;110:71;14:173;;;:::o;192:184::-;250:6;303:2;291:9;282:7;278:23;274:32;271:52;;;319:1;316;309:12;271:52;342:28;360:9;342:28;:::i;:::-;332:38;192:184;-1:-1:-1;;;192:184:54:o;1083:179::-;1150:20;;1210:26;1199:38;;1189:49;;1179:77;;1252:1;1249;1242:12;1267:256;1333:6;1341;1394:2;1382:9;1373:7;1369:23;1365:32;1362:52;;;1410:1;1407;1400:12;1362:52;1433:28;1451:9;1433:28;:::i;:::-;1423:38;;1480:37;1513:2;1502:9;1498:18;1480:37;:::i;:::-;1470:47;;1267:256;;;;;:::o;1528:154::-;1614:42;1607:5;1603:54;1596:5;1593:65;1583:93;;1672:1;1669;1662:12;1583:93;1528:154;:::o;1687:319::-;1754:6;1762;1815:2;1803:9;1794:7;1790:23;1786:32;1783:52;;;1831:1;1828;1821:12;1783:52;1870:9;1857:23;1889:31;1914:5;1889:31;:::i;2011:328::-;2085:6;2093;2101;2154:2;2142:9;2133:7;2129:23;2125:32;2122:52;;;2170:1;2167;2160:12;2122:52;2193:28;2211:9;2193:28;:::i;:::-;2183:38;;2240:37;2273:2;2262:9;2258:18;2240:37;:::i;:::-;2230:47;;2296:37;2329:2;2318:9;2314:18;2296:37;:::i;:::-;2286:47;;2011:328;;;;;:::o;2678:277::-;2745:6;2798:2;2786:9;2777:7;2773:23;2769:32;2766:52;;;2814:1;2811;2804:12;2766:52;2846:9;2840:16;2899:5;2892:13;2885:21;2878:5;2875:32;2865:60;;2921:1;2918;2911:12;3887:251;3957:6;4010:2;3998:9;3989:7;3985:23;3981:32;3978:52;;;4026:1;4023;4016:12;3978:52;4058:9;4052:16;4077:31;4102:5;4077:31;:::i",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport { Hub } from \"../Hub.sol\";\nimport { IERC20 } from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\ncontract StakingStorage {\n\n    Hub public hub;\n    IERC20 public tokenContract;\n\n    // identityId => totalStake\n    mapping(uint72 => uint96) public totalStakes;\n\n    // identityId => operatorFee\n    mapping(uint72 => uint96) public operatorFees;\n\n    constructor(address hubAddress) {\n        require(hubAddress != address(0));\n\n        hub = Hub(hubAddress);\n        tokenContract = IERC20(hub.getContractAddress(\"Token\"));\n    }\n\n    modifier onlyContracts() {\n        _checkHub();\n        _;\n    }\n\n    modifier onlyStakingContract() {\n        _checkStaking();\n        _;\n    }\n\n    function initializeStaking(uint72 identityId, uint96 totalStake, uint96 operatorFee) external onlyContracts {\n        totalStakes[identityId] = totalStake;\n        operatorFees[identityId] = operatorFee;\n    }\n\n    function setTotalStake(uint72 identityId, uint96 newTotalStake) external onlyContracts {\n        totalStakes[identityId] = newTotalStake;\n    }\n\n    function setOperatorFee(uint72 identityId, uint96 operatorFee) external onlyContracts {\n        operatorFees[identityId] = operatorFee;\n    }\n\n    function transferStake(address receiver, uint96 stakeAmount) external onlyStakingContract {\n        tokenContract.transfer(receiver, stakeAmount);\n    }\n\n    function _checkHub() internal view virtual {\n        require(hub.isContract(msg.sender), \"Fn can only be called by the hub\");\n    }\n\n    function _checkStaking() internal view virtual {\n        require(msg.sender == hub.getContractAddress(\"Staking\"), \"Fn can only be called by Staking\");\n    }\n\n}\n",
  "sourcePath": "/Users/waving/Desktop/OriginTrail/dkg-evm-module/contracts/storage/StakingStorage.sol",
  "ast": {
    "absolutePath": "project:/contracts/storage/StakingStorage.sol",
    "exportedSymbols": {
      "Hub": [
        6523
      ],
      "IERC20": [
        1169
      ],
      "StakingStorage": [
        14048
      ]
    },
    "id": 14049,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 13884,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:47"
      },
      {
        "absolutePath": "project:/contracts/Hub.sol",
        "file": "../Hub.sol",
        "id": 13886,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 14049,
        "sourceUnit": 6524,
        "src": "58:33:47",
        "symbolAliases": [
          {
            "foreign": {
              "id": 13885,
              "name": "Hub",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 6523,
              "src": "67:3:47",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 13888,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 14049,
        "sourceUnit": 1170,
        "src": "92:72:47",
        "symbolAliases": [
          {
            "foreign": {
              "id": 13887,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1169,
              "src": "101:6:47",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "StakingStorage",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 14048,
        "linearizedBaseContracts": [
          14048
        ],
        "name": "StakingStorage",
        "nameLocation": "175:14:47",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "365a86fc",
            "id": 13891,
            "mutability": "mutable",
            "name": "hub",
            "nameLocation": "208:3:47",
            "nodeType": "VariableDeclaration",
            "scope": 14048,
            "src": "197:14:47",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Hub_$6523",
              "typeString": "contract Hub"
            },
            "typeName": {
              "id": 13890,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 13889,
                "name": "Hub",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 6523,
                "src": "197:3:47"
              },
              "referencedDeclaration": 6523,
              "src": "197:3:47",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Hub_$6523",
                "typeString": "contract Hub"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "55a373d6",
            "id": 13894,
            "mutability": "mutable",
            "name": "tokenContract",
            "nameLocation": "231:13:47",
            "nodeType": "VariableDeclaration",
            "scope": 14048,
            "src": "217:27:47",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$1169",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 13893,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 13892,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1169,
                "src": "217:6:47"
              },
              "referencedDeclaration": 1169,
              "src": "217:6:47",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$1169",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "9d2b48ad",
            "id": 13898,
            "mutability": "mutable",
            "name": "totalStakes",
            "nameLocation": "316:11:47",
            "nodeType": "VariableDeclaration",
            "scope": 14048,
            "src": "283:44:47",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint72_$_t_uint96_$",
              "typeString": "mapping(uint72 => uint96)"
            },
            "typeName": {
              "id": 13897,
              "keyType": {
                "id": 13895,
                "name": "uint72",
                "nodeType": "ElementaryTypeName",
                "src": "291:6:47",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint72",
                  "typeString": "uint72"
                }
              },
              "nodeType": "Mapping",
              "src": "283:25:47",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint72_$_t_uint96_$",
                "typeString": "mapping(uint72 => uint96)"
              },
              "valueType": {
                "id": 13896,
                "name": "uint96",
                "nodeType": "ElementaryTypeName",
                "src": "301:6:47",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint96",
                  "typeString": "uint96"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "330eece2",
            "id": 13902,
            "mutability": "mutable",
            "name": "operatorFees",
            "nameLocation": "400:12:47",
            "nodeType": "VariableDeclaration",
            "scope": 14048,
            "src": "367:45:47",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint72_$_t_uint96_$",
              "typeString": "mapping(uint72 => uint96)"
            },
            "typeName": {
              "id": 13901,
              "keyType": {
                "id": 13899,
                "name": "uint72",
                "nodeType": "ElementaryTypeName",
                "src": "375:6:47",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint72",
                  "typeString": "uint72"
                }
              },
              "nodeType": "Mapping",
              "src": "367:25:47",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint72_$_t_uint96_$",
                "typeString": "mapping(uint72 => uint96)"
              },
              "valueType": {
                "id": 13900,
                "name": "uint96",
                "nodeType": "ElementaryTypeName",
                "src": "385:6:47",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint96",
                  "typeString": "uint96"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 13931,
              "nodeType": "Block",
              "src": "451:147:47",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 13913,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 13908,
                          "name": "hubAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13904,
                          "src": "469:10:47",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 13911,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "491:1:47",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 13910,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "483:7:47",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 13909,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "483:7:47",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 13912,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "483:10:47",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "469:24:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 13907,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "461:7:47",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 13914,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "461:33:47",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13915,
                  "nodeType": "ExpressionStatement",
                  "src": "461:33:47"
                },
                {
                  "expression": {
                    "id": 13920,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 13916,
                      "name": "hub",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13891,
                      "src": "505:3:47",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Hub_$6523",
                        "typeString": "contract Hub"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 13918,
                          "name": "hubAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13904,
                          "src": "515:10:47",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 13917,
                        "name": "Hub",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6523,
                        "src": "511:3:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Hub_$6523_$",
                          "typeString": "type(contract Hub)"
                        }
                      },
                      "id": 13919,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "511:15:47",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Hub_$6523",
                        "typeString": "contract Hub"
                      }
                    },
                    "src": "505:21:47",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Hub_$6523",
                      "typeString": "contract Hub"
                    }
                  },
                  "id": 13921,
                  "nodeType": "ExpressionStatement",
                  "src": "505:21:47"
                },
                {
                  "expression": {
                    "id": 13929,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 13922,
                      "name": "tokenContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13894,
                      "src": "536:13:47",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1169",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "546f6b656e",
                              "id": 13926,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "582:7:47",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_1317f51c845ce3bfb7c268e5337a825f12f3d0af9584c2bbfbf4e64e314eaf73",
                                "typeString": "literal_string \"Token\""
                              },
                              "value": "Token"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_1317f51c845ce3bfb7c268e5337a825f12f3d0af9584c2bbfbf4e64e314eaf73",
                                "typeString": "literal_string \"Token\""
                              }
                            ],
                            "expression": {
                              "id": 13924,
                              "name": "hub",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13891,
                              "src": "559:3:47",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Hub_$6523",
                                "typeString": "contract Hub"
                              }
                            },
                            "id": 13925,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getContractAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6458,
                            "src": "559:22:47",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_address_$",
                              "typeString": "function (string memory) view external returns (address)"
                            }
                          },
                          "id": 13927,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "559:31:47",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 13923,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1169,
                        "src": "552:6:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$1169_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 13928,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "552:39:47",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$1169",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "536:55:47",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1169",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 13930,
                  "nodeType": "ExpressionStatement",
                  "src": "536:55:47"
                }
              ]
            },
            "id": 13932,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13905,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13904,
                  "mutability": "mutable",
                  "name": "hubAddress",
                  "nameLocation": "439:10:47",
                  "nodeType": "VariableDeclaration",
                  "scope": 13932,
                  "src": "431:18:47",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13903,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "431:7:47",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "430:20:47"
            },
            "returnParameters": {
              "id": 13906,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "451:0:47"
            },
            "scope": 14048,
            "src": "419:179:47",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13938,
              "nodeType": "Block",
              "src": "629:39:47",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 13934,
                      "name": "_checkHub",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14032,
                      "src": "639:9:47",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$__$",
                        "typeString": "function () view"
                      }
                    },
                    "id": 13935,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "639:11:47",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13936,
                  "nodeType": "ExpressionStatement",
                  "src": "639:11:47"
                },
                {
                  "id": 13937,
                  "nodeType": "PlaceholderStatement",
                  "src": "660:1:47"
                }
              ]
            },
            "id": 13939,
            "name": "onlyContracts",
            "nameLocation": "613:13:47",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 13933,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "626:2:47"
            },
            "src": "604:64:47",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 13945,
              "nodeType": "Block",
              "src": "705:43:47",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 13941,
                      "name": "_checkStaking",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14047,
                      "src": "715:13:47",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$__$",
                        "typeString": "function () view"
                      }
                    },
                    "id": 13942,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "715:15:47",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13943,
                  "nodeType": "ExpressionStatement",
                  "src": "715:15:47"
                },
                {
                  "id": 13944,
                  "nodeType": "PlaceholderStatement",
                  "src": "740:1:47"
                }
              ]
            },
            "id": 13946,
            "name": "onlyStakingContract",
            "nameLocation": "683:19:47",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 13940,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "702:2:47"
            },
            "src": "674:74:47",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 13969,
              "nodeType": "Block",
              "src": "862:101:47",
              "statements": [
                {
                  "expression": {
                    "id": 13961,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 13957,
                        "name": "totalStakes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13898,
                        "src": "872:11:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint72_$_t_uint96_$",
                          "typeString": "mapping(uint72 => uint96)"
                        }
                      },
                      "id": 13959,
                      "indexExpression": {
                        "id": 13958,
                        "name": "identityId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13948,
                        "src": "884:10:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint72",
                          "typeString": "uint72"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "872:23:47",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 13960,
                      "name": "totalStake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13950,
                      "src": "898:10:47",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "src": "872:36:47",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "id": 13962,
                  "nodeType": "ExpressionStatement",
                  "src": "872:36:47"
                },
                {
                  "expression": {
                    "id": 13967,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 13963,
                        "name": "operatorFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13902,
                        "src": "918:12:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint72_$_t_uint96_$",
                          "typeString": "mapping(uint72 => uint96)"
                        }
                      },
                      "id": 13965,
                      "indexExpression": {
                        "id": 13964,
                        "name": "identityId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13948,
                        "src": "931:10:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint72",
                          "typeString": "uint72"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "918:24:47",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 13966,
                      "name": "operatorFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13952,
                      "src": "945:11:47",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "src": "918:38:47",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "id": 13968,
                  "nodeType": "ExpressionStatement",
                  "src": "918:38:47"
                }
              ]
            },
            "functionSelector": "e7f3263a",
            "id": 13970,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 13955,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 13954,
                  "name": "onlyContracts",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 13939,
                  "src": "848:13:47"
                },
                "nodeType": "ModifierInvocation",
                "src": "848:13:47"
              }
            ],
            "name": "initializeStaking",
            "nameLocation": "763:17:47",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13953,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13948,
                  "mutability": "mutable",
                  "name": "identityId",
                  "nameLocation": "788:10:47",
                  "nodeType": "VariableDeclaration",
                  "scope": 13970,
                  "src": "781:17:47",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint72",
                    "typeString": "uint72"
                  },
                  "typeName": {
                    "id": 13947,
                    "name": "uint72",
                    "nodeType": "ElementaryTypeName",
                    "src": "781:6:47",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint72",
                      "typeString": "uint72"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13950,
                  "mutability": "mutable",
                  "name": "totalStake",
                  "nameLocation": "807:10:47",
                  "nodeType": "VariableDeclaration",
                  "scope": 13970,
                  "src": "800:17:47",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 13949,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "800:6:47",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13952,
                  "mutability": "mutable",
                  "name": "operatorFee",
                  "nameLocation": "826:11:47",
                  "nodeType": "VariableDeclaration",
                  "scope": 13970,
                  "src": "819:18:47",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 13951,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "819:6:47",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "780:58:47"
            },
            "returnParameters": {
              "id": 13956,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "862:0:47"
            },
            "scope": 14048,
            "src": "754:209:47",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 13985,
              "nodeType": "Block",
              "src": "1056:56:47",
              "statements": [
                {
                  "expression": {
                    "id": 13983,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 13979,
                        "name": "totalStakes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13898,
                        "src": "1066:11:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint72_$_t_uint96_$",
                          "typeString": "mapping(uint72 => uint96)"
                        }
                      },
                      "id": 13981,
                      "indexExpression": {
                        "id": 13980,
                        "name": "identityId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13972,
                        "src": "1078:10:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint72",
                          "typeString": "uint72"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1066:23:47",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 13982,
                      "name": "newTotalStake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13974,
                      "src": "1092:13:47",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "src": "1066:39:47",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "id": 13984,
                  "nodeType": "ExpressionStatement",
                  "src": "1066:39:47"
                }
              ]
            },
            "functionSelector": "5611f9a3",
            "id": 13986,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 13977,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 13976,
                  "name": "onlyContracts",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 13939,
                  "src": "1042:13:47"
                },
                "nodeType": "ModifierInvocation",
                "src": "1042:13:47"
              }
            ],
            "name": "setTotalStake",
            "nameLocation": "978:13:47",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13975,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13972,
                  "mutability": "mutable",
                  "name": "identityId",
                  "nameLocation": "999:10:47",
                  "nodeType": "VariableDeclaration",
                  "scope": 13986,
                  "src": "992:17:47",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint72",
                    "typeString": "uint72"
                  },
                  "typeName": {
                    "id": 13971,
                    "name": "uint72",
                    "nodeType": "ElementaryTypeName",
                    "src": "992:6:47",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint72",
                      "typeString": "uint72"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13974,
                  "mutability": "mutable",
                  "name": "newTotalStake",
                  "nameLocation": "1018:13:47",
                  "nodeType": "VariableDeclaration",
                  "scope": 13986,
                  "src": "1011:20:47",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 13973,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "1011:6:47",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "991:41:47"
            },
            "returnParameters": {
              "id": 13978,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1056:0:47"
            },
            "scope": 14048,
            "src": "969:143:47",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 14001,
              "nodeType": "Block",
              "src": "1204:55:47",
              "statements": [
                {
                  "expression": {
                    "id": 13999,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 13995,
                        "name": "operatorFees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13902,
                        "src": "1214:12:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint72_$_t_uint96_$",
                          "typeString": "mapping(uint72 => uint96)"
                        }
                      },
                      "id": 13997,
                      "indexExpression": {
                        "id": 13996,
                        "name": "identityId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13988,
                        "src": "1227:10:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint72",
                          "typeString": "uint72"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1214:24:47",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 13998,
                      "name": "operatorFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13990,
                      "src": "1241:11:47",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "src": "1214:38:47",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "id": 14000,
                  "nodeType": "ExpressionStatement",
                  "src": "1214:38:47"
                }
              ]
            },
            "functionSelector": "b63365ca",
            "id": 14002,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 13993,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 13992,
                  "name": "onlyContracts",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 13939,
                  "src": "1190:13:47"
                },
                "nodeType": "ModifierInvocation",
                "src": "1190:13:47"
              }
            ],
            "name": "setOperatorFee",
            "nameLocation": "1127:14:47",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13991,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13988,
                  "mutability": "mutable",
                  "name": "identityId",
                  "nameLocation": "1149:10:47",
                  "nodeType": "VariableDeclaration",
                  "scope": 14002,
                  "src": "1142:17:47",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint72",
                    "typeString": "uint72"
                  },
                  "typeName": {
                    "id": 13987,
                    "name": "uint72",
                    "nodeType": "ElementaryTypeName",
                    "src": "1142:6:47",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint72",
                      "typeString": "uint72"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13990,
                  "mutability": "mutable",
                  "name": "operatorFee",
                  "nameLocation": "1168:11:47",
                  "nodeType": "VariableDeclaration",
                  "scope": 14002,
                  "src": "1161:18:47",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 13989,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "1161:6:47",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1141:39:47"
            },
            "returnParameters": {
              "id": 13994,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1204:0:47"
            },
            "scope": 14048,
            "src": "1118:141:47",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 14018,
              "nodeType": "Block",
              "src": "1355:62:47",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14014,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14004,
                        "src": "1388:8:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 14015,
                        "name": "stakeAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14006,
                        "src": "1398:11:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      ],
                      "expression": {
                        "id": 14011,
                        "name": "tokenContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13894,
                        "src": "1365:13:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1169",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 14013,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1136,
                      "src": "1365:22:47",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 14016,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1365:45:47",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 14017,
                  "nodeType": "ExpressionStatement",
                  "src": "1365:45:47"
                }
              ]
            },
            "functionSelector": "dedac1ae",
            "id": 14019,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 14009,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 14008,
                  "name": "onlyStakingContract",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 13946,
                  "src": "1335:19:47"
                },
                "nodeType": "ModifierInvocation",
                "src": "1335:19:47"
              }
            ],
            "name": "transferStake",
            "nameLocation": "1274:13:47",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14007,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14004,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "1296:8:47",
                  "nodeType": "VariableDeclaration",
                  "scope": 14019,
                  "src": "1288:16:47",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14003,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1288:7:47",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14006,
                  "mutability": "mutable",
                  "name": "stakeAmount",
                  "nameLocation": "1313:11:47",
                  "nodeType": "VariableDeclaration",
                  "scope": 14019,
                  "src": "1306:18:47",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 14005,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "1306:6:47",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1287:38:47"
            },
            "returnParameters": {
              "id": 14010,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1355:0:47"
            },
            "scope": 14048,
            "src": "1265:152:47",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 14031,
              "nodeType": "Block",
              "src": "1466:88:47",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 14025,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1499:3:47",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 14026,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1499:10:47",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 14023,
                            "name": "hub",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13891,
                            "src": "1484:3:47",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Hub_$6523",
                              "typeString": "contract Hub"
                            }
                          },
                          "id": 14024,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isContract",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6496,
                          "src": "1484:14:47",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 14027,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1484:26:47",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "466e2063616e206f6e6c792062652063616c6c65642062792074686520687562",
                        "id": 14028,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1512:34:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_594f7f5fe86fab061b9e22bc77ca1b3025e507b69aaafbe7baccf4293ace5c45",
                          "typeString": "literal_string \"Fn can only be called by the hub\""
                        },
                        "value": "Fn can only be called by the hub"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_594f7f5fe86fab061b9e22bc77ca1b3025e507b69aaafbe7baccf4293ace5c45",
                          "typeString": "literal_string \"Fn can only be called by the hub\""
                        }
                      ],
                      "id": 14022,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1476:7:47",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14029,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1476:71:47",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14030,
                  "nodeType": "ExpressionStatement",
                  "src": "1476:71:47"
                }
              ]
            },
            "id": 14032,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_checkHub",
            "nameLocation": "1432:9:47",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14020,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1441:2:47"
            },
            "returnParameters": {
              "id": 14021,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1466:0:47"
            },
            "scope": 14048,
            "src": "1423:131:47",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 14046,
              "nodeType": "Block",
              "src": "1607:109:47",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 14042,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 14036,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1625:3:47",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 14037,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1625:10:47",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "5374616b696e67",
                              "id": 14040,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1662:9:47",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_1df41cd916959d1163dc8f0671a666ea8a3e434c13e40faef527133b5d167034",
                                "typeString": "literal_string \"Staking\""
                              },
                              "value": "Staking"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_1df41cd916959d1163dc8f0671a666ea8a3e434c13e40faef527133b5d167034",
                                "typeString": "literal_string \"Staking\""
                              }
                            ],
                            "expression": {
                              "id": 14038,
                              "name": "hub",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13891,
                              "src": "1639:3:47",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Hub_$6523",
                                "typeString": "contract Hub"
                              }
                            },
                            "id": 14039,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getContractAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6458,
                            "src": "1639:22:47",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_address_$",
                              "typeString": "function (string memory) view external returns (address)"
                            }
                          },
                          "id": 14041,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1639:33:47",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1625:47:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "466e2063616e206f6e6c792062652063616c6c6564206279205374616b696e67",
                        "id": 14043,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1674:34:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d7e50b92ccdaf27f7d3cc3c68ec69c88112864a9267357cd08d7f1b3ae80bd47",
                          "typeString": "literal_string \"Fn can only be called by Staking\""
                        },
                        "value": "Fn can only be called by Staking"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d7e50b92ccdaf27f7d3cc3c68ec69c88112864a9267357cd08d7f1b3ae80bd47",
                          "typeString": "literal_string \"Fn can only be called by Staking\""
                        }
                      ],
                      "id": 14035,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1617:7:47",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14044,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1617:92:47",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14045,
                  "nodeType": "ExpressionStatement",
                  "src": "1617:92:47"
                }
              ]
            },
            "id": 14047,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_checkStaking",
            "nameLocation": "1569:13:47",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14033,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1582:2:47"
            },
            "returnParameters": {
              "id": 14034,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1607:0:47"
            },
            "scope": 14048,
            "src": "1560:156:47",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 14049,
        "src": "166:1553:47",
        "usedErrors": []
      }
    ],
    "src": "33:1687:47"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.14+commit.80d49f37.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.10",
  "updatedAt": "2022-12-02T16:52:10.473Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}