{
  "contractName": "AssertionStorage",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "hubAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "hub",
      "outputs": [
        {
          "internalType": "contract Hub",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "assertionId",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "issuer",
          "type": "address"
        },
        {
          "internalType": "uint128",
          "name": "size",
          "type": "uint128"
        },
        {
          "internalType": "uint32",
          "name": "triplesNumber",
          "type": "uint32"
        },
        {
          "internalType": "uint96",
          "name": "chunksNumber",
          "type": "uint96"
        }
      ],
      "name": "createAssertion",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "assertionId",
          "type": "bytes32"
        }
      ],
      "name": "getAssertion",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "issuer",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "size",
              "type": "uint128"
            },
            {
              "internalType": "uint32",
              "name": "triplesNumber",
              "type": "uint32"
            },
            {
              "internalType": "uint96",
              "name": "chunksNumber",
              "type": "uint96"
            }
          ],
          "internalType": "struct AssertionStructs.Assertion",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "assertionId",
          "type": "bytes32"
        }
      ],
      "name": "getAssertionTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "assertionId",
          "type": "bytes32"
        }
      ],
      "name": "getAssertionIssuer",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "assertionId",
          "type": "bytes32"
        }
      ],
      "name": "getAssertionSize",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "assertionId",
          "type": "bytes32"
        }
      ],
      "name": "getAssertionTriplesNumber",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "assertionId",
          "type": "bytes32"
        }
      ],
      "name": "getAssertionChunksNumber",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "",
          "type": "uint96"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "assertionId",
          "type": "bytes32"
        }
      ],
      "name": "assertionExists",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"hubAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"}],\"name\":\"assertionExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"size\",\"type\":\"uint128\"},{\"internalType\":\"uint32\",\"name\":\"triplesNumber\",\"type\":\"uint32\"},{\"internalType\":\"uint96\",\"name\":\"chunksNumber\",\"type\":\"uint96\"}],\"name\":\"createAssertion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"}],\"name\":\"getAssertion\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"size\",\"type\":\"uint128\"},{\"internalType\":\"uint32\",\"name\":\"triplesNumber\",\"type\":\"uint32\"},{\"internalType\":\"uint96\",\"name\":\"chunksNumber\",\"type\":\"uint96\"}],\"internalType\":\"struct AssertionStructs.Assertion\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"}],\"name\":\"getAssertionChunksNumber\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"}],\"name\":\"getAssertionIssuer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"}],\"name\":\"getAssertionSize\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"}],\"name\":\"getAssertionTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"assertionId\",\"type\":\"bytes32\"}],\"name\":\"getAssertionTriplesNumber\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hub\",\"outputs\":[{\"internalType\":\"contract Hub\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/storage/AssertionStorage.sol\":\"AssertionStorage\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"project:/contracts/Hub.sol\":{\"keccak256\":\"0xddb2970d30f056a92c01944e8c984831361045bbecdd1b94f44cb879dc4489cb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://16b477801bf41bd7704c8b8064e04093ed9e6b61fcc2c080fc98da9fbab87448\",\"dweb:/ipfs/QmcvCeup6gKkxBR3QZ6X38dH4PjD1dixPa4tP7b9pue1xw\"]},\"project:/contracts/interface/Named.sol\":{\"keccak256\":\"0x1338740a42a69ca4e56153a749f20484f57331901b43a73473902fb45ffe52e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d37d0799ac66711f8bf3bbb897d43cfccb3439eff396f92b40cebe8398d128c\",\"dweb:/ipfs/QmY4NpnYC7dtjs2c1VMcCmuqRMsF3a8TrxLc3R4ZsxhKCM\"]},\"project:/contracts/storage/AssertionStorage.sol\":{\"keccak256\":\"0x96eba7327f0581a635029b4ca5eba79ec443674c4c37490ba1b0137fa9fff7c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a4e18c9cece06ee2f624e98039164d99f49919e46af22fd25cceb38e01f9f0b2\",\"dweb:/ipfs/QmSy7JR3uoXQ3zxv9SmKgXrbsQBthGoMthDZBzMSoQ5AR4\"]},\"project:/contracts/structs/AssertionStructs.sol\":{\"keccak256\":\"0xcb73887fd8b066be999060829b81cc8abe2dc50d7d286d527a96018b8f942d40\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20b04df5925b8f0ccfdf5db7075ec2ac6f7ecfa5017cb4337441a3d170688798\",\"dweb:/ipfs/QmUfcAvWvA66K6dZ6AQAcPPi7bWoP5mjkVGZ3VLJwKeNUB\"]},\"project:/contracts/utils/UnorderedNamedContractDynamicSet.sol\":{\"keccak256\":\"0x60044fabbf9ef8210f7798053565a8a6ec721cd7801a04d6da9740c4c107c297\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b78441b81c9d2461a130a5880e8a41432b815aea49d465e0c8dde45725e24b8\",\"dweb:/ipfs/QmXXMJGdgsrZvGRgx7VUX39KPHuKuAViuVtnGEp6qZaWXF\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516107ed3803806107ed83398101604081905261002f91610067565b6001600160a01b03811661004257600080fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055610097565b60006020828403121561007957600080fd5b81516001600160a01b038116811461009057600080fd5b9392505050565b610747806100a66000396000f3fe608060405234801561001057600080fd5b50600436106100a35760003560e01c8063448338bd11610076578063883028841161005b578063883028841461022b5780639f9c2c531461038e578063af17a875146103e457600080fd5b8063448338bd146101e45780635a4038f5146101f957600080fd5b80630828e9f3146100a8578063211107091461010c578063365a86fc146101725780634303b3da14610192575b600080fd5b6100e26100b636600461061f565b6000908152600160208190526040909120015473ffffffffffffffffffffffffffffffffffffffff1690565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b61015561011a36600461061f565b6000908152600160205260409020600201547401000000000000000000000000000000000000000090046bffffffffffffffffffffffff1690565b6040516bffffffffffffffffffffffff9091168152602001610103565b6000546100e29073ffffffffffffffffffffffffffffffffffffffff1681565b6101cf6101a036600461061f565b600090815260016020526040902060020154700100000000000000000000000000000000900463ffffffff1690565b60405163ffffffff9091168152602001610103565b6101f76101f2366004610638565b610412565b005b61021b61020736600461061f565b600090815260016020526040902054151590565b6040519015158152602001610103565b61031061023936600461061f565b6040805160a08101825260008082526020820181905291810182905260608101829052608081019190915250600090815260016020818152604092839020835160a081018552815481529281015473ffffffffffffffffffffffffffffffffffffffff1691830191909152600201546fffffffffffffffffffffffffffffffff811692820192909252700100000000000000000000000000000000820463ffffffff166060820152740100000000000000000000000000000000000000009091046bffffffffffffffffffffffff16608082015290565b6040516101039190600060a0820190508251825273ffffffffffffffffffffffffffffffffffffffff60208401511660208301526fffffffffffffffffffffffffffffffff604084015116604083015263ffffffff60608401511660608301526bffffffffffffffffffffffff608084015116608083015292915050565b6103c361039c36600461061f565b6000908152600160205260409020600201546fffffffffffffffffffffffffffffffff1690565b6040516fffffffffffffffffffffffffffffffff9091168152602001610103565b6104046103f236600461061f565b60009081526001602052604090205490565b604051908152602001610103565b61041a610521565b6040805160a08101825242815273ffffffffffffffffffffffffffffffffffffffff95861660208083019182526fffffffffffffffffffffffffffffffff96871683850190815263ffffffff968716606085019081526bffffffffffffffffffffffff9687166080860190815260009b8c5260019384905295909a2093518455915190830180549189167fffffffffffffffffffffffff0000000000000000000000000000000000000000928316179055905160029092018054985193519094167401000000000000000000000000000000000000000002929094167001000000000000000000000000000000000296909316929093169190911793909317909116179055565b6000546040517f1627905500000000000000000000000000000000000000000000000000000000815233600482015273ffffffffffffffffffffffffffffffffffffffff90911690631627905590602401602060405180830381865afa15801561058f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105b391906106e8565b61061d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f466e2063616e206f6e6c792062652063616c6c65642062792074686520687562604482015260640160405180910390fd5b565b60006020828403121561063157600080fd5b5035919050565b600080600080600060a0868803121561065057600080fd5b85359450602086013573ffffffffffffffffffffffffffffffffffffffff8116811461067b57600080fd5b935060408601356fffffffffffffffffffffffffffffffff811681146106a057600080fd5b9250606086013563ffffffff811681146106b957600080fd5b915060808601356bffffffffffffffffffffffff811681146106da57600080fd5b809150509295509295909350565b6000602082840312156106fa57600080fd5b8151801515811461070a57600080fd5b939250505056fea2646970667358221220249bb042ab1e4e7733f5c30721d29da4c2c4aef7862f1da3f444171737a08c9f64736f6c634300080e0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100a35760003560e01c8063448338bd11610076578063883028841161005b578063883028841461022b5780639f9c2c531461038e578063af17a875146103e457600080fd5b8063448338bd146101e45780635a4038f5146101f957600080fd5b80630828e9f3146100a8578063211107091461010c578063365a86fc146101725780634303b3da14610192575b600080fd5b6100e26100b636600461061f565b6000908152600160208190526040909120015473ffffffffffffffffffffffffffffffffffffffff1690565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b61015561011a36600461061f565b6000908152600160205260409020600201547401000000000000000000000000000000000000000090046bffffffffffffffffffffffff1690565b6040516bffffffffffffffffffffffff9091168152602001610103565b6000546100e29073ffffffffffffffffffffffffffffffffffffffff1681565b6101cf6101a036600461061f565b600090815260016020526040902060020154700100000000000000000000000000000000900463ffffffff1690565b60405163ffffffff9091168152602001610103565b6101f76101f2366004610638565b610412565b005b61021b61020736600461061f565b600090815260016020526040902054151590565b6040519015158152602001610103565b61031061023936600461061f565b6040805160a08101825260008082526020820181905291810182905260608101829052608081019190915250600090815260016020818152604092839020835160a081018552815481529281015473ffffffffffffffffffffffffffffffffffffffff1691830191909152600201546fffffffffffffffffffffffffffffffff811692820192909252700100000000000000000000000000000000820463ffffffff166060820152740100000000000000000000000000000000000000009091046bffffffffffffffffffffffff16608082015290565b6040516101039190600060a0820190508251825273ffffffffffffffffffffffffffffffffffffffff60208401511660208301526fffffffffffffffffffffffffffffffff604084015116604083015263ffffffff60608401511660608301526bffffffffffffffffffffffff608084015116608083015292915050565b6103c361039c36600461061f565b6000908152600160205260409020600201546fffffffffffffffffffffffffffffffff1690565b6040516fffffffffffffffffffffffffffffffff9091168152602001610103565b6104046103f236600461061f565b60009081526001602052604090205490565b604051908152602001610103565b61041a610521565b6040805160a08101825242815273ffffffffffffffffffffffffffffffffffffffff95861660208083019182526fffffffffffffffffffffffffffffffff96871683850190815263ffffffff968716606085019081526bffffffffffffffffffffffff9687166080860190815260009b8c5260019384905295909a2093518455915190830180549189167fffffffffffffffffffffffff0000000000000000000000000000000000000000928316179055905160029092018054985193519094167401000000000000000000000000000000000000000002929094167001000000000000000000000000000000000296909316929093169190911793909317909116179055565b6000546040517f1627905500000000000000000000000000000000000000000000000000000000815233600482015273ffffffffffffffffffffffffffffffffffffffff90911690631627905590602401602060405180830381865afa15801561058f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105b391906106e8565b61061d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f466e2063616e206f6e6c792062652063616c6c65642062792074686520687562604482015260640160405180910390fd5b565b60006020828403121561063157600080fd5b5035919050565b600080600080600060a0868803121561065057600080fd5b85359450602086013573ffffffffffffffffffffffffffffffffffffffff8116811461067b57600080fd5b935060408601356fffffffffffffffffffffffffffffffff811681146106a057600080fd5b9250606086013563ffffffff811681146106b957600080fd5b915060808601356bffffffffffffffffffffffff811681146106da57600080fd5b809150509295509295909350565b6000602082840312156106fa57600080fd5b8151801515811461070a57600080fd5b939250505056fea2646970667358221220249bb042ab1e4e7733f5c30721d29da4c2c4aef7862f1da3f444171737a08c9f64736f6c634300080e0033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:306:50",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:50",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "95:209:50",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "141:16:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "150:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "153:1:50",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "143:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "143:12:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "143:12:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "116:7:50"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "125:9:50"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "112:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "112:23:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "137:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "108:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "108:32:50"
                  },
                  "nodeType": "YulIf",
                  "src": "105:52:50"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "166:29:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "185:9:50"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "179:5:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "179:16:50"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "170:5:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "258:16:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "267:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "270:1:50",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "260:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "260:12:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "260:12:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "217:5:50"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "228:5:50"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "243:3:50",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "248:1:50",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "239:3:50"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "239:11:50"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "252:1:50",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "235:3:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "235:19:50"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "224:3:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "224:31:50"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "214:2:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "214:42:50"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "207:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "207:50:50"
                  },
                  "nodeType": "YulIf",
                  "src": "204:70:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "283:15:50",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "293:5:50"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "283:6:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "61:9:50",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "72:7:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "84:6:50",
                "type": ""
              }
            ],
            "src": "14:290:50"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
      "id": 50,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:3899:50",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:50",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "84:110:50",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "130:16:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "139:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "142:1:50",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "132:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "132:12:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "132:12:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "105:7:50"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "114:9:50"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "101:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "101:23:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "126:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "97:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "97:32:50"
                  },
                  "nodeType": "YulIf",
                  "src": "94:52:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "155:33:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "178:9:50"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "165:12:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "165:23:50"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "155:6:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "50:9:50",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "61:7:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "73:6:50",
                "type": ""
              }
            ],
            "src": "14:180:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:125:50",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "310:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "322:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "333:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "318:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "318:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "310:4:50"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "352:9:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "367:6:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "375:42:50",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "363:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "363:55:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "345:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "345:74:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "345:74:50"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "269:9:50",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "280:6:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "291:4:50",
                "type": ""
              }
            ],
            "src": "199:226:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "529:109:50",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "539:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "551:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "562:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "547:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "547:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "539:4:50"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "581:9:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "596:6:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "604:26:50",
                            "type": "",
                            "value": "0xffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "592:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "592:39:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "574:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "574:58:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "574:58:50"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint96__to_t_uint96__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "498:9:50",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "509:6:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "520:4:50",
                "type": ""
              }
            ],
            "src": "430:208:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "756:125:50",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "766:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "778:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "789:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "774:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "774:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "766:4:50"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "808:9:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "823:6:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "831:42:50",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "819:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "819:55:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "801:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "801:74:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "801:74:50"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_Hub_$6045__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "725:9:50",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "736:6:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "747:4:50",
                "type": ""
              }
            ],
            "src": "643:238:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "985:93:50",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "995:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1007:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1018:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1003:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1003:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "995:4:50"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1037:9:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1052:6:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1060:10:50",
                            "type": "",
                            "value": "0xffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1048:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1048:23:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1030:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1030:42:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1030:42:50"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "954:9:50",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "965:6:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "976:4:50",
                "type": ""
              }
            ],
            "src": "886:192:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1219:800:50",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1266:16:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1275:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1278:1:50",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1268:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1268:12:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1268:12:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1240:7:50"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1249:9:50"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1236:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1236:23:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1261:3:50",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1232:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1232:33:50"
                  },
                  "nodeType": "YulIf",
                  "src": "1229:53:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1291:33:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1314:9:50"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1301:12:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1301:23:50"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1291:6:50"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1333:45:50",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1363:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1374:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1359:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1359:18:50"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1346:12:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1346:32:50"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1337:5:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1464:16:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1473:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1476:1:50",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1466:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1466:12:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1466:12:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1400:5:50"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1411:5:50"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1418:42:50",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1407:3:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1407:54:50"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1397:2:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1397:65:50"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1390:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1390:73:50"
                  },
                  "nodeType": "YulIf",
                  "src": "1387:93:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1489:15:50",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1499:5:50"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1489:6:50"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1513:47:50",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1545:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1556:2:50",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1541:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1541:18:50"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1528:12:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1528:32:50"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "1517:7:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1642:16:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1651:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1654:1:50",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1644:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1644:12:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1644:12:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value_1",
                            "nodeType": "YulIdentifier",
                            "src": "1582:7:50"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value_1",
                                "nodeType": "YulIdentifier",
                                "src": "1595:7:50"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1604:34:50",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1591:3:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1591:48:50"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1579:2:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1579:61:50"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1572:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1572:69:50"
                  },
                  "nodeType": "YulIf",
                  "src": "1569:89:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1667:17:50",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "1677:7:50"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1667:6:50"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1693:47:50",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1725:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1736:2:50",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1721:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1721:18:50"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1708:12:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1708:32:50"
                  },
                  "variables": [
                    {
                      "name": "value_2",
                      "nodeType": "YulTypedName",
                      "src": "1697:7:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1798:16:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1807:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1810:1:50",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1800:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1800:12:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1800:12:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value_2",
                            "nodeType": "YulIdentifier",
                            "src": "1762:7:50"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value_2",
                                "nodeType": "YulIdentifier",
                                "src": "1775:7:50"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1784:10:50",
                                "type": "",
                                "value": "0xffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1771:3:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1771:24:50"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1759:2:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1759:37:50"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1752:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1752:45:50"
                  },
                  "nodeType": "YulIf",
                  "src": "1749:65:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1823:17:50",
                  "value": {
                    "name": "value_2",
                    "nodeType": "YulIdentifier",
                    "src": "1833:7:50"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "1823:6:50"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1849:48:50",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1881:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1892:3:50",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1877:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1877:19:50"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1864:12:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1864:33:50"
                  },
                  "variables": [
                    {
                      "name": "value_3",
                      "nodeType": "YulTypedName",
                      "src": "1853:7:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1971:16:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1980:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1983:1:50",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1973:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1973:12:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1973:12:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value_3",
                            "nodeType": "YulIdentifier",
                            "src": "1919:7:50"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value_3",
                                "nodeType": "YulIdentifier",
                                "src": "1932:7:50"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1941:26:50",
                                "type": "",
                                "value": "0xffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1928:3:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1928:40:50"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1916:2:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1916:53:50"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1909:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1909:61:50"
                  },
                  "nodeType": "YulIf",
                  "src": "1906:81:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1996:17:50",
                  "value": {
                    "name": "value_3",
                    "nodeType": "YulIdentifier",
                    "src": "2006:7:50"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "1996:6:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32t_addresst_uint128t_uint32t_uint96",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1153:9:50",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1164:7:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1176:6:50",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1184:6:50",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1192:6:50",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "1200:6:50",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "1208:6:50",
                "type": ""
              }
            ],
            "src": "1083:936:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2119:92:50",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2129:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2141:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2152:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2137:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2137:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2129:4:50"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2171:9:50"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "2196:6:50"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "2189:6:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2189:14:50"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "2182:6:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2182:22:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2164:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2164:41:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2164:41:50"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2088:9:50",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2099:6:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2110:4:50",
                "type": ""
              }
            ],
            "src": "2024:187:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2373:476:50",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2383:27:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2395:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2406:3:50",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2391:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2391:19:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2383:4:50"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2426:9:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2443:6:50"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "2437:5:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2437:13:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2419:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2419:32:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2419:32:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2471:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2482:4:50",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2467:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2467:20:50"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "2503:6:50"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2511:4:50",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2499:3:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2499:17:50"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "2493:5:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2493:24:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2519:42:50",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2489:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2489:73:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2460:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2460:103:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2460:103:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2583:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2594:4:50",
                            "type": "",
                            "value": "0x40"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2579:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2579:20:50"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "2615:6:50"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2623:4:50",
                                    "type": "",
                                    "value": "0x40"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2611:3:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2611:17:50"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "2605:5:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2605:24:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2631:34:50",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2601:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2601:65:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2572:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2572:95:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2572:95:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2687:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2698:4:50",
                            "type": "",
                            "value": "0x60"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2683:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2683:20:50"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "2719:6:50"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2727:4:50",
                                    "type": "",
                                    "value": "0x60"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2715:3:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2715:17:50"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "2709:5:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2709:24:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2735:10:50",
                            "type": "",
                            "value": "0xffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2705:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2705:41:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2676:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2676:71:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2676:71:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2767:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2778:4:50",
                            "type": "",
                            "value": "0x80"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2763:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2763:20:50"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "2799:6:50"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2807:4:50",
                                    "type": "",
                                    "value": "0x80"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2795:3:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2795:17:50"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "2789:5:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2789:24:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2815:26:50",
                            "type": "",
                            "value": "0xffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2785:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2785:57:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2756:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2756:87:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2756:87:50"
                }
              ]
            },
            "name": "abi_encode_tuple_t_struct$_Assertion_$13519_memory_ptr__to_t_struct$_Assertion_$13519_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2342:9:50",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2353:6:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2364:4:50",
                "type": ""
              }
            ],
            "src": "2216:633:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2955:117:50",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2965:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2977:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2988:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2973:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2973:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2965:4:50"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3007:9:50"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3022:6:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3030:34:50",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3018:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3018:47:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3000:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3000:66:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3000:66:50"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint128__to_t_uint128__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2924:9:50",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2935:6:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2946:4:50",
                "type": ""
              }
            ],
            "src": "2854:218:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3178:76:50",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3188:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3200:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3211:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3196:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3196:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3188:4:50"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3230:9:50"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3241:6:50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3223:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3223:25:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3223:25:50"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3147:9:50",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3158:6:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3169:4:50",
                "type": ""
              }
            ],
            "src": "3077:177:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3337:199:50",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3383:16:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3392:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3395:1:50",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3385:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3385:12:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3385:12:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3358:7:50"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3367:9:50"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3354:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3354:23:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3379:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3350:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3350:32:50"
                  },
                  "nodeType": "YulIf",
                  "src": "3347:52:50"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3408:29:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3427:9:50"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3421:5:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3421:16:50"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "3412:5:50",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3490:16:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3499:1:50",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3502:1:50",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3492:6:50"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3492:12:50"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3492:12:50"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3459:5:50"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "3480:5:50"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "3473:6:50"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3473:13:50"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "3466:6:50"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3466:21:50"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "3456:2:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3456:32:50"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3449:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3449:40:50"
                  },
                  "nodeType": "YulIf",
                  "src": "3446:60:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3515:15:50",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3525:5:50"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3515:6:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3303:9:50",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3314:7:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3326:6:50",
                "type": ""
              }
            ],
            "src": "3259:277:50"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3715:182:50",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3732:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3743:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3725:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3725:21:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3725:21:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3766:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3777:2:50",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3762:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3762:18:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3782:2:50",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3755:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3755:30:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3755:30:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3805:9:50"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3816:2:50",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3801:3:50"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3801:18:50"
                      },
                      {
                        "hexValue": "466e2063616e206f6e6c792062652063616c6c65642062792074686520687562",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3821:34:50",
                        "type": "",
                        "value": "Fn can only be called by the hub"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3794:6:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3794:62:50"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3794:62:50"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3865:26:50",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3877:9:50"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3888:2:50",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3873:3:50"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3873:18:50"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3865:4:50"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_594f7f5fe86fab061b9e22bc77ca1b3025e507b69aaafbe7baccf4293ace5c45__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3692:9:50",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3706:4:50",
                "type": ""
              }
            ],
            "src": "3541:356:50"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_uint96__to_t_uint96__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_contract$_Hub_$6045__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffff))\n    }\n    function abi_decode_tuple_t_bytes32t_addresst_uint128t_uint32t_uint96(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n        value1 := value\n        let value_1 := calldataload(add(headStart, 64))\n        if iszero(eq(value_1, and(value_1, 0xffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n        value2 := value_1\n        let value_2 := calldataload(add(headStart, 96))\n        if iszero(eq(value_2, and(value_2, 0xffffffff))) { revert(0, 0) }\n        value3 := value_2\n        let value_3 := calldataload(add(headStart, 128))\n        if iszero(eq(value_3, and(value_3, 0xffffffffffffffffffffffff))) { revert(0, 0) }\n        value4 := value_3\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_struct$_Assertion_$13519_memory_ptr__to_t_struct$_Assertion_$13519_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, mload(value0))\n        mstore(add(headStart, 0x20), and(mload(add(value0, 0x20)), 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 0x40), and(mload(add(value0, 0x40)), 0xffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 0x60), and(mload(add(value0, 0x60)), 0xffffffff))\n        mstore(add(headStart, 0x80), and(mload(add(value0, 0x80)), 0xffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_uint128__to_t_uint128__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_594f7f5fe86fab061b9e22bc77ca1b3025e507b69aaafbe7baccf4293ace5c45__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Fn can only be called by the hub\")\n        tail := add(headStart, 96)\n    }\n}",
      "id": 50,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "161:1884:37:-:0;;;299:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;343:24:37;;335:33;;;;;;373:3;:21;;-1:-1:-1;;;;;;373:21:37;-1:-1:-1;;;;;373:21:37;;;;;;;;;;161:1884;;14:290:50;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:50;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:50:o;:::-;161:1884:37;;;;;;",
  "deployedSourceMap": "161:1884:37:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1187:135;;;;;;:::i;:::-;1259:7;1285:23;;;:10;:23;;;;;;;;:30;;;;;1187:135;;;;375:42:50;363:55;;;345:74;;333:2;318:18;1187:135:37;;;;;;;;1619:146;;;;;;:::i;:::-;1697:6;1722:23;;;:10;:23;;;;;:36;;;;;;;;;1619:146;;;;604:26:50;592:39;;;574:58;;562:2;547:18;1619:146:37;430:208:50;191:14:37;;;;;;;;;1465:148;;;;;;:::i;:::-;1544:6;1569:23;;;:10;:23;;;;;:37;;;;;;;;;1465:148;;;;1060:10:50;1048:23;;;1030:42;;1018:2;1003:18;1465:148:37;886:192:50;468:412:37;;;;;;:::i;:::-;;:::i;:::-;;1771:137;;;;;;:::i;:::-;1840:4;1863:23;;;:10;:23;;;;;:33;:38;;;1771:137;;;;2189:14:50;;2182:22;2164:41;;2152:2;2137:18;1771:137:37;2024:187:50;886:148:37;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1004:23:37;;;;:10;:23;;;;;;;;;997:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;886:148;;;;;;;2364:4:50;2406:3;2395:9;2391:19;2383:27;;2443:6;2437:13;2426:9;2419:32;2519:42;2511:4;2503:6;2499:17;2493:24;2489:73;2482:4;2471:9;2467:20;2460:103;2631:34;2623:4;2615:6;2611:17;2605:24;2601:65;2594:4;2583:9;2579:20;2572:95;2735:10;2727:4;2719:6;2715:17;2709:24;2705:41;2698:4;2687:9;2683:20;2676:71;2815:26;2807:4;2799:6;2795:17;2789:24;2785:57;2778:4;2767:9;2763:20;2756:87;2216:633;;;;;1328:131:37;;;;;;:::i;:::-;1398:7;1424:23;;;:10;:23;;;;;:28;;;;;;1328:131;;;;3030:34:50;3018:47;;;3000:66;;2988:2;2973:18;1328:131:37;2854:218:50;1040:141:37;;;;;;:::i;:::-;1115:7;1141:23;;;:10;:23;;;;;:33;;1040:141;;;;3223:25:50;;;3211:2;3196:18;1040:141:37;3077:177:50;468:412:37;436:11;:9;:11::i;:::-;664:212:::1;::::0;;::::1;::::0;::::1;::::0;;716:15:::1;664:212:::0;;::::1;::::0;;::::1;;::::0;;::::1;::::0;;;::::1;::::0;;::::1;::::0;;;;;;::::1;::::0;;::::1;::::0;;;;;;::::1;::::0;;::::1;::::0;;;;;;-1:-1:-1;638:23:37;;;:10:::1;:23:::0;;;;;;;;:238;;;;;;;;::::1;::::0;;;;::::1;::::0;;;::::1;;::::0;;;;::::1;::::0;;::::1;::::0;;;;;;;;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;;;;;;;::::1;::::0;;;;;;;::::1;::::0;;::::1;;::::0;;468:412::o;1911:131::-;1972:3;;:26;;;;;1987:10;1972:26;;;345:74:50;1972:3:37;;;;;:14;;318:18:50;;1972:26:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1964:71;;;;;;;3743:2:50;1964:71:37;;;3725:21:50;;;3762:18;;;3755:30;3821:34;3801:18;;;3794:62;3873:18;;1964:71:37;;;;;;;;1911:131::o;14:180:50:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:50;;14:180;-1:-1:-1;14:180:50:o;1083:936::-;1176:6;1184;1192;1200;1208;1261:3;1249:9;1240:7;1236:23;1232:33;1229:53;;;1278:1;1275;1268:12;1229:53;1314:9;1301:23;1291:33;;1374:2;1363:9;1359:18;1346:32;1418:42;1411:5;1407:54;1400:5;1397:65;1387:93;;1476:1;1473;1466:12;1387:93;1499:5;-1:-1:-1;1556:2:50;1541:18;;1528:32;1604:34;1591:48;;1579:61;;1569:89;;1654:1;1651;1644:12;1569:89;1677:7;-1:-1:-1;1736:2:50;1721:18;;1708:32;1784:10;1771:24;;1759:37;;1749:65;;1810:1;1807;1800:12;1749:65;1833:7;-1:-1:-1;1892:3:50;1877:19;;1864:33;1941:26;1928:40;;1916:53;;1906:81;;1983:1;1980;1973:12;1906:81;2006:7;1996:17;;;1083:936;;;;;;;;:::o;3259:277::-;3326:6;3379:2;3367:9;3358:7;3354:23;3350:32;3347:52;;;3395:1;3392;3385:12;3347:52;3427:9;3421:16;3480:5;3473:13;3466:21;3459:5;3456:32;3446:60;;3502:1;3499;3492:12;3446:60;3525:5;3259:277;-1:-1:-1;;;3259:277:50:o",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport { Hub } from \"../Hub.sol\";\nimport { AssertionStructs } from \"../structs/AssertionStructs.sol\";\n\ncontract AssertionStorage {\n\n\tHub public hub;\n\n\t// assertionId => Assertion\n\tmapping(bytes32 => AssertionStructs.Assertion) assertions;\n\n\tconstructor(address hubAddress) {\n\t\trequire(hubAddress != address(0));\n\n\t\thub = Hub(hubAddress);\n\t}\n\n\tmodifier onlyContracts() {\n        _checkHub();\n        _;\n    }\n\n\tfunction createAssertion(\n\t\tbytes32 assertionId,\n\t\taddress issuer,\n\t\tuint128 size,\n\t\tuint32 triplesNumber,\n\t\tuint96 chunksNumber\n\t)\n\t\texternal\n\t\tonlyContracts\n\t{\n        assertions[assertionId] = AssertionStructs.Assertion({\n            timestamp: block.timestamp,\n            issuer: issuer,\n            size: size,\n            triplesNumber: triplesNumber,\n            chunksNumber: chunksNumber\n        });\n\t}\n\n    function getAssertion(bytes32 assertionId) external view returns (AssertionStructs.Assertion memory) {\n        return assertions[assertionId];\n    }\n\n    function getAssertionTimestamp(bytes32 assertionId) external view returns (uint256) {\n        return assertions[assertionId].timestamp;\n    }\n\n    function getAssertionIssuer(bytes32 assertionId) external view returns (address) {\n        return assertions[assertionId].issuer;\n    }\n\n    function getAssertionSize(bytes32 assertionId) external view returns (uint128) {\n        return assertions[assertionId].size;\n    }\n\n    function getAssertionTriplesNumber(bytes32 assertionId) external view returns (uint32) {\n        return assertions[assertionId].triplesNumber;\n    }\n\n    function getAssertionChunksNumber(bytes32 assertionId) external view returns (uint96) {\n        return assertions[assertionId].chunksNumber;\n    }\n\n    function assertionExists(bytes32 assertionId) external view returns (bool) {\n        return assertions[assertionId].timestamp != 0;\n    }\n\n\tfunction _checkHub() internal view virtual {\n        require(hub.isContract(msg.sender), \"Fn can only be called by the hub\");\n    }\n\n}\n",
  "sourcePath": "/Users/waving/Desktop/OriginTrail/dkg-evm-module/contracts/storage/AssertionStorage.sol",
  "ast": {
    "absolutePath": "project:/contracts/storage/AssertionStorage.sol",
    "exportedSymbols": {
      "AssertionStorage": [
        11258
      ],
      "AssertionStructs": [
        13520
      ],
      "Hub": [
        6045
      ]
    },
    "id": 11259,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 11081,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:37"
      },
      {
        "absolutePath": "project:/contracts/Hub.sol",
        "file": "../Hub.sol",
        "id": 11083,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 11259,
        "sourceUnit": 6046,
        "src": "58:33:37",
        "symbolAliases": [
          {
            "foreign": {
              "id": 11082,
              "name": "Hub",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 6045,
              "src": "67:3:37",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/structs/AssertionStructs.sol",
        "file": "../structs/AssertionStructs.sol",
        "id": 11085,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 11259,
        "sourceUnit": 13521,
        "src": "92:67:37",
        "symbolAliases": [
          {
            "foreign": {
              "id": 11084,
              "name": "AssertionStructs",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 13520,
              "src": "101:16:37",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "AssertionStorage",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 11258,
        "linearizedBaseContracts": [
          11258
        ],
        "name": "AssertionStorage",
        "nameLocation": "170:16:37",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "365a86fc",
            "id": 11088,
            "mutability": "mutable",
            "name": "hub",
            "nameLocation": "202:3:37",
            "nodeType": "VariableDeclaration",
            "scope": 11258,
            "src": "191:14:37",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Hub_$6045",
              "typeString": "contract Hub"
            },
            "typeName": {
              "id": 11087,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 11086,
                "name": "Hub",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 6045,
                "src": "191:3:37"
              },
              "referencedDeclaration": 6045,
              "src": "191:3:37",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Hub_$6045",
                "typeString": "contract Hub"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 11093,
            "mutability": "mutable",
            "name": "assertions",
            "nameLocation": "285:10:37",
            "nodeType": "VariableDeclaration",
            "scope": 11258,
            "src": "238:57:37",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Assertion_$13519_storage_$",
              "typeString": "mapping(bytes32 => struct AssertionStructs.Assertion)"
            },
            "typeName": {
              "id": 11092,
              "keyType": {
                "id": 11089,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "246:7:37",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "238:46:37",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Assertion_$13519_storage_$",
                "typeString": "mapping(bytes32 => struct AssertionStructs.Assertion)"
              },
              "valueType": {
                "id": 11091,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 11090,
                  "name": "AssertionStructs.Assertion",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 13519,
                  "src": "257:26:37"
                },
                "referencedDeclaration": 13519,
                "src": "257:26:37",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Assertion_$13519_storage_ptr",
                  "typeString": "struct AssertionStructs.Assertion"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 11113,
              "nodeType": "Block",
              "src": "331:67:37",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 11104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 11099,
                          "name": "hubAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11095,
                          "src": "343:10:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 11102,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "365:1:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 11101,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "357:7:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 11100,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "357:7:37",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 11103,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "357:10:37",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "343:24:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 11098,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "335:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 11105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "335:33:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11106,
                  "nodeType": "ExpressionStatement",
                  "src": "335:33:37"
                },
                {
                  "expression": {
                    "id": 11111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11107,
                      "name": "hub",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11088,
                      "src": "373:3:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Hub_$6045",
                        "typeString": "contract Hub"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 11109,
                          "name": "hubAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11095,
                          "src": "383:10:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 11108,
                        "name": "Hub",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6045,
                        "src": "379:3:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Hub_$6045_$",
                          "typeString": "type(contract Hub)"
                        }
                      },
                      "id": 11110,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "379:15:37",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Hub_$6045",
                        "typeString": "contract Hub"
                      }
                    },
                    "src": "373:21:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Hub_$6045",
                      "typeString": "contract Hub"
                    }
                  },
                  "id": 11112,
                  "nodeType": "ExpressionStatement",
                  "src": "373:21:37"
                }
              ]
            },
            "id": 11114,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11096,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11095,
                  "mutability": "mutable",
                  "name": "hubAddress",
                  "nameLocation": "319:10:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 11114,
                  "src": "311:18:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11094,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "311:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "310:20:37"
            },
            "returnParameters": {
              "id": 11097,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "331:0:37"
            },
            "scope": 11258,
            "src": "299:99:37",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 11120,
              "nodeType": "Block",
              "src": "426:39:37",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 11116,
                      "name": "_checkHub",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11257,
                      "src": "436:9:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$__$",
                        "typeString": "function () view"
                      }
                    },
                    "id": 11117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "436:11:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11118,
                  "nodeType": "ExpressionStatement",
                  "src": "436:11:37"
                },
                {
                  "id": 11119,
                  "nodeType": "PlaceholderStatement",
                  "src": "457:1:37"
                }
              ]
            },
            "id": 11121,
            "name": "onlyContracts",
            "nameLocation": "410:13:37",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 11115,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "423:2:37"
            },
            "src": "401:64:37",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 11150,
              "nodeType": "Block",
              "src": "628:252:37",
              "statements": [
                {
                  "expression": {
                    "id": 11148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 11136,
                        "name": "assertions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11093,
                        "src": "638:10:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Assertion_$13519_storage_$",
                          "typeString": "mapping(bytes32 => struct AssertionStructs.Assertion storage ref)"
                        }
                      },
                      "id": 11138,
                      "indexExpression": {
                        "id": 11137,
                        "name": "assertionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11123,
                        "src": "649:11:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "638:23:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Assertion_$13519_storage",
                        "typeString": "struct AssertionStructs.Assertion storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 11141,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "716:5:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 11142,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "716:15:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 11143,
                          "name": "issuer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11125,
                          "src": "753:6:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 11144,
                          "name": "size",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11127,
                          "src": "779:4:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        {
                          "id": 11145,
                          "name": "triplesNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11129,
                          "src": "812:13:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        {
                          "id": 11146,
                          "name": "chunksNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11131,
                          "src": "853:12:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        ],
                        "expression": {
                          "id": 11139,
                          "name": "AssertionStructs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13520,
                          "src": "664:16:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_AssertionStructs_$13520_$",
                            "typeString": "type(library AssertionStructs)"
                          }
                        },
                        "id": 11140,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "Assertion",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 13519,
                        "src": "664:26:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Assertion_$13519_storage_ptr_$",
                          "typeString": "type(struct AssertionStructs.Assertion storage pointer)"
                        }
                      },
                      "id": 11147,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "timestamp",
                        "issuer",
                        "size",
                        "triplesNumber",
                        "chunksNumber"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "664:212:37",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Assertion_$13519_memory_ptr",
                        "typeString": "struct AssertionStructs.Assertion memory"
                      }
                    },
                    "src": "638:238:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Assertion_$13519_storage",
                      "typeString": "struct AssertionStructs.Assertion storage ref"
                    }
                  },
                  "id": 11149,
                  "nodeType": "ExpressionStatement",
                  "src": "638:238:37"
                }
              ]
            },
            "functionSelector": "448338bd",
            "id": 11151,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 11134,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 11133,
                  "name": "onlyContracts",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11121,
                  "src": "613:13:37"
                },
                "nodeType": "ModifierInvocation",
                "src": "613:13:37"
              }
            ],
            "name": "createAssertion",
            "nameLocation": "477:15:37",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11132,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11123,
                  "mutability": "mutable",
                  "name": "assertionId",
                  "nameLocation": "504:11:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 11151,
                  "src": "496:19:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 11122,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "496:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11125,
                  "mutability": "mutable",
                  "name": "issuer",
                  "nameLocation": "527:6:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 11151,
                  "src": "519:14:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11124,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "519:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11127,
                  "mutability": "mutable",
                  "name": "size",
                  "nameLocation": "545:4:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 11151,
                  "src": "537:12:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 11126,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "537:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11129,
                  "mutability": "mutable",
                  "name": "triplesNumber",
                  "nameLocation": "560:13:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 11151,
                  "src": "553:20:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 11128,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "553:6:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11131,
                  "mutability": "mutable",
                  "name": "chunksNumber",
                  "nameLocation": "584:12:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 11151,
                  "src": "577:19:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 11130,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "577:6:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "492:107:37"
            },
            "returnParameters": {
              "id": 11135,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "628:0:37"
            },
            "scope": 11258,
            "src": "468:412:37",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 11163,
              "nodeType": "Block",
              "src": "987:47:37",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 11159,
                      "name": "assertions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11093,
                      "src": "1004:10:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Assertion_$13519_storage_$",
                        "typeString": "mapping(bytes32 => struct AssertionStructs.Assertion storage ref)"
                      }
                    },
                    "id": 11161,
                    "indexExpression": {
                      "id": 11160,
                      "name": "assertionId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11153,
                      "src": "1015:11:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1004:23:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Assertion_$13519_storage",
                      "typeString": "struct AssertionStructs.Assertion storage ref"
                    }
                  },
                  "functionReturnParameters": 11158,
                  "id": 11162,
                  "nodeType": "Return",
                  "src": "997:30:37"
                }
              ]
            },
            "functionSelector": "88302884",
            "id": 11164,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAssertion",
            "nameLocation": "895:12:37",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11154,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11153,
                  "mutability": "mutable",
                  "name": "assertionId",
                  "nameLocation": "916:11:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 11164,
                  "src": "908:19:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 11152,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "908:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "907:21:37"
            },
            "returnParameters": {
              "id": 11158,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11157,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11164,
                  "src": "952:33:37",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Assertion_$13519_memory_ptr",
                    "typeString": "struct AssertionStructs.Assertion"
                  },
                  "typeName": {
                    "id": 11156,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 11155,
                      "name": "AssertionStructs.Assertion",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 13519,
                      "src": "952:26:37"
                    },
                    "referencedDeclaration": 13519,
                    "src": "952:26:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Assertion_$13519_storage_ptr",
                      "typeString": "struct AssertionStructs.Assertion"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "951:35:37"
            },
            "scope": 11258,
            "src": "886:148:37",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 11176,
              "nodeType": "Block",
              "src": "1124:57:37",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 11171,
                        "name": "assertions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11093,
                        "src": "1141:10:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Assertion_$13519_storage_$",
                          "typeString": "mapping(bytes32 => struct AssertionStructs.Assertion storage ref)"
                        }
                      },
                      "id": 11173,
                      "indexExpression": {
                        "id": 11172,
                        "name": "assertionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11166,
                        "src": "1152:11:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1141:23:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Assertion_$13519_storage",
                        "typeString": "struct AssertionStructs.Assertion storage ref"
                      }
                    },
                    "id": 11174,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "timestamp",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 13510,
                    "src": "1141:33:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 11170,
                  "id": 11175,
                  "nodeType": "Return",
                  "src": "1134:40:37"
                }
              ]
            },
            "functionSelector": "af17a875",
            "id": 11177,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAssertionTimestamp",
            "nameLocation": "1049:21:37",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11167,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11166,
                  "mutability": "mutable",
                  "name": "assertionId",
                  "nameLocation": "1079:11:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 11177,
                  "src": "1071:19:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 11165,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1071:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1070:21:37"
            },
            "returnParameters": {
              "id": 11170,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11169,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11177,
                  "src": "1115:7:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11168,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1115:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1114:9:37"
            },
            "scope": 11258,
            "src": "1040:141:37",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 11189,
              "nodeType": "Block",
              "src": "1268:54:37",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 11184,
                        "name": "assertions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11093,
                        "src": "1285:10:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Assertion_$13519_storage_$",
                          "typeString": "mapping(bytes32 => struct AssertionStructs.Assertion storage ref)"
                        }
                      },
                      "id": 11186,
                      "indexExpression": {
                        "id": 11185,
                        "name": "assertionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11179,
                        "src": "1296:11:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1285:23:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Assertion_$13519_storage",
                        "typeString": "struct AssertionStructs.Assertion storage ref"
                      }
                    },
                    "id": 11187,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "issuer",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 13512,
                    "src": "1285:30:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 11183,
                  "id": 11188,
                  "nodeType": "Return",
                  "src": "1278:37:37"
                }
              ]
            },
            "functionSelector": "0828e9f3",
            "id": 11190,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAssertionIssuer",
            "nameLocation": "1196:18:37",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11180,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11179,
                  "mutability": "mutable",
                  "name": "assertionId",
                  "nameLocation": "1223:11:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 11190,
                  "src": "1215:19:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 11178,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1215:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1214:21:37"
            },
            "returnParameters": {
              "id": 11183,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11182,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11190,
                  "src": "1259:7:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11181,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1259:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1258:9:37"
            },
            "scope": 11258,
            "src": "1187:135:37",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 11202,
              "nodeType": "Block",
              "src": "1407:52:37",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 11197,
                        "name": "assertions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11093,
                        "src": "1424:10:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Assertion_$13519_storage_$",
                          "typeString": "mapping(bytes32 => struct AssertionStructs.Assertion storage ref)"
                        }
                      },
                      "id": 11199,
                      "indexExpression": {
                        "id": 11198,
                        "name": "assertionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11192,
                        "src": "1435:11:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1424:23:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Assertion_$13519_storage",
                        "typeString": "struct AssertionStructs.Assertion storage ref"
                      }
                    },
                    "id": 11200,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "size",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 13514,
                    "src": "1424:28:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "functionReturnParameters": 11196,
                  "id": 11201,
                  "nodeType": "Return",
                  "src": "1417:35:37"
                }
              ]
            },
            "functionSelector": "9f9c2c53",
            "id": 11203,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAssertionSize",
            "nameLocation": "1337:16:37",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11193,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11192,
                  "mutability": "mutable",
                  "name": "assertionId",
                  "nameLocation": "1362:11:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 11203,
                  "src": "1354:19:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 11191,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1354:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1353:21:37"
            },
            "returnParameters": {
              "id": 11196,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11195,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11203,
                  "src": "1398:7:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 11194,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "1398:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1397:9:37"
            },
            "scope": 11258,
            "src": "1328:131:37",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 11215,
              "nodeType": "Block",
              "src": "1552:61:37",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 11210,
                        "name": "assertions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11093,
                        "src": "1569:10:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Assertion_$13519_storage_$",
                          "typeString": "mapping(bytes32 => struct AssertionStructs.Assertion storage ref)"
                        }
                      },
                      "id": 11212,
                      "indexExpression": {
                        "id": 11211,
                        "name": "assertionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11205,
                        "src": "1580:11:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1569:23:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Assertion_$13519_storage",
                        "typeString": "struct AssertionStructs.Assertion storage ref"
                      }
                    },
                    "id": 11213,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "triplesNumber",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 13516,
                    "src": "1569:37:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "functionReturnParameters": 11209,
                  "id": 11214,
                  "nodeType": "Return",
                  "src": "1562:44:37"
                }
              ]
            },
            "functionSelector": "4303b3da",
            "id": 11216,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAssertionTriplesNumber",
            "nameLocation": "1474:25:37",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11206,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11205,
                  "mutability": "mutable",
                  "name": "assertionId",
                  "nameLocation": "1508:11:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 11216,
                  "src": "1500:19:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 11204,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1500:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1499:21:37"
            },
            "returnParameters": {
              "id": 11209,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11208,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11216,
                  "src": "1544:6:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 11207,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1544:6:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1543:8:37"
            },
            "scope": 11258,
            "src": "1465:148:37",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 11228,
              "nodeType": "Block",
              "src": "1705:60:37",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 11223,
                        "name": "assertions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11093,
                        "src": "1722:10:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Assertion_$13519_storage_$",
                          "typeString": "mapping(bytes32 => struct AssertionStructs.Assertion storage ref)"
                        }
                      },
                      "id": 11225,
                      "indexExpression": {
                        "id": 11224,
                        "name": "assertionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11218,
                        "src": "1733:11:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1722:23:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Assertion_$13519_storage",
                        "typeString": "struct AssertionStructs.Assertion storage ref"
                      }
                    },
                    "id": 11226,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "chunksNumber",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 13518,
                    "src": "1722:36:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "functionReturnParameters": 11222,
                  "id": 11227,
                  "nodeType": "Return",
                  "src": "1715:43:37"
                }
              ]
            },
            "functionSelector": "21110709",
            "id": 11229,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAssertionChunksNumber",
            "nameLocation": "1628:24:37",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11219,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11218,
                  "mutability": "mutable",
                  "name": "assertionId",
                  "nameLocation": "1661:11:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 11229,
                  "src": "1653:19:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 11217,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1653:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1652:21:37"
            },
            "returnParameters": {
              "id": 11222,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11221,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11229,
                  "src": "1697:6:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 11220,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "1697:6:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1696:8:37"
            },
            "scope": 11258,
            "src": "1619:146:37",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 11243,
              "nodeType": "Block",
              "src": "1846:62:37",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 11241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 11236,
                          "name": "assertions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11093,
                          "src": "1863:10:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Assertion_$13519_storage_$",
                            "typeString": "mapping(bytes32 => struct AssertionStructs.Assertion storage ref)"
                          }
                        },
                        "id": 11238,
                        "indexExpression": {
                          "id": 11237,
                          "name": "assertionId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11231,
                          "src": "1874:11:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1863:23:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Assertion_$13519_storage",
                          "typeString": "struct AssertionStructs.Assertion storage ref"
                        }
                      },
                      "id": 11239,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13510,
                      "src": "1863:33:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 11240,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1900:1:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1863:38:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 11235,
                  "id": 11242,
                  "nodeType": "Return",
                  "src": "1856:45:37"
                }
              ]
            },
            "functionSelector": "5a4038f5",
            "id": 11244,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "assertionExists",
            "nameLocation": "1780:15:37",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11232,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11231,
                  "mutability": "mutable",
                  "name": "assertionId",
                  "nameLocation": "1804:11:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 11244,
                  "src": "1796:19:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 11230,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1796:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1795:21:37"
            },
            "returnParameters": {
              "id": 11235,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11234,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11244,
                  "src": "1840:4:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 11233,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1840:4:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1839:6:37"
            },
            "scope": 11258,
            "src": "1771:137:37",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 11256,
              "nodeType": "Block",
              "src": "1954:88:37",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 11250,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1987:3:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 11251,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1987:10:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 11248,
                            "name": "hub",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11088,
                            "src": "1972:3:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Hub_$6045",
                              "typeString": "contract Hub"
                            }
                          },
                          "id": 11249,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isContract",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6018,
                          "src": "1972:14:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 11252,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1972:26:37",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "466e2063616e206f6e6c792062652063616c6c65642062792074686520687562",
                        "id": 11253,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2000:34:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_594f7f5fe86fab061b9e22bc77ca1b3025e507b69aaafbe7baccf4293ace5c45",
                          "typeString": "literal_string \"Fn can only be called by the hub\""
                        },
                        "value": "Fn can only be called by the hub"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_594f7f5fe86fab061b9e22bc77ca1b3025e507b69aaafbe7baccf4293ace5c45",
                          "typeString": "literal_string \"Fn can only be called by the hub\""
                        }
                      ],
                      "id": 11247,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1964:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11254,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1964:71:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11255,
                  "nodeType": "ExpressionStatement",
                  "src": "1964:71:37"
                }
              ]
            },
            "id": 11257,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_checkHub",
            "nameLocation": "1920:9:37",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11245,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1929:2:37"
            },
            "returnParameters": {
              "id": 11246,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1954:0:37"
            },
            "scope": 11258,
            "src": "1911:131:37",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 11259,
        "src": "161:1884:37",
        "usedErrors": []
      }
    ],
    "src": "33:2013:37"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.14+commit.80d49f37.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.10",
  "updatedAt": "2022-12-02T20:40:59.654Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}