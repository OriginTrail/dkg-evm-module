{
  "contractName": "ERC20Token",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "hubAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MINTER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "hub",
      "outputs": [
        {
          "internalType": "contract Hub",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "minter",
          "type": "address"
        }
      ],
      "name": "setupRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"hubAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hub\",\"outputs\":[{\"internalType\":\"contract Hub\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"}],\"name\":\"setupRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/ERC20Token.sol\":\"ERC20Token\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x5b35d8e68aeaccc685239bd9dd79b9ba01a0357930f8a3307ab85511733d9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba8eb2d22f9321bd4660f6617c181d9611ff30a9b089408b8c6e2216d6d5cdc5\",\"dweb:/ipfs/QmTSJvhjHfnUV1j4hsqDv8PmLvGBLRs9gHLjTUXrUJ5Y9q\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0\",\"dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"project:/contracts/ERC20Token.sol\":{\"keccak256\":\"0x2f2d9efda13316d6dea8e644c608f30040ed26b7c925809c901ae62a16008e24\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e5439d4f680c28c424fcf633b75be2f00c4cd751dd73b2da199aa92eecf6d7f\",\"dweb:/ipfs/QmdaajZitdQMp1A9zuss5NJkvHuFMtwgHw8efiB6XihVrX\"]},\"project:/contracts/Hub.sol\":{\"keccak256\":\"0xe3710fe78b0f30843584e77db33e677844e66a10f575e77885de2e46eb6229aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5eb6171406bb7699788d51630d4ff5944c6dc6504c878b780c34899725149308\",\"dweb:/ipfs/QmY6MbYvNajfjdZhXzbTQJdSHeRupAjhFBV9rxK9mkPmgL\"]},\"project:/contracts/interface/Named.sol\":{\"keccak256\":\"0x461aea8fd16a345f810137f7c6033a573b30604dd34ca4d46d454a0181246709\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb1e77560b7b9d24efc828d1512d5d1589d1b50827f5e8d3ad6940edcd342ddc\",\"dweb:/ipfs/QmSLUQWTnUD9b31MvRUZCKsXWFmAyWGah7cLqiYAbH4fBp\"]},\"project:/contracts/interface/Versioned.sol\":{\"keccak256\":\"0xe2a0d8322337115b8d49df322bfb37639e10ecbabfc8c6d55114cb23bb8ab74b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eb44b136007fbd402575558f9f2721d54c37274f2fca4908e13a818a6160d27f\",\"dweb:/ipfs/QmYpW2QssuHVU3sXtUQPi5tENW6qnUKnb5wUB9Z7qftERg\"]},\"project:/contracts/utils/UnorderedNamedContractDynamicSet.sol\":{\"keccak256\":\"0xece9ad7df98303a4e64703606c2b1a1939eae8d00d6ccbe1d5290a9a18937ab2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4409924dfc48fd21eabb7c80a351a0353acd2093778a2a388f740707d6a8b006\",\"dweb:/ipfs/QmXjhcD4CQH1fGNn83CT81i6c5gHPuPxjpNyyJ5xGGPSbV\"]}},\"version\":1}",
  "bytecode": "0x6080346200017d57601f601f196001600160401b036200164e3881900384810184168601838111878210176200035f578692829160405283396020958691810103126200017d57516001600160a01b03811694908590036200017d576200006562000375565b600a8152692a22a9aa102a27a5a2a760b11b828201526200008562000375565b9460049586815263151154d560e21b8482015282519385851162000265576003948554946001958681811c9116801562000354575b848210146200033f57908186849311620002e9575b50839086831160011462000286576000926200027a575b505060001982881b1c191690851b1785555b8151958611620002655787548481811c911680156200025a575b828210146200024557838111620001fa575b50809286116001146200018e57508495509084929160009562000182575b50501b92600019911b1c19161790555b80156200017d57600680546001600160a01b0319169190911790556040516112b89081620003968239f35b600080fd5b01519350388062000142565b939295859081168860005285600020956000905b89838310620001df5750505010620001c4575b50505050811b01905562000152565b01519060f884600019921b161c1916905538808080620001b5565b858701518955909701969485019488935090810190620001a2565b88600052816000208480890160051c820192848a106200023b575b0160051c019085905b8281106200022e57505062000124565b600081550185906200021e565b9250819262000215565b602289634e487b7160e01b6000525260246000fd5b90607f169062000112565b604188634e487b7160e01b6000525260246000fd5b015190503880620000e6565b908a8894169189600052856000209260005b87828210620002d25750508411620002b9575b505050811b018555620000f8565b0151600019838a1b60f8161c19169055388080620002ab565b8385015186558b9790950194938401930162000298565b90915087600052836000208680850160051c82019286861062000335575b918991869594930160051c01915b82811062000325575050620000cf565b6000815585945089910162000315565b9250819262000307565b60228b634e487b7160e01b6000525260246000fd5b90607f1690620000ba565b634e487b7160e01b600052604160045260246000fd5b60408051919082016001600160401b038111838210176200035f5760405256fe608060408181526004918236101561001657600080fd5b600092833560e01c91826301ffc9a714610b0f5750816306fdde0314610a1a578163095ea7b3146109f057816318160ddd146109d157816323b872dd14610907578163248a9ca3146108dc5781632f2ff15d14610832578163313ce5671461081657816336568abe14610785578163365a86fc1461075c578163395093511461070c57816340c10f19146105d057816370a082311461059957816391d148541461055257816395d89b411461044f578163a217fddf14610434578163a457c2d71461038c578163a9059cbb1461035b578163c28637ac146101e0578163d5391393146101a5578163d547741f14610162575063dd62ed3e1461011757600080fd5b3461015e578060031936011261015e5780602092610133610bb1565b61013b610bcc565b6001600160a01b0391821683526001865283832091168252845220549051908152f35b5080fd5b9050346101a157816003193601126101a15761019e9035610181610bcc565b90808552600560205261019960018587200154610be2565b610f49565b51f35b8280fd5b50503461015e578160031936011261015e57602090517f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a68152f35b9050346101a157602080600319360112610357576101fc610bb1565b6006548451638da5cb5b60e01b81526001600160a01b039492939291839082908490829089165afa801561034d578591889161030f575b501633036102cf57507f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a69283865260058252848620921691828652815260ff848620541615610283575b50505051f35b828552600581528385209082865252828420600160ff1982541617905533917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d858551a438808061027d565b8160649286519262461bcd60e51b845283015260248201527f466e2063616e206f6e6c79206265207573656420627920687562206f776e65726044820152fd5b809250848092503d8311610346575b6103288183610f11565b810103126103425751848116810361034257849038610233565b8680fd5b503d61031e565b86513d89823e3d90fd5b8380fd5b50503461015e578060031936011261015e5760209061038561037b610bb1565b6024359033610fe4565b5160018152f35b905082346104315782600319360112610431576103a7610bb1565b918360243592338152600160205281812060018060a01b03861682526020522054908282106103e0576020856103858585038733611159565b608490602086519162461bcd60e51b8352820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152fd5b80fd5b50503461015e578160031936011261015e5751908152602090f35b83833461015e578160031936011261015e57805191809380549160019083821c92828516948515610548575b60209586861081146105355785895290811561051157506001146104b9575b6104b587876104ab828c0383610f11565b5191829182610b85565b0390f35b81529295507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b8284106104fe57505050826104b5946104ab9282010194868061049a565b80548685018801529286019281016104e0565b60ff19168887015250505050151560051b83010192506104ab826104b5868061049a565b634e487b7160e01b845260228352602484fd5b93607f169361047b565b9050346101a157816003193601126101a1578160209360ff92610573610bcc565b90358252600586528282206001600160a01b039091168252855220549151911615158152f35b50503461015e57602036600319011261015e5760209181906001600160a01b036105c1610bb1565b16815280845220549051908152f35b9050346101a157816003193601126101a1576105ea610bb1565b6024357f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6855260209160058352848620338752835260ff8587205416156106d1576001600160a01b031692831561068e575084918161066c7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef93600254610fc1565b600255848452838252858420610683828254610fc1565b90558551908152a351f35b845162461bcd60e51b8152908101839052601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606490fd5b5050606492519162461bcd60e51b8352820152601660248201527521b0b63632b91034b9903737ba10309036b4b73a32b960511b6044820152fd5b50503461015e578060031936011261015e5761038560209261075561072f610bb1565b338352600186528483206001600160a01b03821684528652918490205460243590610fc1565b9033611159565b50503461015e578160031936011261015e5760065490516001600160a01b039091168152602090f35b9050346101a157816003193601126101a15761079f610bcc565b90336001600160a01b038316036107bb579061019e9135610f49565b608490602084519162461bcd60e51b8352820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b6064820152fd5b50503461015e578160031936011261015e576020905160128152f35b9050346101a157816003193601126101a1573561084d610bcc565b818452600560205261086460018486200154610be2565b818452600560209081528385206001600160a01b039092168086529190528284205460ff161561089357505051f35b8184526005602052828420818552602052828420600160ff1982541617905533917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d858551a451f35b9050346101a15760203660031901126101a15781602093600192358152600585522001549051908152f35b8391503461015e57606036600319011261015e57610923610bb1565b61092b610bcc565b91846044359460018060a01b038416815260016020528181203382526020522054906000198203610965575b602086610385878787610fe4565b84821061098e57509183916109836020969561038595033383611159565b919394819350610957565b606490602087519162461bcd60e51b8352820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152fd5b50503461015e578160031936011261015e576020906002549051908152f35b50503461015e578060031936011261015e57602090610385610a10610bb1565b6024359033611159565b919050346101a157826003193601126101a157805191836003549060019082821c928281168015610b05575b6020958686108214610af25750848852908115610ad05750600114610a77575b6104b586866104ab828b0383610f11565b929550600383527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b828410610abd57505050826104b5946104ab928201019438610a66565b8054868501880152928601928101610aa0565b60ff191687860152505050151560051b83010192506104ab826104b538610a66565b634e487b7160e01b845260229052602483fd5b93607f1693610a46565b8491346101a15760203660031901126101a1573563ffffffff60e01b81168091036101a15760209250637965db0b60e01b8114908115610b51575b5015158152f35b6301ffc9a760e01b14905083610b4a565b60005b838110610b755750506000910152565b8181015183820152602001610b65565b60409160208252610ba58151809281602086015260208686019101610b62565b601f01601f1916010190565b600435906001600160a01b0382168203610bc757565b600080fd5b602435906001600160a01b0382168203610bc757565b600081815260209060058252604092838220338352835260ff848320541615610c0b5750505050565b835167ffffffffffffffff9190336060820184811183821017610efd578752602a82528582019287368537825115610ee95760308453825191600192831015610ed5576078602185015360295b838111610e6b5750610e295790875194608086019086821090821117610e1557885260428552868501956060368837855115610e0157603087538551821015610e015790607860218701536041915b818311610d9357505050610d5157938593610d3793610d28604894610cff7f416363657373436f6e74726f6c3a206163636f756e742000000000000000000099610d4d9b519a8b978801525180926037880190610b62565b8401917001034b99036b4b9b9b4b733903937b6329607d1b603784015251809386840190610b62565b01036028810185520183610f11565b5162461bcd60e51b815291829160048301610b85565b0390fd5b60648587519062461bcd60e51b825280600483015260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152fd5b909192600f81166010811015610ded576f181899199a1a9b1b9c1cb0b131b232b360811b901a610dc3858961125b565b5360041c928015610dd957600019019190610ca7565b634e487b7160e01b82526011600452602482fd5b634e487b7160e01b83526032600452602483fd5b634e487b7160e01b81526032600452602490fd5b634e487b7160e01b87526041600452602487fd5b60648789519062461bcd60e51b825280600483015260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152fd5b90600f81166010811015610ec1576f181899199a1a9b1b9c1cb0b131b232b360811b901a610e99838761125b565b5360041c908015610ead5760001901610c58565b634e487b7160e01b88526011600452602488fd5b634e487b7160e01b89526032600452602489fd5b634e487b7160e01b87526032600452602487fd5b634e487b7160e01b86526032600452602486fd5b634e487b7160e01b86526041600452602486fd5b90601f8019910116810190811067ffffffffffffffff821117610f3357604052565b634e487b7160e01b600052604160045260246000fd5b906000918083526005602052604083209160018060a01b03169182845260205260ff604084205416610f7a57505050565b8083526005602052604083208284526020526040832060ff1981541690557ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b3393604051a4565b91908201809211610fce57565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b0390811691821561110657169182156110b55760008281528060205260408120549180831061106157604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815220611056828254610fc1565b9055604051908152a3565b60405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608490fd5b60405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608490fd5b6001600160a01b0390811691821561120a57169182156111ba5760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260018252604060002085600052825280604060002055604051908152a3565b60405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608490fd5b60405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b90815181101561126c570160200190565b634e487b7160e01b600052603260045260246000fdfea2646970667358221220ac42d1128cc57d68a0e10fd95393e1f2d255b243ebab270252ea7550eb31fde764736f6c63430008100033",
  "deployedBytecode": "0x608060408181526004918236101561001657600080fd5b600092833560e01c91826301ffc9a714610b0f5750816306fdde0314610a1a578163095ea7b3146109f057816318160ddd146109d157816323b872dd14610907578163248a9ca3146108dc5781632f2ff15d14610832578163313ce5671461081657816336568abe14610785578163365a86fc1461075c578163395093511461070c57816340c10f19146105d057816370a082311461059957816391d148541461055257816395d89b411461044f578163a217fddf14610434578163a457c2d71461038c578163a9059cbb1461035b578163c28637ac146101e0578163d5391393146101a5578163d547741f14610162575063dd62ed3e1461011757600080fd5b3461015e578060031936011261015e5780602092610133610bb1565b61013b610bcc565b6001600160a01b0391821683526001865283832091168252845220549051908152f35b5080fd5b9050346101a157816003193601126101a15761019e9035610181610bcc565b90808552600560205261019960018587200154610be2565b610f49565b51f35b8280fd5b50503461015e578160031936011261015e57602090517f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a68152f35b9050346101a157602080600319360112610357576101fc610bb1565b6006548451638da5cb5b60e01b81526001600160a01b039492939291839082908490829089165afa801561034d578591889161030f575b501633036102cf57507f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a69283865260058252848620921691828652815260ff848620541615610283575b50505051f35b828552600581528385209082865252828420600160ff1982541617905533917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d858551a438808061027d565b8160649286519262461bcd60e51b845283015260248201527f466e2063616e206f6e6c79206265207573656420627920687562206f776e65726044820152fd5b809250848092503d8311610346575b6103288183610f11565b810103126103425751848116810361034257849038610233565b8680fd5b503d61031e565b86513d89823e3d90fd5b8380fd5b50503461015e578060031936011261015e5760209061038561037b610bb1565b6024359033610fe4565b5160018152f35b905082346104315782600319360112610431576103a7610bb1565b918360243592338152600160205281812060018060a01b03861682526020522054908282106103e0576020856103858585038733611159565b608490602086519162461bcd60e51b8352820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152fd5b80fd5b50503461015e578160031936011261015e5751908152602090f35b83833461015e578160031936011261015e57805191809380549160019083821c92828516948515610548575b60209586861081146105355785895290811561051157506001146104b9575b6104b587876104ab828c0383610f11565b5191829182610b85565b0390f35b81529295507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b8284106104fe57505050826104b5946104ab9282010194868061049a565b80548685018801529286019281016104e0565b60ff19168887015250505050151560051b83010192506104ab826104b5868061049a565b634e487b7160e01b845260228352602484fd5b93607f169361047b565b9050346101a157816003193601126101a1578160209360ff92610573610bcc565b90358252600586528282206001600160a01b039091168252855220549151911615158152f35b50503461015e57602036600319011261015e5760209181906001600160a01b036105c1610bb1565b16815280845220549051908152f35b9050346101a157816003193601126101a1576105ea610bb1565b6024357f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6855260209160058352848620338752835260ff8587205416156106d1576001600160a01b031692831561068e575084918161066c7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef93600254610fc1565b600255848452838252858420610683828254610fc1565b90558551908152a351f35b845162461bcd60e51b8152908101839052601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606490fd5b5050606492519162461bcd60e51b8352820152601660248201527521b0b63632b91034b9903737ba10309036b4b73a32b960511b6044820152fd5b50503461015e578060031936011261015e5761038560209261075561072f610bb1565b338352600186528483206001600160a01b03821684528652918490205460243590610fc1565b9033611159565b50503461015e578160031936011261015e5760065490516001600160a01b039091168152602090f35b9050346101a157816003193601126101a15761079f610bcc565b90336001600160a01b038316036107bb579061019e9135610f49565b608490602084519162461bcd60e51b8352820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b6064820152fd5b50503461015e578160031936011261015e576020905160128152f35b9050346101a157816003193601126101a1573561084d610bcc565b818452600560205261086460018486200154610be2565b818452600560209081528385206001600160a01b039092168086529190528284205460ff161561089357505051f35b8184526005602052828420818552602052828420600160ff1982541617905533917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d858551a451f35b9050346101a15760203660031901126101a15781602093600192358152600585522001549051908152f35b8391503461015e57606036600319011261015e57610923610bb1565b61092b610bcc565b91846044359460018060a01b038416815260016020528181203382526020522054906000198203610965575b602086610385878787610fe4565b84821061098e57509183916109836020969561038595033383611159565b919394819350610957565b606490602087519162461bcd60e51b8352820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152fd5b50503461015e578160031936011261015e576020906002549051908152f35b50503461015e578060031936011261015e57602090610385610a10610bb1565b6024359033611159565b919050346101a157826003193601126101a157805191836003549060019082821c928281168015610b05575b6020958686108214610af25750848852908115610ad05750600114610a77575b6104b586866104ab828b0383610f11565b929550600383527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b828410610abd57505050826104b5946104ab928201019438610a66565b8054868501880152928601928101610aa0565b60ff191687860152505050151560051b83010192506104ab826104b538610a66565b634e487b7160e01b845260229052602483fd5b93607f1693610a46565b8491346101a15760203660031901126101a1573563ffffffff60e01b81168091036101a15760209250637965db0b60e01b8114908115610b51575b5015158152f35b6301ffc9a760e01b14905083610b4a565b60005b838110610b755750506000910152565b8181015183820152602001610b65565b60409160208252610ba58151809281602086015260208686019101610b62565b601f01601f1916010190565b600435906001600160a01b0382168203610bc757565b600080fd5b602435906001600160a01b0382168203610bc757565b600081815260209060058252604092838220338352835260ff848320541615610c0b5750505050565b835167ffffffffffffffff9190336060820184811183821017610efd578752602a82528582019287368537825115610ee95760308453825191600192831015610ed5576078602185015360295b838111610e6b5750610e295790875194608086019086821090821117610e1557885260428552868501956060368837855115610e0157603087538551821015610e015790607860218701536041915b818311610d9357505050610d5157938593610d3793610d28604894610cff7f416363657373436f6e74726f6c3a206163636f756e742000000000000000000099610d4d9b519a8b978801525180926037880190610b62565b8401917001034b99036b4b9b9b4b733903937b6329607d1b603784015251809386840190610b62565b01036028810185520183610f11565b5162461bcd60e51b815291829160048301610b85565b0390fd5b60648587519062461bcd60e51b825280600483015260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152fd5b909192600f81166010811015610ded576f181899199a1a9b1b9c1cb0b131b232b360811b901a610dc3858961125b565b5360041c928015610dd957600019019190610ca7565b634e487b7160e01b82526011600452602482fd5b634e487b7160e01b83526032600452602483fd5b634e487b7160e01b81526032600452602490fd5b634e487b7160e01b87526041600452602487fd5b60648789519062461bcd60e51b825280600483015260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152fd5b90600f81166010811015610ec1576f181899199a1a9b1b9c1cb0b131b232b360811b901a610e99838761125b565b5360041c908015610ead5760001901610c58565b634e487b7160e01b88526011600452602488fd5b634e487b7160e01b89526032600452602489fd5b634e487b7160e01b87526032600452602487fd5b634e487b7160e01b86526032600452602486fd5b634e487b7160e01b86526041600452602486fd5b90601f8019910116810190811067ffffffffffffffff821117610f3357604052565b634e487b7160e01b600052604160045260246000fd5b906000918083526005602052604083209160018060a01b03169182845260205260ff604084205416610f7a57505050565b8083526005602052604083208284526020526040832060ff1981541690557ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b3393604051a4565b91908201809211610fce57565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b0390811691821561110657169182156110b55760008281528060205260408120549180831061106157604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815220611056828254610fc1565b9055604051908152a3565b60405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608490fd5b60405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608490fd5b6001600160a01b0390811691821561120a57169182156111ba5760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260018252604060002085600052825280604060002055604051908152a3565b60405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608490fd5b60405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b90815181101561126c570160200190565b634e487b7160e01b600052603260045260246000fdfea2646970667358221220ac42d1128cc57d68a0e10fd95393e1f2d255b243ebab270252ea7550eb31fde764736f6c63430008100033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "245:776:20:-:0;;;;;-1:-1:-1;;;;;;;245:776:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;245:776:20;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;245:776:20;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;245:776:20;;;;;;;;;;;;2044:13:3;245:776:20;;;;;;;;;;;;;;;;-1:-1:-1;245:776:20;;;;;;;;;;;;;;-1:-1:-1;245:776:20;;;;;;;;;;-1:-1:-1;245:776:20;;;;-1:-1:-1;;;;245:776:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;245:776:20;;;;;;;;;;;;;;;;;;;463:24;;245:776;;499:21;245:776;;-1:-1:-1;;;;;;245:776:20;;;;;;;;;;;;;;;;;-1:-1:-1;245:776:20;;;;;;-1:-1:-1;245:776:20;;;;;;;;;;;;;-1:-1:-1;245:776:20;;-1:-1:-1;245:776:20;;-1:-1:-1;245:776:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;245:776:20;;;;;;;;-1:-1:-1;245:776:20;;-1:-1:-1;245:776:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;245:776:20;;;;;;;;;;;;;;;;;;;;-1:-1:-1;245:776:20;;;-1:-1:-1;245:776:20;;;;;;;;;;;;;;-1:-1:-1;245:776:20;;;-1:-1:-1;245:776:20;;;;;-1:-1:-1;245:776:20;;;;;;;;;;;;-1:-1:-1;245:776:20;;-1:-1:-1;245:776:20;;-1:-1:-1;245:776:20;;;;;;;;;;-1:-1:-1;245:776:20;;;;;;;;;;;;;;;;-1:-1:-1;;245:776:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;245:776:20;;-1:-1:-1;245:776:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;245:776:20;;;;-1:-1:-1;245:776:20;;;;;;;;;;;;;;;;;;-1:-1:-1;245:776:20;;;-1:-1:-1;245:776:20;;;;;;;;;;;;-1:-1:-1;245:776:20;;;;;-1:-1:-1;245:776:20;;;;;;;;;-1:-1:-1;;;;;245:776:20;;;;;;;;;;:::o",
  "deployedSourceMap": "245:776:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;245:776:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5373:7:0;245:776:20;;;;:::i;:::-;;;;;4491:6:0;245:776:20;;2516:4:0;245:776:20;;;;4491:22:0;245:776:20;2516:4:0;:::i;:::-;5373:7;:::i;:::-;245:776:20;;;;;;;;;;;;;;;;;;;;;;;355:24;245:776;;;;;;;;;;;;;;;;;;;;:::i;:::-;963:3;245:776;;;-1:-1:-1;;;963:11:20;;-1:-1:-1;;;;;245:776:20;;;;;;;;;;;;;;;963:11;;;;;;;;;;;;245:776;;;949:10;:25;245:776;;355:24;;245:776;;;;3004:6:0;245:776:20;;;;;;;;;;;;;;;;;;;7556:23:0;7552:149;;245:776:20;;;;;;7552:149:0;245:776:20;;;3004:6:0;245:776:20;;;;;;;;;;;;;;;;;;;;;;949:10;245:776;7650:40:0;245:776:20;;;7650:40:0;7552:149;;;;;245:776:20;;;;;;;;;;;;;;;;;;;;;;;;;963:11;;;;;;;;;;;;;;;;;;:::i;:::-;;;245:776;;;;;;;;;;;;963:11;;;;;245:776;;;;963:11;;;;;;245:776;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3883:6:3;245:776:20;;:::i;:::-;;;719:10:12;;3883:6:3;:::i;:::-;245:776:20;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;719:10:12;;245:776:20;;;;;;;;;;;;;;;;;;;;;6811:35:3;;;;245:776:20;;;;6947:34:3;245:776:20;;;;719:10:12;6947:34:3;:::i;245:776:20:-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;245:776:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;245:776:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;245:776:20;;;;;-1:-1:-1;;;;245:776:20;;;;;;;;-1:-1:-1;245:776:20;;;;;;;;-1:-1:-1;;;245:776:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;3004:6:0;245:776:20;;;;;-1:-1:-1;;;;;245:776:20;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;245:776:20;;;;;;;;-1:-1:-1;;;;;245:776:20;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;355:24;245:776;;;;3004:6:0;245:776:20;;;;;804:10;245:776;;;;;;;;;;;;;-1:-1:-1;;;;;245:776:20;;8485:21:3;;245:776:20;;;;;;8613:22:3;8688:37;245:776:20;8613:22:3;245:776:20;8613:22:3;:::i;:::-;;245:776:20;;;;;;;;;;8645:28:3;245:776:20;;;8645:28:3;:::i;:::-;245:776:20;;;;;;;8688:37:3;245:776:20;;;;;-1:-1:-1;;;245:776:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;245:776:20;;;;;;;;;;;;;;;;;;;6040:38:3;245:776:20;;6040:38:3;245:776:20;;:::i;:::-;719:10:12;245:776:20;;;;;;;;-1:-1:-1;;;;;245:776:20;;;;;;;;;;;;;;6040:38:3;:::i;:::-;719:10:12;;6040:38:3;:::i;245:776:20:-;;;;;;;;;;;;;;296:14;245:776;;;-1:-1:-1;;;;;245:776:20;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;719:10:12;;-1:-1:-1;;;;;245:776:20;;6020:23:0;245:776:20;;;6124:7:0;245:776:20;;6124:7:0;:::i;245:776:20:-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;245:776:20;;;;;;;;;;;;;;;;;;;;;;3175:2:3;245:776:20;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;4491:6:0;245:776:20;;2516:4:0;245:776:20;;;;4491:22:0;245:776:20;2516:4:0;:::i;:::-;245:776:20;;;4491:6:0;245:776:20;;;;;;;-1:-1:-1;;;;;245:776:20;;;;;;;;;;;;;;;7556:23:0;7552:149;;245:776:20;;;;7552:149:0;245:776:20;;;4491:6:0;245:776:20;;;;;;;;;;;;;;;;;;;;;;719:10:12;245:776:20;7650:40:0;245:776:20;;;7650:40:0;245:776:20;;;;;;;;;;-1:-1:-1;;245:776:20;;;;;;;;;;;;4491:6:0;245:776:20;;;4491:22:0;245:776:20;;;;;;;;;;;;;;;;-1:-1:-1;;245:776:20;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;719:10:12;245:776:20;;;;;;10977:17:3;;;10957:37;;10953:243;;245:776:20;;5443:6:3;;;;;;:::i;10953:243::-;11018:26;;;245:776:20;;;;;;11145:25:3;245:776:20;;;5443:6:3;245:776:20;;719:10:12;11145:25:3;;:::i;:::-;10953:243;;;;;;;;245:776:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3331:12:3;245:776:20;;;;;;;;;;;;;;;;;;;;;;;4595:6:3;245:776:20;;:::i;:::-;;;719:10:12;;4595:6:3;:::i;245:776:20:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;245:776:20;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;245:776:20;;;;;-1:-1:-1;;;245:776:20;;;;;;;;-1:-1:-1;245:776:20;;;;;;;-1:-1:-1;;;245:776:20;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;245:776:20;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2714:47:0;;;:87;;;;245:776:20;;;;;;;2714:87:0;-1:-1:-1;;;937:40:15;;-1:-1:-1;2714:87:0;;;245:776:20;;;;;;;;-1:-1:-1;;245:776:20;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;245:776:20;;;;:::o;:::-;;;;-1:-1:-1;;;;;245:776:20;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;;;;245:776:20;;;;;;:::o;3334:103:0:-;-1:-1:-1;245:776:20;;;;;3004:6:0;245:776:20;;;;;;;719:10:12;245:776:20;;;;;;;;;;3805:23:0;3801:403;;3334:103;;;;:::o;3801:403::-;245:776:20;;;;;719:10:12;245:776:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1809:15:13;;;245:776:20;;;;;;;;;;1834:15:13;245:776:20;;;1834:15:13;245:776:20;1892:5:13;;;;;;2008:10;223:18;;245:776:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1809:15:13;;;245:776:20;;;;;;;;1834:15:13;245:776:20;;;1834:15:13;245:776:20;1859:132:13;1892:5;;;;;;2008:10;;;223:18;;245:776:20;;;3896:265:0;245:776:20;;;;;;;3844:349:0;245:776:20;;3896:265:0;;;;;245:776:20;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;245:776:20;;;;;;;;;;;;:::i;:::-;;3896:265:0;;;;;;;;;:::i;:::-;245:776:20;-1:-1:-1;;;3844:349:0;;245:776:20;;;1979:1:13;3844:349:0;;;:::i;:::-;;;;223:18:13;;245:776:20;;;;;;;223:18:13;;;1979:1;223:18;;;;;;245:776:20;223:18:13;245:776:20;;;223:18:13;;1899:3;1943:11;;;1951:3;1943:11;;1930:25;;;;;;-1:-1:-1;;;1930:25:13;;1918:37;;;;:::i;:::-;;1979:1;245:776:20;1899:3:13;245:776:20;;;;-1:-1:-1;;245:776:20;;1864:26:13;;;245:776:20;-1:-1:-1;;;245:776:20;;;1979:1:13;245:776:20;;;;1930:25:13;-1:-1:-1;;;245:776:20;;;1979:1:13;245:776:20;;;;;-1:-1:-1;;;245:776:20;;;1979:1:13;245:776:20;;;;;-1:-1:-1;;;245:776:20;;;1979:1:13;245:776:20;;;;223:18:13;;245:776:20;;;;;;;223:18:13;;;1979:1;223:18;;;;;;245:776:20;223:18:13;245:776:20;;;223:18:13;;1899:3;1943:11;1951:3;1943:11;;1930:25;;;;;;-1:-1:-1;;;1930:25:13;;1918:37;;;;:::i;:::-;;1979:1;245:776:20;1899:3:13;245:776:20;;;;-1:-1:-1;;245:776:20;1864:26:13;;245:776:20;-1:-1:-1;;;245:776:20;;;1979:1:13;245:776:20;;;;1930:25:13;-1:-1:-1;;;245:776:20;;;1979:1:13;245:776:20;;;;;-1:-1:-1;;;245:776:20;;;;;;;;;-1:-1:-1;;;245:776:20;;;;;;;;;-1:-1:-1;;;245:776:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;7878:234:0;;-1:-1:-1;245:776:20;;;;3004:6:0;245:776:20;;;;;;;;;;;;;;;;;;;;;;;;7957:149:0;;7878:234;;;:::o;7957:149::-;245:776:20;;;3004:6:0;245:776:20;;;;;;;;;;;;;;;;;;;;8055:40:0;719:10:12;245:776:20;;;8055:40:0;7878:234::o;245:776:20:-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;7475:651:3;-1:-1:-1;;;;;245:776:20;;;;7601:18:3;;245:776:20;;;7679:16:3;;;245:776:20;;7617:1:3;245:776:20;;;;;;;;;;7850:21:3;;;;245:776:20;;;;;8045:26:3;245:776:20;;;;;;;;;;;;;;;;;8006:23:3;245:776:20;;;8006:23:3;:::i;:::-;245:776:20;;;;;;;8045:26:3;7475:651::o;245:776:20:-;;;-1:-1:-1;;;245:776:20;;;;;;;;;;;;;;;;;-1:-1:-1;;;245:776:20;;;;;;;;;;-1:-1:-1;;;245:776:20;;;;;;;;;;;;;;;;;-1:-1:-1;;;245:776:20;;;;;;;;;;-1:-1:-1;;;245:776:20;;;;;;;;;;;;;;;;;-1:-1:-1;;;245:776:20;;;;;;;10110:370:3;-1:-1:-1;;;;;245:776:20;;;;10241:19:3;;245:776:20;;;10319:21:3;;;245:776:20;;;10441:32:3;245:776:20;;10258:1:3;245:776:20;;;;;10258:1:3;245:776:20;;10258:1:3;245:776:20;;;;;10258:1:3;245:776:20;;;;;;;10441:32:3;10110:370::o;245:776:20:-;;;-1:-1:-1;;;245:776:20;;;;;;;;;;;;;;;;;-1:-1:-1;;;245:776:20;;;;;;;;;;-1:-1:-1;;;245:776:20;;;;;;;;;;;;;;;;;-1:-1:-1;;;245:776:20;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.4;\n\nimport { Hub } from \"./Hub.sol\";\nimport { AccessControl } from \"@openzeppelin/contracts/access/AccessControl.sol\";\nimport { ERC20 } from \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\ncontract ERC20Token is ERC20, AccessControl {\n\n    Hub public hub;\n\n    bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\");\n\n    constructor(address hubAddress) ERC20(\"TEST TOKEN\", \"TEST\"){\n        require(hubAddress != address(0));\n\n        hub = Hub(hubAddress);\n    }\n\n    modifier onlyHubOwner() {\n        _checkHubOwner();\n        _;\n    }\n\n    function setupRole(address minter) public onlyHubOwner {\n        _setupRole(MINTER_ROLE, minter);\n    }\n\n    function mint(address to, uint256 amount) public {\n        require(hasRole(MINTER_ROLE, msg.sender), \"Caller is not a minter\");\n\n        _mint(to, amount);\n    }\n\n    function _checkHubOwner() internal view virtual {\n        require(msg.sender == hub.owner(), \"Fn can only be used by hub owner\");\n    }\n\n}\n",
  "sourcePath": "/Users/waving/Desktop/OriginTrail/dkg-evm-module/contracts/ERC20Token.sol",
  "ast": {
    "absolutePath": "project:/contracts/ERC20Token.sol",
    "exportedSymbols": {
      "AccessControl": [
        319
      ],
      "ERC20": [
        1091
      ],
      "ERC20Token": [
        6156
      ],
      "Hub": [
        6948
      ]
    },
    "id": 6157,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 6056,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:20"
      },
      {
        "absolutePath": "project:/contracts/Hub.sol",
        "file": "./Hub.sol",
        "id": 6058,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 6157,
        "sourceUnit": 6949,
        "src": "58:32:20",
        "symbolAliases": [
          {
            "foreign": {
              "id": 6057,
              "name": "Hub",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 6948,
              "src": "67:3:20",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
        "file": "@openzeppelin/contracts/access/AccessControl.sol",
        "id": 6060,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 6157,
        "sourceUnit": 320,
        "src": "91:81:20",
        "symbolAliases": [
          {
            "foreign": {
              "id": 6059,
              "name": "AccessControl",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 319,
              "src": "100:13:20",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 6062,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 6157,
        "sourceUnit": 1092,
        "src": "173:70:20",
        "symbolAliases": [
          {
            "foreign": {
              "id": 6061,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1091,
              "src": "182:5:20",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 6063,
              "name": "ERC20",
              "nameLocations": [
                "268:5:20"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1091,
              "src": "268:5:20"
            },
            "id": 6064,
            "nodeType": "InheritanceSpecifier",
            "src": "268:5:20"
          },
          {
            "baseName": {
              "id": 6065,
              "name": "AccessControl",
              "nameLocations": [
                "275:13:20"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 319,
              "src": "275:13:20"
            },
            "id": 6066,
            "nodeType": "InheritanceSpecifier",
            "src": "275:13:20"
          }
        ],
        "canonicalName": "ERC20Token",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 6156,
        "linearizedBaseContracts": [
          6156,
          319,
          3335,
          3347,
          392,
          1091,
          1238,
          1169,
          2583
        ],
        "name": "ERC20Token",
        "nameLocation": "254:10:20",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "365a86fc",
            "id": 6069,
            "mutability": "mutable",
            "name": "hub",
            "nameLocation": "307:3:20",
            "nodeType": "VariableDeclaration",
            "scope": 6156,
            "src": "296:14:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Hub_$6948",
              "typeString": "contract Hub"
            },
            "typeName": {
              "id": 6068,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 6067,
                "name": "Hub",
                "nameLocations": [
                  "296:3:20"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 6948,
                "src": "296:3:20"
              },
              "referencedDeclaration": 6948,
              "src": "296:3:20",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Hub_$6948",
                "typeString": "contract Hub"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "d5391393",
            "id": 6074,
            "mutability": "constant",
            "name": "MINTER_ROLE",
            "nameLocation": "341:11:20",
            "nodeType": "VariableDeclaration",
            "scope": 6156,
            "src": "317:62:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 6070,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "317:7:20",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "4d494e5445525f524f4c45",
                  "id": 6072,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "365:13:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                    "typeString": "literal_string \"MINTER_ROLE\""
                  },
                  "value": "MINTER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                    "typeString": "literal_string \"MINTER_ROLE\""
                  }
                ],
                "id": 6071,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "355:9:20",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 6073,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "355:24:20",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 6098,
              "nodeType": "Block",
              "src": "445:82:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 6089,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 6084,
                          "name": "hubAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6076,
                          "src": "463:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 6087,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "485:1:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 6086,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "477:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 6085,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "477:7:20",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 6088,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "477:10:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "463:24:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 6083,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "455:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 6090,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "455:33:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6091,
                  "nodeType": "ExpressionStatement",
                  "src": "455:33:20"
                },
                {
                  "expression": {
                    "id": 6096,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6092,
                      "name": "hub",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6069,
                      "src": "499:3:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Hub_$6948",
                        "typeString": "contract Hub"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 6094,
                          "name": "hubAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6076,
                          "src": "509:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 6093,
                        "name": "Hub",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6948,
                        "src": "505:3:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Hub_$6948_$",
                          "typeString": "type(contract Hub)"
                        }
                      },
                      "id": 6095,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "505:15:20",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Hub_$6948",
                        "typeString": "contract Hub"
                      }
                    },
                    "src": "499:21:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Hub_$6948",
                      "typeString": "contract Hub"
                    }
                  },
                  "id": 6097,
                  "nodeType": "ExpressionStatement",
                  "src": "499:21:20"
                }
              ]
            },
            "id": 6099,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "5445535420544f4b454e",
                    "id": 6079,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "424:12:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_8cc07e74fc4859642fc3155159df3dd4457185a8cd596d0181af35ff8c613552",
                      "typeString": "literal_string \"TEST TOKEN\""
                    },
                    "value": "TEST TOKEN"
                  },
                  {
                    "hexValue": "54455354",
                    "id": 6080,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "438:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_852daa74cc3c31fe64542bb9b8764cfb91cc30f9acf9389071ffb44a9eefde46",
                      "typeString": "literal_string \"TEST\""
                    },
                    "value": "TEST"
                  }
                ],
                "id": 6081,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 6078,
                  "name": "ERC20",
                  "nameLocations": [
                    "418:5:20"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1091,
                  "src": "418:5:20"
                },
                "nodeType": "ModifierInvocation",
                "src": "418:27:20"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6077,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6076,
                  "mutability": "mutable",
                  "name": "hubAddress",
                  "nameLocation": "406:10:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 6099,
                  "src": "398:18:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6075,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "398:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "397:20:20"
            },
            "returnParameters": {
              "id": 6082,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "445:0:20"
            },
            "scope": 6156,
            "src": "386:141:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6105,
              "nodeType": "Block",
              "src": "557:44:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 6101,
                      "name": "_checkHubOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6155,
                      "src": "567:14:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$__$",
                        "typeString": "function () view"
                      }
                    },
                    "id": 6102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "567:16:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6103,
                  "nodeType": "ExpressionStatement",
                  "src": "567:16:20"
                },
                {
                  "id": 6104,
                  "nodeType": "PlaceholderStatement",
                  "src": "593:1:20"
                }
              ]
            },
            "id": 6106,
            "name": "onlyHubOwner",
            "nameLocation": "542:12:20",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 6100,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "554:2:20"
            },
            "src": "533:68:20",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 6118,
              "nodeType": "Block",
              "src": "662:48:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6114,
                        "name": "MINTER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6074,
                        "src": "683:11:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 6115,
                        "name": "minter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6108,
                        "src": "696:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 6113,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 227,
                      "src": "672:10:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 6116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "672:31:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6117,
                  "nodeType": "ExpressionStatement",
                  "src": "672:31:20"
                }
              ]
            },
            "functionSelector": "c28637ac",
            "id": 6119,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 6111,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 6110,
                  "name": "onlyHubOwner",
                  "nameLocations": [
                    "649:12:20"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6106,
                  "src": "649:12:20"
                },
                "nodeType": "ModifierInvocation",
                "src": "649:12:20"
              }
            ],
            "name": "setupRole",
            "nameLocation": "616:9:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6109,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6108,
                  "mutability": "mutable",
                  "name": "minter",
                  "nameLocation": "634:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 6119,
                  "src": "626:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6107,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "626:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "625:16:20"
            },
            "returnParameters": {
              "id": 6112,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "662:0:20"
            },
            "scope": 6156,
            "src": "607:103:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6140,
              "nodeType": "Block",
              "src": "765:112:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 6128,
                            "name": "MINTER_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6074,
                            "src": "791:11:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 6129,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "804:3:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 6130,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "808:6:20",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "804:10:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 6127,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79,
                          "src": "783:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 6131,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "783:32:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616c6c6572206973206e6f742061206d696e746572",
                        "id": 6132,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "817:24:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_71abfcf6e817aaed3ce6663958bac2a3a82999ed0036c98a95b29f350f04cedf",
                          "typeString": "literal_string \"Caller is not a minter\""
                        },
                        "value": "Caller is not a minter"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_71abfcf6e817aaed3ce6663958bac2a3a82999ed0036c98a95b29f350f04cedf",
                          "typeString": "literal_string \"Caller is not a minter\""
                        }
                      ],
                      "id": 6126,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "775:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "775:67:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6134,
                  "nodeType": "ExpressionStatement",
                  "src": "775:67:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6136,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6121,
                        "src": "859:2:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6137,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6123,
                        "src": "863:6:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6135,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 908,
                      "src": "853:5:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 6138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "853:17:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6139,
                  "nodeType": "ExpressionStatement",
                  "src": "853:17:20"
                }
              ]
            },
            "functionSelector": "40c10f19",
            "id": 6141,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "725:4:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6124,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6121,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "738:2:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 6141,
                  "src": "730:10:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6120,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "730:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6123,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "750:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 6141,
                  "src": "742:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6122,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "742:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "729:28:20"
            },
            "returnParameters": {
              "id": 6125,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "765:0:20"
            },
            "scope": 6156,
            "src": "716:161:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6154,
              "nodeType": "Block",
              "src": "931:87:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 6150,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 6145,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "949:3:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 6146,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "953:6:20",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "949:10:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 6147,
                              "name": "hub",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6069,
                              "src": "963:3:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Hub_$6948",
                                "typeString": "contract Hub"
                              }
                            },
                            "id": 6148,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "967:5:20",
                            "memberName": "owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 433,
                            "src": "963:9:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 6149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "963:11:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "949:25:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "466e2063616e206f6e6c79206265207573656420627920687562206f776e6572",
                        "id": 6151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "976:34:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_65eb25c8895d45881ac65ee79a9735e56a3669d86fb11df8b35608f2530ece3c",
                          "typeString": "literal_string \"Fn can only be used by hub owner\""
                        },
                        "value": "Fn can only be used by hub owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_65eb25c8895d45881ac65ee79a9735e56a3669d86fb11df8b35608f2530ece3c",
                          "typeString": "literal_string \"Fn can only be used by hub owner\""
                        }
                      ],
                      "id": 6144,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "941:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "941:70:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6153,
                  "nodeType": "ExpressionStatement",
                  "src": "941:70:20"
                }
              ]
            },
            "id": 6155,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_checkHubOwner",
            "nameLocation": "892:14:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6142,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "906:2:20"
            },
            "returnParameters": {
              "id": 6143,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "931:0:20"
            },
            "scope": 6156,
            "src": "883:135:20",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 6157,
        "src": "245:776:20",
        "usedErrors": []
      }
    ],
    "src": "33:989:20"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.16+commit.07a7930e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.10",
  "updatedAt": "2022-12-12T09:47:52.065Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}